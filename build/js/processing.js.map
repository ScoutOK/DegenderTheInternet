{"version":3,"sources":["webpack:///./text-processing/processing.js","webpack:///./~/compromise/builds/compromise.js"],"names":["nlp","require","pronouns","he","him","his","himself","she","her","hers","herself","He","Him","His","Himself","She","Her","Hers","Herself","nouns","man","Man","men","Men","mens","Mens","boy","Boy","boys","Boys","woman","Woman","women","Women","womens","Womens","girl","Girl","girls","Girls","husband","Husbane","wife","Wife","sister","Sister","adj","feisty","frisky","irritable","ambitious","abrasive","nasty","bitchy","bossy","bubbly","curvy","ditzy","emotional","frigid","frumpy","hysterical","illogical","irrational","pushy","sassy","shrill","exotic","brash","catty","slutty","pretty","handsome","studly","charming","aggressive","cocky","arrogant","pageStats","adjectives","console","log","chrome","runtime","onMessage","addListener","request","sender","sendResponse","topBar","document","createElement","setAttribute","body","insertBefore","firstChild","allElements","getElementsByTagName","copyHTML","HTMLarr","i","length","push","innerHTML","originalHTML","forEach","string","data","convert","eleArr","split","j","end","test","substr","join","offsetHeight","childNodes","style","marginTop","revertPage","className","color","speech","changed","getElementsByClassName","decolor","addListens","getElementById","addEventListener","evt","target","message","documentElement","lang","alert","pageStatus","error"],"mappings":";;;;;AAAA;;AAEA,KAAMA,MAAM,mBAAAC,CAAQ,GAAR,CAAZ;;AAEA,KAAMC,WAAW;AACfC,OAAI,MADW;AAEfC,QAAK,MAFU;AAGfC,QAAK,OAHU;AAIfC,YAAS,UAJM;AAKfC,QAAK,MALU;AAMfC,QAAK,MANU;AAOfC,SAAM,QAPS;AAQfC,YAAS,UARM;AASfC,OAAI,MATW;AAUfC,QAAK,MAVU;AAWfC,QAAK,OAXU;AAYfC,YAAS,UAZM;AAafC,QAAK,MAbU;AAcfC,QAAK,MAdU;AAefC,SAAM,QAfS;AAgBfC,YAAS;AAhBM,EAAjB;;AAmBA,KAAMC,QAAQ;AACZC,QAAM,QADM;AAEZC,QAAK,QAFO;AAGZC,QAAK,QAHO;AAIZC,QAAK,QAJO;AAKZC,SAAM,UALM;AAMZC,SAAM,UANM;AAOZC,QAAK,OAPO;AAQZC,QAAK,OARO;AASZC,SAAM,UATM;AAUZC,SAAM,UAVM;AAWZ,YAAS,YAXG;AAYZ,YAAS,YAZG;AAaZC,UAAO,QAbK;AAcZC,UAAO,QAdK;AAeZC,UAAO,QAfK;AAgBZC,UAAO,QAhBK;AAiBZC,WAAQ,UAjBI;AAkBZC,WAAQ,UAlBI;AAmBZC,SAAM,OAnBM;AAoBZC,SAAM,OApBM;AAqBZC,UAAO,UArBK;AAsBZC,UAAO,UAtBK;AAuBZ,aAAU,YAvBE;AAwBZ,aAAU,YAxBE;AAyBZC,YAAS,QAzBG;AA0BZC,YAAS,QA1BG;AA2BZC,SAAM,QA3BM;AA4BZC,SAAM,QA5BM;AA6BZC,WAAQ,SA7BI;AA8BZC,WAAQ;AA9BI,EAAd;;AAiCA,KAAMC,MAAM;AACVC,WAAQ,QADE;AAEVC,WAAQ,UAFE;AAGVC,cAAW,SAHD;AAIVC,cAAW,YAJD;AAKVC,aAAU,YALA;AAMVC,UAAO,cANG;AAOVC,WAAQ,MAPE;AAQVC,UAAO,UARG;AASVC,WAAQ,UATE;AAUVC,UAAO,QAVG;AAWVC,UAAO,UAXG;AAYVC,cAAW,aAZD;AAaVC,WAAQ,SAbE;AAcVC,WAAQ,YAdE;AAeV,uBAAoB,UAfV;AAgBVC,eAAY,SAhBF;AAiBVC,cAAW,eAjBD;AAkBVC,eAAY,WAlBF;AAmBVC,UAAO,WAnBG;AAoBVC,UAAO,MApBG;AAqBVC,WAAQ,WArBE;AAsBVC,WAAQ,SAtBE;AAuBVC,UAAO,UAvBG;AAwBVC,UAAO,MAxBG;AAyBVC,WAAQ,iBAzBE,EAyBgB;AAC1BC,WAAQ,YA1BE;AA2BVC,aAAU,YA3BA;AA4BVC,WAAQ,KA5BE;AA6BVC,aAAU,UA7BA;AA8BVC,eAAY,YA9BF;AA+BVC,UAAO,gBA/BG;AAgCVC,aAAU;AAhCA,EAAZ;;AAmCA;AACA,KAAMC,YAAY;AAChB5E,aAAU,EADM;AAEhBiB,UAAO,EAFS;AAGhB4D,eAAY;AAHI,EAAlB;;AAMAC,SAAQC,GAAR,CAAY,6CAAZ;AACAC,QAAOC,OAAP,CAAeC,SAAf,CAAyBC,WAAzB,CAAqC,UAASC,OAAT,EAAkBC,MAAlB,EAA0BC,YAA1B,EAAuC;AACxER,WAAQC,GAAR,CAAY,aAAZ,EAA2BK,OAA3B;;AAEF;AACA,OAAIG,SAASC,SAASC,aAAT,CAAuB,KAAvB,CAAb;;AAEAF,UAAOG,YAAP,CAAoB,IAApB,EAA0B,cAA1B;AACA;;AAEAF,YAASG,IAAT,CAAcC,YAAd,CAA2BL,MAA3B,EAAmCC,SAASG,IAAT,CAAcE,UAAjD;;AAEA;AACA,OAAIC,cAAcN,SAASG,IAAT,CAAcI,oBAAd,CAAmC,GAAnC,CAAlB;;AAEA,OAAMC,WAAW,SAAXA,QAAW,GAAK;AACpB,SAAIC,UAAU,EAAd;AACA,UAAK,IAAIC,IAAG,CAAZ,EAAeA,IAAIJ,YAAYK,MAA/B,EAAuCD,GAAvC,EAA4C;AAC1CD,eAAQG,IAAR,CAAaN,YAAYI,CAAZ,EAAeG,SAA5B;AACD;AACD,YAAOJ,OAAP;AACD,IAND;;AAQA,OAAIK,eAAeN,UAAnB;;AAEA;AACAM,gBAAaC,OAAb,CAAqB,kBAAU;AAC7BzB,aAAQC,GAAR,CAAYyB,MAAZ,EAAoB1G,IAAI0G,MAAJ,EAAYC,IAAZ,EAApB;AACA;AACD,IAHD;;AAKA;;AAEA,OAAMC,UAAU,SAAVA,OAAU,GAAM;AACpB;AACA,UAAK,IAAIR,IAAI,CAAb,EAAgBA,IAAIJ,YAAYK,MAAhC,EAAwCD,GAAxC,EAA6C;AAC3C,WAAIS,SAASb,YAAYI,CAAZ,EAAeG,SAAf,CAAyBO,KAAzB,CAA+B,GAA/B,CAAb;AACA,YAAK,IAAIC,IAAE,CAAX,EAAcA,IAAIF,OAAOR,MAAzB,EAAiCU,GAAjC,EAAsC;AACpC;AACA,aAAIC,MAAM,EAAV;AACA,aAAI,CAAC,aAAaC,IAAb,CAAkBJ,OAAOE,CAAP,EAAUF,OAAOE,CAAP,EAAUV,MAAV,GAAmB,CAA7B,CAAlB,CAAL,EAAyD;AACvDW,iBAAMH,OAAOE,CAAP,EAAUF,OAAOE,CAAP,EAAUV,MAAV,GAAmB,CAA7B,CAAN;AACAQ,kBAAOE,CAAP,IAAYF,OAAOE,CAAP,EAAUG,MAAV,CAAiB,CAAjB,EAAoBL,OAAOE,CAAP,EAAUV,MAAV,GAAmB,CAAvC,CAAZ;AACD;AACD,aAAInG,SAAS2G,OAAOE,CAAP,CAAT,CAAJ,EAAyB;AACvB,eAAIjC,UAAU5E,QAAV,CAAmB2G,OAAOE,CAAP,CAAnB,CAAJ,EAAmCjC,UAAU5E,QAAV,CAAmB2G,OAAOE,CAAP,CAAnB,IAAnC,KACKjC,UAAU5E,QAAV,CAAmB2G,OAAOE,CAAP,CAAnB,IAAgC,CAAhC;AACLF,kBAAOE,CAAP,IAAY,uCAAuC7G,SAAS2G,OAAOE,CAAP,CAAT,CAAvC,GAA4D,SAA5D,GAAwEC,GAApF;AACD,UAJD,MAIO,IAAI7F,MAAM0F,OAAOE,CAAP,CAAN,CAAJ,EAAsB;AAC3B,eAAIjC,UAAU3D,KAAV,CAAgB0F,OAAOE,CAAP,CAAhB,CAAJ,EAAgCjC,UAAU3D,KAAV,CAAgB0F,OAAOE,CAAP,CAAhB,IAAhC,KACKjC,UAAU3D,KAAV,CAAgB0F,OAAOE,CAAP,CAAhB,IAA6B,CAA7B;AACLF,kBAAOE,CAAP,IAAY,oCAAoC5F,MAAM0F,OAAOE,CAAP,CAAN,CAApC,GAAuD,SAAvD,GAAmEC,GAA/E;AACD,UAJM,MAIA,IAAIlE,IAAI+D,OAAOE,CAAP,CAAJ,CAAJ,EAAoB;AACzB,eAAIjC,UAAUC,UAAV,CAAqB8B,OAAOE,CAAP,CAArB,CAAJ,EAAqCjC,UAAUC,UAAV,CAAqB8B,OAAOE,CAAP,CAArB,IAArC,KACKjC,UAAUC,UAAV,CAAqB8B,OAAOE,CAAP,CAArB,IAAkC,CAAlC;AACLF,kBAAOE,CAAP,IAAY,mCAAmCjE,IAAI+D,OAAOE,CAAP,CAAJ,CAAnC,GAAoD,SAApD,GAAgEC,GAA5E;AACD,UAJM,MAIA;AACLH,kBAAOE,CAAP,IAAYF,OAAOE,CAAP,IAAYC,GAAxB;AACD;AACF;AACDhB,mBAAYI,CAAZ,EAAeG,SAAf,GAA2BM,OAAOM,IAAP,CAAY,GAAZ,CAA3B;AACD;AACD;AACAnC,aAAQC,GAAR,CAAYH,SAAZ;AACA,SAAIsC,eAAe1B,SAASG,IAAT,CAAcwB,UAAd,CAAyB,CAAzB,EAA4BD,YAA/C;AACA1B,cAASG,IAAT,CAAcwB,UAAd,CAAyB,CAAzB,EAA4BC,KAA5B,CAAkCC,SAAlC,GAA8CH,eAAe,IAA7D;AACD,IAjCD;;AAmCA,OAAMI,aAAa,SAAbA,UAAa,GAAM;AACvB,UAAK,IAAIpB,IAAG,CAAZ,EAAeA,IAAIJ,YAAYK,MAA/B,EAAuCD,GAAvC,EAA4C;AAC1CJ,mBAAYI,CAAZ,EAAeG,SAAf,GAA2BC,aAAaJ,CAAb,CAA3B;AACD;AACDV,cAASG,IAAT,CAAcwB,UAAd,CAAyB,CAAzB,EAA4BC,KAA5B,CAAkCC,SAAlC,GAA8C,KAA9C;AACA9B,YAAOgC,SAAP,GAAmB,MAAnB;AACD,IAND;;AAQA,OAAMC,QAAQ,SAARA,KAAQ,CAACC,MAAD,EAAY;AACxB,SAAIC,UAAUlC,SAASmC,sBAAT,CAAgC,eAAeF,MAA/C,CAAd;AACA,UAAK,IAAIvB,IAAI,CAAb,EAAgBA,IAAIwB,QAAQvB,MAA5B,EAAoCD,GAApC,EAAyC;AACvCwB,eAAQxB,CAAR,EAAWqB,SAAX,GAAuBG,QAAQxB,CAAR,EAAWqB,SAAX,GAAuB,mBAA9C;AACD;AACF,IALD;;AAOA,OAAMK,UAAU,SAAVA,OAAU,CAACH,MAAD,EAAY;AAC1B,SAAIC,UAAUlC,SAASmC,sBAAT,CAAgC,eAAeF,MAA/C,CAAd;AACA,UAAK,IAAIvB,IAAI,CAAb,EAAgBA,IAAIwB,QAAQvB,MAA5B,EAAoCD,GAApC,EAAyC;AACvCwB,eAAQxB,CAAR,EAAWqB,SAAX,GAAuB,eAAeE,MAAtC;AACD;AACF,IALD;;AAOA,OAAMI,aAAa,SAAbA,UAAa,GAAM;AACvBrC,cAASsC,cAAT,CAAwB,QAAxB,EAAkCC,gBAAlC,CAAmD,OAAnD,EAA4DT,UAA5D;AACA9B,cAASsC,cAAT,CAAwB,SAAxB,EAAmCC,gBAAnC,CAAoD,OAApD,EAA6D,UAACC,GAAD,EAAS;AACpE,WAAIA,IAAIC,MAAJ,CAAWV,SAAX,KAAyB,QAA7B,EAAsC;AACpCS,aAAIC,MAAJ,CAAWV,SAAX,GAAuB,EAAvB;AACAK,iBAAQ,SAAR;AACD,QAHD,MAGO;AACLJ,eAAM,SAAN;AACAQ,aAAIC,MAAJ,CAAWV,SAAX,GAAuB,QAAvB;AACD;AACF,MARD;AASA/B,cAASsC,cAAT,CAAwB,SAAxB,EAAmCC,gBAAnC,CAAoD,OAApD,EAA6D,UAACC,GAAD,EAAS;AACpE,WAAIA,IAAIC,MAAJ,CAAWV,SAAX,KAAyB,QAA7B,EAAsC;AACpCS,aAAIC,MAAJ,CAAWV,SAAX,GAAuB,EAAvB;AACAK,iBAAQ,KAAR;AACD,QAHD,MAGO;AACLJ,eAAM,KAAN;AACAQ,aAAIC,MAAJ,CAAWV,SAAX,GAAuB,QAAvB;AACD;AACF,MARD;AASA/B,cAASsC,cAAT,CAAwB,UAAxB,EAAoCC,gBAApC,CAAqD,OAArD,EAA8D,UAACC,GAAD,EAAS;AACrE,WAAIA,IAAIC,MAAJ,CAAWV,SAAX,KAAyB,QAA7B,EAAuC;AACrCS,aAAIC,MAAJ,CAAWV,SAAX,GAAuB,EAAvB;AACAK,iBAAQ,MAAR;AACD,QAHD,MAGO;AACLJ,eAAM,MAAN;AACAQ,aAAIC,MAAJ,CAAWV,SAAX,GAAuB,QAAvB;AACD;AACF,MARD;AASD,IA7BD;;AA+BA,WAAQnC,QAAQ8C,OAAhB;AACE,UAAK,SAAL;AACE,WAAI1C,SAAS2C,eAAT,CAAyBC,IAAzB,KAAkC,IAAlC,IAA0C5C,SAAS2C,eAAT,CAAyBC,IAAzB,KAAkC,OAAhF,EAAyF;AACvFC,eAAM,uNAAN;AACA;AACD;AACD9C,cAAOgC,SAAP,GAAmB,EAAnB;AACAb;AACAmB;AACAvC,oBAAa,EAACgD,YAAY,WAAb,EAAb;AACA;AACF,UAAK,QAAL;AACEhB;AACAhC,oBAAa,EAACgD,YAAY,UAAb,EAAb;AACA;AACF;AACEhD,oBAAa,EAACiD,OAAO,2BAAR,EAAb;AAhBJ;AAkBD,EA1ID,E;;;;;;;yBCnGA,2DAAa,SAA2D,mBAAmB,gDAAgD,aAAa,KAAK,MAAM,gCAAgC,SAAS,qCAAqC,SAAS,mCAAmC,OAAO,KAAK,OAAO,aAAa,aAAa,0BAA0B,0BAA0B,gBAAgB,UAAU,UAAU,0CAA0C,8BAAwB,oBAAoB,8CAA8C,kCAAkC,YAAY,YAAY,mCAAmC,iBAAiB,gBAAgB,sBAAsB,oBAAoB,0CAA0C,YAAY,WAAW,YAAY,SAAS,GAAG;AACvyB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA,EAAC,GAAG;AACJ;AACA;AACA;;AAEA;;AAEA;AACA,MAAK,eAAe;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,EAAC,EAAE,WAAW;AACd;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,EAAC,EAAE,WAAW;AACd;;AAEA;;AAEA;AACA;;AAEA,EAAC,GAAG;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,QAAQ;AACvB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAgB,UAAU;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAC,GAAG;AACJ;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,EAAC,GAAG;AACJ;;AAEA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA,iDAAgD;AAChD;AACA;AACA;AACA,kBAAiB,OAAO;AACxB;AACA,qBAAoB,iBAAiB;AACrC;AACA;AACA;AACA;AACA;;AAEA,iDAAgD;AAChD;AACA;AACA;AACA,kBAAiB,OAAO;AACxB;AACA,qBAAoB,iBAAiB;AACrC;AACA;AACA;AACA;AACA;;AAEA,EAAC,GAAG;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,EAAC,EAAE,+pBAA+pB;AAClqB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAiB,OAAO;AACxB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,mCAAkC;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAC,EAAE,0NAA0N;AAC7N;;AAEA;AACA;AACA;;AAEA,EAAC,GAAG;AACJ;;AAEA;AACA;AACA;;AAEA,EAAC,GAAG;AACJ;;AAEA;;AAEA,EAAC,GAAG;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,iBAAiB;AAChC;AACA,mBAAkB,iBAAiB;AACnC;AACA;AACA;AACA;;AAEA,EAAC,EAAE,yEAAyE;AAC5E;;AAEA;AACA;AACA;AACA;;AAEA,EAAC,GAAG;AACJ;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,gBAAe,iBAAiB;AAChC;AACA,mBAAkB,iBAAiB;AACnC;AACA;AACA;AACA;;AAEA,EAAC,GAAG;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAC,GAAG;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA,EAAC,IAAI;AACL;AACA;AACA;AACA,EAAC,IAAI;;AAEL;AACA;AACA;AACA;;AAEA,EAAC,GAAG;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAC,GAAG;AACJ;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,EAAC,EAAE,WAAW;AACd;;AAEA;;AAEA;;AAEA,EAAC,GAAG;AACJ;;AAEA;AACA;AACA;;AAEA,EAAC,GAAG;AACJ;;AAEA;;AAEA,EAAC,GAAG;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAC,GAAG;AACJ;AACA;AACA;;AAEA;;AAEA,EAAC,GAAG;AACJ;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,EAAC,GAAG;AACJ;;AAEA;AACA;;AAEA,EAAC,GAAG;AACJ;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,gBAAe,iBAAiB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAC,EAAE,WAAW;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,gBAAe,iBAAiB;AAChC;AACA;AACA,iBAAgB,oBAAoB;AACpC;AACA;AACA;AACA,kBAAiB,wBAAwB;AACzC;AACA;AACA;AACA;;AAEA,EAAC,EAAE,2CAA2C;AAC9C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;;AAEJ,EAAC,GAAG;AACJ;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,EAAC,EAAE,WAAW;AACd;;AAEA;AACA;;AAEA;;AAEA,EAAC,GAAG;AACJ;;AAEA;AACA;;AAEA,EAAC,GAAG;AACJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,OAAO;AACtB;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;;AAEA,EAAC,GAAG;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,EAAC,GAAG;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,oBAAoB;AACrC;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;;AAEA,EAAC,EAAE,eAAe;AAClmBAAmB;AACteAAe;;AAEpB;AACA,MAAK,eAAe;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,EAAC,EAAE,WAAW;AACd;;AAEA,qGAAoG,mBAAmB,EAAE,mBAAmB,8HAA8H;;AAE1Q;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,kBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAC,EAAE,oBAAoB;AACvB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAiB;AACjB,EAAC;AACD,oBAAmB;AACnB,EAAC;AACD,oBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAC,qIAAqI;AACtI,EAAC,EAAE,sEAAsE;AACzE;;AAEA,qGAAoG,mBAAmB,EAAE,mBAAmB,8HAA8H;;AAE1Q;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAC,EAAE,YAAY;AACf;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG,IAAI;AACP;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA,EAAC,EAAE,mGAAmG;AACtG;AACA;;AAEA,iCAAgC,2CAA2C,gBAAgB,kBAAkB,OAAO,2BAA2B,wDAAwD,gCAAgC,uDAAuD,2DAA2D,EAAE,EAAE,yDAAyD,qEAAqE,6DAA6D,oBAAoB,GAAG,EAAE;;AAEjjB,kDAAiD,0CAA0C,0DAA0D,EAAE;;AAEvJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;;AAEA,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA,UAAS;AACT;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED,EAAC,EAAE,yvBAAyvB;AAC5vB;;AAEA,qGAAoG,mBAAmB,EAAE,mBAAmB,8HAA8H;;AAE1Q;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,WAAU;AACV;AACA,6BAA4B;AAC5B,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,sBAAqB,sBAAsB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,IAAG;AACH;AACA;;AAEA;;AAEA,EAAC,EAAE,kBAAkB;AACrB;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;;AAEA,EAAC,GAAG;AACJ;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,QAAO;AACP;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,MAAK;;AAEL;AACA;AACA,yBAAwB,sBAAsB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;;AAER;AACA;AACA,yBAAwB,sBAAsB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;;AAER;AACA;AACA,sBAAqB,sBAAsB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,sBAAqB,sBAAsB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;;AAEA,EAAC,GAAG;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,MAAK;AACL;AACA,IAAG;;AAEH;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,IAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA,EAAC,GAAG;AACJ;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;AACH;AACA;AACA;AACA,MAAK;AACL,IAAG;AACH;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;AACH;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;AACH;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,MAAK;AACL,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,MAAK;AACL;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,QAAO;AACP,MAAK;AACL;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,EAAC,EAAE,0BAA0B;AAC7B;AACA;;AAEA;AACA;AACA,kBAAiB,wBAAwB;AACzC,oBAAmB,iCAAiC;AACpD;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA,EAAC,GAAG;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;AACH;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;;AAEA,EAAC,GAAG;AACJ;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;;AAEA,EAAC,EAAE,eAAe;AAClB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA,EAAC,GAAG;AACJ;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,QAAO;AACP;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,QAAO;AACP;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,QAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;;AAEA,EAAC,GAAG;AACJ;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,QAAO;AACP;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,QAAO;AACP;AACA,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT,QAAO;AACP;AACA;;AAEA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;;AAEA,EAAC,GAAG;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAC,EAAE,iEAAiE;AACpE;;AAEA,iCAAgC,2CAA2C,gBAAgB,kBAAkB,OAAO,2BAA2B,wDAAwD,gCAAgC,uDAAuD,2DAA2D,EAAE,EAAE,yDAAyD,qEAAqE,6DAA6D,oBAAoB,GAAG,EAAE;;AAEjjB,kDAAiD,0CAA0C,0DAA0D,EAAE;;AAEvJ,kDAAiD,aAAa,uFAAuF,EAAE,uFAAuF;;AAE9O,2CAA0C,+DAA+D,qGAAqG,EAAE,yEAAyE,eAAe,yEAAyE,EAAE,EAAE,uHAAuH;;AAE5e;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA,EAAC;;AAED;;AAEA,EAAC,EAAE,iBAAiB;AACpB;;AAEA,iCAAgC,2CAA2C,gBAAgB,kBAAkB,OAAO,2BAA2B,wDAAwD,gCAAgC,uDAAuD,2DAA2D,EAAE,EAAE,yDAAyD,qEAAqE,6DAA6D,oBAAoB,GAAG,EAAE;;AAEjjB,kDAAiD,0CAA0C,0DAA0D,EAAE;;AAEvJ,kDAAiD,aAAa,uFAAuF,EAAE,uFAAuF;;AAE9O,2CAA0C,+DAA+D,qGAAqG,EAAE,yEAAyE,eAAe,yEAAyE,EAAE,EAAE,uHAAuH;;AAE5e;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA,EAAC;;AAED;;AAEA,EAAC,EAAE,gCAAgC;AACnC;;AAEA,iCAAgC,2CAA2C,gBAAgB,kBAAkB,OAAO,2BAA2B,wDAAwD,gCAAgC,uDAAuD,2DAA2D,EAAE,EAAE,yDAAyD,qEAAqE,6DAA6D,oBAAoB,GAAG,EAAE;;AAEjjB,kDAAiD,0CAA0C,0DAA0D,EAAE;;AAEvJ,kDAAiD,aAAa,uFAAuF,EAAE,uFAAuF;;AAE9O,2CAA0C,+DAA+D,qGAAqG,EAAE,yEAAyE,eAAe,yEAAyE,EAAE,EAAE,uHAAuH;;AAE5e;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,IAAG;;AAEH;AACA,EAAC;;AAED;;AAEA,EAAC,EAAE,kCAAkC;AACrC;AACA;;AAEA;;AAEA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA,EAAC;AACD;;AAEA,EAAC,EAAE,qBAAqB;AACxB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAC,EAAE,sFAAsF;AACzF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH,cAAa,EAAE;AACf;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,wBAAwB;AACzC;AACA;AACA;AACA;AACA,mBAAkB,wBAAwB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,EAAC,GAAG;AACJ;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA,EAAC;AACD;AACA;AACA,EAAC;AACD;AACA;AACA,EAAC;;AAED;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAiB,uBAAuB;AACxC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAkB,yBAAyB;AAC3C;AACA;AACA;AACA;;AAEA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,EAAC,EAAE,mBAAmB;AACtB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;;AAEH,kBAAiB,uBAAuB;AACxC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,EAAC,GAAG;AACJ;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA,EAAC;AACD;AACA;AACA,EAAC;AACD;AACA;AACA,EAAC;;AAED;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAiB,uBAAuB;AACxC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAkB,yBAAyB;AAC3C;AACA;AACA;AACA;;AAEA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,EAAC,EAAE,mBAAmB;AACtB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAC,IAAI;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAC,EAAE,qBAAqB;AACxB;;AAEA,iCAAgC,2CAA2C,gBAAgB,kBAAkB,OAAO,2BAA2B,wDAAwD,gCAAgC,uDAAuD,2DAA2D,EAAE,EAAE,yDAAyD,qEAAqE,6DAA6D,oBAAoB,GAAG,EAAE;;AAEjjB,kDAAiD,0CAA0C,0DAA0D,EAAE;;AAEvJ,kDAAiD,aAAa,uFAAuF,EAAE,uFAAuF;;AAE9O,2CAA0C,+DAA+D,qGAAqG,EAAE,yEAAyE,eAAe,yEAAyE,EAAE,EAAE,uHAAuH;;AAE5e;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA,EAAC;;AAED;;AAEA,EAAC,EAAE,oCAAoC;AACvC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA,EAAC;AACD;AACA;AACA,EAAC;AACD;AACA;AACA,EAAC;AACD;AACA;AACA,EAAC;AACD;AACA;AACA,EAAC;AACD,cAAa,EAAE;AACf;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA,kBAAiB,uBAAuB;AACxC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,EAAC,GAAG;AACJ;;AAEA,iCAAgC,2CAA2C,gBAAgB,kBAAkB,OAAO,2BAA2B,wDAAwD,gCAAgC,uDAAuD,2DAA2D,EAAE,EAAE,yDAAyD,qEAAqE,6DAA6D,oBAAoB,GAAG,EAAE;;AAEjjB,kDAAiD,0CAA0C,0DAA0D,EAAE;;AAEvJ,kDAAiD,aAAa,uFAAuF,EAAE,uFAAuF;;AAE9O,2CAA0C,+DAA+D,qGAAqG,EAAE,yEAAyE,eAAe,yEAAyE,EAAE,EAAE,uHAAuH;;AAE5e;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA,EAAC;;AAED;;AAEA,EAAC,EAAE,iBAAiB;AACpB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;;AAEA,EAAC,GAAG;AACJ;;AAEA,iCAAgC,2CAA2C,gBAAgB,kBAAkB,OAAO,2BAA2B,wDAAwD,gCAAgC,uDAAuD,2DAA2D,EAAE,EAAE,yDAAyD,qEAAqE,6DAA6D,oBAAoB,GAAG,EAAE;;AAEjjB,kDAAiD,0CAA0C,0DAA0D,EAAE;;AAEvJ,kDAAiD,aAAa,uFAAuF,EAAE,uFAAuF;;AAE9O,2CAA0C,+DAA+D,qGAAqG,EAAE,yEAAyE,eAAe,yEAAyE,EAAE,EAAE,uHAAuH;;AAE5e;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA,EAAC;;AAED;;AAEA,EAAC,EAAE,iCAAiC;AACpC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA,EAAC,GAAG;AACJ;;AAEA,iCAAgC,2CAA2C,gBAAgB,kBAAkB,OAAO,2BAA2B,wDAAwD,gCAAgC,uDAAuD,2DAA2D,EAAE,EAAE,yDAAyD,qEAAqE,6DAA6D,oBAAoB,GAAG,EAAE;;AAEjjB,kDAAiD,0CAA0C,0DAA0D,EAAE;;AAEvJ,kDAAiD,aAAa,uFAAuF,EAAE,uFAAuF;;AAE9O,2CAA0C,+DAA+D,qGAAqG,EAAE,yEAAyE,eAAe,yEAAyE,EAAE,EAAE,uHAAuH;;AAE5e;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA,EAAC;;AAED;;AAEA,EAAC,EAAE,wDAAwD;AAC3D;;AAEA,iCAAgC,2CAA2C,gBAAgB,kBAAkB,OAAO,2BAA2B,wDAAwD,gCAAgC,uDAAuD,2DAA2D,EAAE,EAAE,yDAAyD,qEAAqE,6DAA6D,oBAAoB,GAAG,EAAE;;AAEjjB,kDAAiD,0CAA0C,0DAA0D,EAAE;;AAEvJ,kDAAiD,aAAa,uFAAuF,EAAE,uFAAuF;;AAE9O,2CAA0C,+DAA+D,qGAAqG,EAAE,yEAAyE,eAAe,yEAAyE,EAAE,EAAE,uHAAuH;;AAE5e;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC;AACjC,wCAAuC;AACvC,0CAAyC;AACzC,kCAAiC;AACjC;AACA;AACA,IAAG;;AAEH;AACA,EAAC;;AAED;;AAEA,EAAC,EAAE,4FAA4F;AAC/F;;AAEA,iCAAgC,2CAA2C,gBAAgB,kBAAkB,OAAO,2BAA2B,wDAAwD,gCAAgC,uDAAuD,2DAA2D,EAAE,EAAE,yDAAyD,qEAAqE,6DAA6D,oBAAoB,GAAG,EAAE;;AAEjjB,kDAAiD,0CAA0C,0DAA0D,EAAE;;AAEvJ,kDAAiD,aAAa,uFAAuF,EAAE,uFAAuF;;AAE9O,2CAA0C,+DAA+D,qGAAqG,EAAE,yEAAyE,eAAe,yEAAyE,EAAE,EAAE,uHAAuH;;AAE5e;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,IAAG;;AAEH;AACA,EAAC;;AAED;;AAEA,EAAC,EAAE,yDAAyD;AAC5D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAC,GAAG;AACJ;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,EAAC,EAAE,YAAY;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB;AACnB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAC,EAAE,6CAA6C;AAChD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAC,GAAG;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAC,GAAG;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAC,GAAG;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA,EAAC,GAAG;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAC,GAAG;AACJ;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAC,EAAE,YAAY;AACf;;AAEA,iCAAgC,2CAA2C,gBAAgB,kBAAkB,OAAO,2BAA2B,wDAAwD,gCAAgC,uDAAuD,2DAA2D,EAAE,EAAE,yDAAyD,qEAAqE,6DAA6D,oBAAoB,GAAG,EAAE;;AAEjjB,kDAAiD,0CAA0C,0DAA0D,EAAE;;AAEvJ,kDAAiD,aAAa,uFAAuF,EAAE,uFAAuF;;AAE9O,2CAA0C,+DAA+D,qGAAqG,EAAE,yEAAyE,eAAe,yEAAyE,EAAE,EAAE,uHAAuH;;AAE5e;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA,EAAC;;AAED;;AAEA,EAAC,EAAE,iBAAiB;AACpB;;AAEA,iCAAgC,2CAA2C,gBAAgB,kBAAkB,OAAO,2BAA2B,wDAAwD,gCAAgC,uDAAuD,2DAA2D,EAAE,EAAE,yDAAyD,qEAAqE,6DAA6D,oBAAoB,GAAG,EAAE;;AAEjjB,kDAAiD,0CAA0C,0DAA0D,EAAE;;AAEvJ,kDAAiD,aAAa,uFAAuF,EAAE,uFAAuF;;AAE9O,2CAA0C,+DAA+D,qGAAqG,EAAE,yEAAyE,eAAe,yEAAyE,EAAE,EAAE,uHAAuH;;AAE5e;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA,EAAC;;AAED;;AAEA,EAAC,EAAE,6BAA6B;AAChC;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,0BAA0B;AAC3C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,QAAO;AACP,MAAK;AACL,IAAG;;AAEH;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;;AAEA,EAAC,EAAE,YAAY;AACf;;AAEA,iCAAgC,2CAA2C,gBAAgB,kBAAkB,OAAO,2BAA2B,wDAAwD,gCAAgC,uDAAuD,2DAA2D,EAAE,EAAE,yDAAyD,qEAAqE,6DAA6D,oBAAoB,GAAG,EAAE;;AAEjjB,kDAAiD,0CAA0C,0DAA0D,EAAE;;AAEvJ,kDAAiD,aAAa,uFAAuF,EAAE,uFAAuF;;AAE9O,2CAA0C,+DAA+D,qGAAqG,EAAE,yEAAyE,eAAe,yEAAyE,EAAE,EAAE,uHAAuH;;AAE5e;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA,EAAC;;AAED;;AAEA,EAAC,EAAE,iBAAiB;AACpB;;AAEA,iCAAgC,2CAA2C,gBAAgB,kBAAkB,OAAO,2BAA2B,wDAAwD,gCAAgC,uDAAuD,2DAA2D,EAAE,EAAE,yDAAyD,qEAAqE,6DAA6D,oBAAoB,GAAG,EAAE;;AAEjjB,kDAAiD,0CAA0C,0DAA0D,EAAE;;AAEvJ,kDAAiD,aAAa,uFAAuF,EAAE,uFAAuF;;AAE9O,2CAA0C,+DAA+D,qGAAqG,EAAE,yEAAyE,eAAe,yEAAyE,EAAE,EAAE,uHAAuH;;AAE5e;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA;;AAEA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA,EAAC;;AAED;;AAEA,EAAC,EAAE,iCAAiC;AACpC;;AAEA,iCAAgC,2CAA2C,gBAAgB,kBAAkB,OAAO,2BAA2B,wDAAwD,gCAAgC,uDAAuD,2DAA2D,EAAE,EAAE,yDAAyD,qEAAqE,6DAA6D,oBAAoB,GAAG,EAAE;;AAEjjB,kDAAiD,0CAA0C,0DAA0D,EAAE;;AAEvJ,kDAAiD,aAAa,uFAAuF,EAAE,uFAAuF;;AAE9O,2CAA0C,+DAA+D,qGAAqG,EAAE,yEAAyE,eAAe,yEAAyE,EAAE,EAAE,uHAAuH;;AAE5e;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA,EAAC;;AAED;;AAEA,EAAC,EAAE,6BAA6B;AAChC;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,qBAAqB;AACtC;AACA;AACA;AACA;AACA;AACA,mBAAkB,0BAA0B;AAC5C;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,EAAC,EAAE,kBAAkB;AACrB;;AAEA,iCAAgC,2CAA2C,gBAAgB,kBAAkB,OAAO,2BAA2B,wDAAwD,gCAAgC,uDAAuD,2DAA2D,EAAE,EAAE,yDAAyD,qEAAqE,6DAA6D,oBAAoB,GAAG,EAAE;;AAEjjB,kDAAiD,0CAA0C,0DAA0D,EAAE;;AAEvJ,kDAAiD,aAAa,uFAAuF,EAAE,uFAAuF;;AAE9O,2CAA0C,+DAA+D,qGAAqG,EAAE,yEAAyE,eAAe,yEAAyE,EAAE,EAAE,uHAAuH;;AAE5e;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,sCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,IAAG;;AAEH;AACA,EAAC;;AAED;;AAEA,EAAC,EAAE,8BAA8B;AACjC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAiB,qBAAqB;AACtC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,oCAAoC;AACrD;AACA;AACA;AACA;AACA,mBAAkB,uCAAuC;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,EAAC,EAAE,iDAAiD;AACpD;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,qBAAqB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,EAAC,GAAG;AACJ;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAC,GAAG;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED,EAAC,GAAG;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED,EAAC,GAAG;AACJ;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,2CAA0C;AAC1C;AACA;AACA;;AAEA;AACA,kBAAiB,wBAAwB;AACzC;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,EAAC,EAAE,6CAA6C;AAChD;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAAyC;AACzC;AACA;AACA;;AAEA;AACA,kBAAiB,wBAAwB;AACzC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,EAAC,EAAE,6CAA6C;AAChD;;AAEA,iCAAgC,2CAA2C,gBAAgB,kBAAkB,OAAO,2BAA2B,wDAAwD,gCAAgC,uDAAuD,2DAA2D,EAAE,EAAE,yDAAyD,qEAAqE,6DAA6D,oBAAoB,GAAG,EAAE;;AAEjjB,kDAAiD,0CAA0C,0DAA0D,EAAE;;AAEvJ,kDAAiD,aAAa,uFAAuF,EAAE,uFAAuF;;AAE9O,2CAA0C,+DAA+D,qGAAqG,EAAE,yEAAyE,eAAe,yEAAyE,EAAE,EAAE,uHAAuH;;AAE5e;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA,EAAC;;AAED;;AAEA,EAAC,EAAE,yHAAyH;AAC5H;;AAEA,iCAAgC,2CAA2C,gBAAgB,kBAAkB,OAAO,2BAA2B,wDAAwD,gCAAgC,uDAAuD,2DAA2D,EAAE,EAAE,yDAAyD,qEAAqE,6DAA6D,oBAAoB,GAAG,EAAE;;AAEjjB,kDAAiD,0CAA0C,0DAA0D,EAAE;;AAEvJ,kDAAiD,aAAa,uFAAuF,EAAE,uFAAuF;;AAE9O,2CAA0C,+DAA+D,qGAAqG,EAAE,yEAAyE,eAAe,yEAAyE,EAAE,EAAE,uHAAuH;;AAE5e;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA,EAAC;;AAED;;AAEA,EAAC,EAAE,iBAAiB;AACpB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAC,EAAE,iBAAiB;AACpB;;AAEA,iCAAgC,2CAA2C,gBAAgB,kBAAkB,OAAO,2BAA2B,wDAAwD,gCAAgC,uDAAuD,2DAA2D,EAAE,EAAE,yDAAyD,qEAAqE,6DAA6D,oBAAoB,GAAG,EAAE;;AAEjjB,kDAAiD,0CAA0C,0DAA0D,EAAE;;AAEvJ,kDAAiD,aAAa,uFAAuF,EAAE,uFAAuF;;AAE9O,2CAA0C,+DAA+D,qGAAqG,EAAE,yEAAyE,eAAe,yEAAyE,EAAE,EAAE,uHAAuH;;AAE5e;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,IAAG;;AAEH;AACA,EAAC;;AAED;;AAEA,EAAC,EAAE,gCAAgC;AACnC;;AAEA,iCAAgC,2CAA2C,gBAAgB,kBAAkB,OAAO,2BAA2B,wDAAwD,gCAAgC,uDAAuD,2DAA2D,EAAE,EAAE,yDAAyD,qEAAqE,6DAA6D,oBAAoB,GAAG,EAAE;;AAEjjB,kDAAiD,0CAA0C,0DAA0D,EAAE;;AAEvJ,kDAAiD,aAAa,uFAAuF,EAAE,uFAAuF;;AAE9O,2CAA0C,+DAA+D,qGAAqG,EAAE,yEAAyE,eAAe,yEAAyE,EAAE,EAAE,uHAAuH;;AAE5e;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA,EAAC;;AAED;;AAEA,EAAC,EAAE,qCAAqC;AACxC;;AAEA,iCAAgC,2CAA2C,gBAAgB,kBAAkB,OAAO,2BAA2B,wDAAwD,gCAAgC,uDAAuD,2DAA2D,EAAE,EAAE,yDAAyD,qEAAqE,6DAA6D,oBAAoB,GAAG,EAAE;;AAEjjB,kDAAiD,0CAA0C,0DAA0D,EAAE;;AAEvJ,kDAAiD,aAAa,uFAAuF,EAAE,uFAAuF;;AAE9O,2CAA0C,+DAA+D,qGAAqG,EAAE,yEAAyE,eAAe,yEAAyE,EAAE,EAAE,uHAAuH;;AAE5e;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA,EAAC;;AAED;;AAEA,EAAC,EAAE,iBAAiB;AACpB;;AAEA,iCAAgC,2CAA2C,gBAAgB,kBAAkB,OAAO,2BAA2B,wDAAwD,gCAAgC,uDAAuD,2DAA2D,EAAE,EAAE,yDAAyD,qEAAqE,6DAA6D,oBAAoB,GAAG,EAAE;;AAEjjB,kDAAiD,0CAA0C,0DAA0D,EAAE;;AAEvJ,kDAAiD,aAAa,uFAAuF,EAAE,uFAAuF;;AAE9O,2CAA0C,+DAA+D,qGAAqG,EAAE,yEAAyE,eAAe,yEAAyE,EAAE,EAAE,uHAAuH;;AAE5e;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,IAAG;;AAEH;AACA,EAAC;;AAED;;AAEA,EAAC,EAAE,+BAA+B;AAClC;;AAEA,iCAAgC,2CAA2C,gBAAgB,kBAAkB,OAAO,2BAA2B,wDAAwD,gCAAgC,uDAAuD,2DAA2D,EAAE,EAAE,yDAAyD,qEAAqE,6DAA6D,oBAAoB,GAAG,EAAE;;AAEjjB,kDAAiD,0CAA0C,0DAA0D,EAAE;;AAEvJ,kDAAiD,aAAa,uFAAuF,EAAE,uFAAuF;;AAE9O,2CAA0C,+DAA+D,qGAAqG,EAAE,yEAAyE,eAAe,yEAAyE,EAAE,EAAE,uHAAuH;;AAE5e;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA,EAAC;;AAED;;AAEA,EAAC,EAAE,iBAAiB;AACpB;;AAEA,iCAAgC,2CAA2C,gBAAgB,kBAAkB,OAAO,2BAA2B,wDAAwD,gCAAgC,uDAAuD,2DAA2D,EAAE,EAAE,yDAAyD,qEAAqE,6DAA6D,oBAAoB,GAAG,EAAE;;AAEjjB,kDAAiD,0CAA0C,0DAA0D,EAAE;;AAEvJ,kDAAiD,aAAa,uFAAuF,EAAE,uFAAuF;;AAE9O,2CAA0C,+DAA+D,qGAAqG,EAAE,yEAAyE,eAAe,yEAAyE,EAAE,EAAE,uHAAuH;;AAE5e;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA,EAAC;;AAED;;AAEA,EAAC,EAAE,iBAAiB;AACpB;;AAEA,iCAAgC,2CAA2C,gBAAgB,kBAAkB,OAAO,2BAA2B,wDAAwD,gCAAgC,uDAAuD,2DAA2D,EAAE,EAAE,yDAAyD,qEAAqE,6DAA6D,oBAAoB,GAAG,EAAE;;AAEjjB,kDAAiD,0CAA0C,0DAA0D,EAAE;;AAEvJ,kDAAiD,aAAa,uFAAuF,EAAE,uFAAuF;;AAE9O,2CAA0C,+DAA+D,qGAAqG,EAAE,yEAAyE,eAAe,yEAAyE,EAAE,EAAE,uHAAuH;;AAE5e;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA;;AAEA,IAAG;AACH;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA,IAAG;AACH;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA,IAAG;AACH;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA;;AAEA,IAAG;AACH;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,IAAG;;AAEH;AACA,EAAC;;AAED;;AAEA,EAAC,EAAE,kCAAkC;AACrC;;AAEA,iCAAgC,2CAA2C,gBAAgB,kBAAkB,OAAO,2BAA2B,wDAAwD,gCAAgC,uDAAuD,2DAA2D,EAAE,EAAE,yDAAyD,qEAAqE,6DAA6D,oBAAoB,GAAG,EAAE;;AAEjjB,kDAAiD,0CAA0C,0DAA0D,EAAE;;AAEvJ,kDAAiD,aAAa,uFAAuF,EAAE,uFAAuF;;AAE9O,2CAA0C,+DAA+D,qGAAqG,EAAE,yEAAyE,eAAe,yEAAyE,EAAE,EAAE,uHAAuH;;AAE5e;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,IAAG;;AAEH;AACA,EAAC;;AAED;;AAEA,EAAC,EAAE,eAAe;AAClB;;AAEA,iCAAgC,2CAA2C,gBAAgB,kBAAkB,OAAO,2BAA2B,wDAAwD,gCAAgC,uDAAuD,2DAA2D,EAAE,EAAE,yDAAyD,qEAAqE,6DAA6D,oBAAoB,GAAG,EAAE;;AAEjjB,kDAAiD,0CAA0C,0DAA0D,EAAE;;AAEvJ,kDAAiD,aAAa,uFAAuF,EAAE,uFAAuF;;AAE9O,2CAA0C,+DAA+D,qGAAqG,EAAE,yEAAyE,eAAe,yEAAyE,EAAE,EAAE,uHAAuH;;AAE5e;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,IAAG;AACH;AACA;AACA,gGAA+F;AAC/F;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;;AAEA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAG;AACH;AACA;AACA,sEAAqE;AACrE;AACA,IAAG;;AAEH;AACA,EAAC;;AAED;;AAEA,EAAC,EAAE,+FAA+F;AAClG;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,EAAC,GAAG;AACJ;;AAEA,iCAAgC,2CAA2C,gBAAgB,kBAAkB,OAAO,2BAA2B,wDAAwD,gCAAgC,uDAAuD,2DAA2D,EAAE,EAAE,yDAAyD,qEAAqE,6DAA6D,oBAAoB,GAAG,EAAE;;AAEjjB,kDAAiD,0CAA0C,0DAA0D,EAAE;;AAEvJ,kDAAiD,aAAa,uFAAuF,EAAE,uFAAuF;;AAE9O,2CAA0C,+DAA+D,qGAAqG,EAAE,yEAAyE,eAAe,yEAAyE,EAAE,EAAE,uHAAuH;;AAE5e;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,IAAG;;AAEH;AACA,EAAC;;AAED;;AAEA,EAAC,EAAE,eAAe;AAClB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAC,GAAG;AACJ;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAC,GAAG;AACJ;;AAEA,iCAAgC,2CAA2C,gBAAgB,kBAAkB,OAAO,2BAA2B,wDAAwD,gCAAgC,uDAAuD,2DAA2D,EAAE,EAAE,yDAAyD,qEAAqE,6DAA6D,oBAAoB,GAAG,EAAE;;AAEjjB,kDAAiD,0CAA0C,0DAA0D,EAAE;;AAEvJ,kDAAiD,aAAa,uFAAuF,EAAE,uFAAuF;;AAE9O,2CAA0C,+DAA+D,qGAAqG,EAAE,yEAAyE,eAAe,yEAAyE,EAAE,EAAE,uHAAuH;;AAE5e;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,IAAG;;AAEH;AACA,EAAC;;AAED;;AAEA,EAAC,EAAE,8BAA8B;AACjC;;AAEA,iCAAgC,2CAA2C,gBAAgB,kBAAkB,OAAO,2BAA2B,wDAAwD,gCAAgC,uDAAuD,2DAA2D,EAAE,EAAE,yDAAyD,qEAAqE,6DAA6D,oBAAoB,GAAG,EAAE;;AAEjjB,kDAAiD,0CAA0C,0DAA0D,EAAE;;AAEvJ,kDAAiD,aAAa,uFAAuF,EAAE,uFAAuF;;AAE9O,2CAA0C,+DAA+D,qGAAqG,EAAE,yEAAyE,eAAe,yEAAyE,EAAE,EAAE,uHAAuH;;AAE5e;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA,EAAC;;AAED;;AAEA,EAAC,EAAE,iBAAiB;AACpB;;AAEA,iCAAgC,2CAA2C,gBAAgB,kBAAkB,OAAO,2BAA2B,wDAAwD,gCAAgC,uDAAuD,2DAA2D,EAAE,EAAE,yDAAyD,qEAAqE,6DAA6D,oBAAoB,GAAG,EAAE;;AAEjjB,kDAAiD,0CAA0C,0DAA0D,EAAE;;AAEvJ,kDAAiD,aAAa,uFAAuF,EAAE,uFAAuF;;AAE9O,2CAA0C,+DAA+D,qGAAqG,EAAE,yEAAyE,eAAe,yEAAyE,EAAE,EAAE,uHAAuH;;AAE5e;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA,EAAC;;AAED;;AAEA,EAAC,EAAE,iBAAiB;AACpB;;AAEA,iCAAgC,2CAA2C,gBAAgB,kBAAkB,OAAO,2BAA2B,wDAAwD,gCAAgC,uDAAuD,2DAA2D,EAAE,EAAE,yDAAyD,qEAAqE,6DAA6D,oBAAoB,GAAG,EAAE;;AAEjjB,kDAAiD,0CAA0C,0DAA0D,EAAE;;AAEvJ,kDAAiD,aAAa,uFAAuF,EAAE,uFAAuF;;AAE9O,2CAA0C,+DAA+D,qGAAqG,EAAE,yEAAyE,eAAe,yEAAyE,EAAE,EAAE,uHAAuH;;AAE5e;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA,EAAC;;AAED;;AAEA,EAAC,EAAE,iBAAiB;AACpB;;AAEA,iCAAgC,2CAA2C,gBAAgB,kBAAkB,OAAO,2BAA2B,wDAAwD,gCAAgC,uDAAuD,2DAA2D,EAAE,EAAE,yDAAyD,qEAAqE,6DAA6D,oBAAoB,GAAG,EAAE;;AAEjjB,kDAAiD,0CAA0C,0DAA0D,EAAE;;AAEvJ,kDAAiD,aAAa,uFAAuF,EAAE,uFAAuF;;AAE9O,2CAA0C,+DAA+D,qGAAqG,EAAE,yEAAyE,eAAe,yEAAyE,EAAE,EAAE,uHAAuH;;AAE5e;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;;AAEA,IAAG;AACH;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA,IAAG;AACH;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA,IAAG;AACH;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA,IAAG;AACH;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA,IAAG;AACH;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA,IAAG;AACH;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,IAAG;;AAEH;AACA,EAAC;;AAED;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA,EAAC,EAAE,+BAA+B;AAClC;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;;AAEA,EAAC,EAAE,kBAAkB;AACrB;;AAEA;;AAEA,EAAC,EAAE,iBAAiB;AACpB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,EAAC,EAAE,sDAAsD;AACzD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAsB,EAAE;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAC,GAAG;AACJ;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAC,EAAE,eAAe;AAClB;;AAEA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH,kBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,EAAC,GAAG;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA,kBAAiB,qBAAqB;AACtC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAsC;AACtC,MAAK;AACL;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,EAAC,EAAE,8GAA8G;AACjH;;AAEA;;AAEA;AACA;AACA;AACA,kBAAiB,gBAAgB;AACjC;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;;AAEA,EAAC,EAAE,aAAa;AAChB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAmC,IAAI;AACvC;AACA;;AAEA;;AAEA,EAAC,GAAG;AACJ;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAC,EAAE,aAAa;AAChB;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAiB,yBAAyB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,qBAAqB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,EAAC,GAAG;AACJ;;AAEA,iCAAgC,2CAA2C,gBAAgB,kBAAkB,OAAO,2BAA2B,wDAAwD,gCAAgC,uDAAuD,2DAA2D,EAAE,EAAE,yDAAyD,qEAAqE,6DAA6D,oBAAoB,GAAG,EAAE;;AAEjjB,kDAAiD,0CAA0C,0DAA0D,EAAE;;AAEvJ,kDAAiD,aAAa,uFAAuF,EAAE,uFAAuF;;AAE9O,2CAA0C,+DAA+D,qGAAqG,EAAE,yEAAyE,eAAe,yEAAyE,EAAE,EAAE,uHAAuH;;AAE5e;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,qBAAqB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,qBAAqB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA,EAAC;;AAED;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA,EAAC,EAAE,6GAA6G;AAChH;;AAEA,iCAAgC,2CAA2C,gBAAgB,kBAAkB,OAAO,2BAA2B,wDAAwD,gCAAgC,uDAAuD,2DAA2D,EAAE,EAAE,yDAAyD,qEAAqE,6DAA6D,oBAAoB,GAAG,EAAE;;AAEjjB,kDAAiD,0CAA0C,0DAA0D,EAAE;;AAEvJ,kDAAiD,aAAa,uFAAuF,EAAE,uFAAuF;;AAE9O,2CAA0C,+DAA+D,qGAAqG,EAAE,yEAAyE,eAAe,yEAAyE,EAAE,EAAE,uHAAuH;;AAE5e;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,QAAO;AACP;;AAEA;;AAEA,IAAG;AACH;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA;;AAEA,IAAG;AACH;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA;;AAEA,IAAG;AACH;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,IAAG;AACH;AACA;AACA,qFAAoF;AACpF;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,IAAG;;AAEH;AACA,EAAC;;AAED;;AAEA,EAAC,EAAE,8BAA8B;AACjC;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC;AACjC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAC,EAAE,wBAAwB;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;;AAEA;;AAEA,EAAC,EAAE,4IAA4I;AAC/I;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED,EAAC,GAAG;AACJ;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH,kBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAC,EAAE,oDAAoD;AACvD;AACA;;AAEA,yCAAwC;;AAExC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,EAAC,EAAE,wBAAwB;AAC3B;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAM;AACN;AACA;AACA;AACA,OAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,OAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAC,EAAE,+BAA+B;AAClC;;AAEA,iEAAgE;AAChE,yCAAwC;AACxC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,mBAAmB;AACpC,oBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,EAAC,EAAE,gDAAgD;AACnD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAiB,kBAAkB;AACnC;AACA;AACA,sBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,EAAC,EAAE,mBAAmB;AACtB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA,EAAC;AACD;AACA;AACA,EAAC;AACD;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,EAAC,GAAG;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,EAAC,GAAG;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAC,GAAG;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAC,GAAG;AACJ;;AAEA,yCAAwC;AACxC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB,iBAAiB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,EAAC,EAAE,6CAA6C;AAChD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAe,OAAO;AACtB;AACA,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;;AAEA,EAAC,GAAG;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,EAAC,GAAG;AACJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAI;AACJ;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,IAAG,IAAI;AACP;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,wBAAwB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,EAAC,EAAE,uDAAuD;AAC1D;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;;AAEA,EAAC,GAAG;AACJ;AACA;AACA;;AAEA;;AAEA;AACA;AACA,8CAA6C,+CAA+C;AAC5F;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,EAAC,EAAE,6BAA6B;AAChC;;AAEA,iCAAgC,2CAA2C,gBAAgB,kBAAkB,OAAO,2BAA2B,wDAAwD,gCAAgC,uDAAuD,2DAA2D,EAAE,EAAE,yDAAyD,qEAAqE,6DAA6D,oBAAoB,GAAG,EAAE;;AAEjjB,kDAAiD,0CAA0C,0DAA0D,EAAE;;AAEvJ,kDAAiD,aAAa,uFAAuF,EAAE,uFAAuF;;AAE9O,2CAA0C,+DAA+D,qGAAqG,EAAE,yEAAyE,eAAe,yEAAyE,EAAE,EAAE,uHAAuH;;AAE5e;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAG;AACH;AACA;AACA;AACA;AACA;;AAEA,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;;AAEA,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;;AAEA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA,EAAC;;AAED;;AAEA,EAAC,EAAE,qIAAqI;AACxI;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,mBAAmB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAkB,oBAAoB;AACtC;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,EAAC,EAAE,+BAA+B;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC,IAAI;;AAEL,EAAC,GAAG;AACJ;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAiB,sBAAsB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;;AAEA;;AAEA,EAAC,GAAG;AACJ;;AAEA,qGAAoG,mBAAmB,EAAE,mBAAmB,8HAA8H;;AAE1Q;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,uCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA,0CAAyC;AACzC;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,oBAAmB,oBAAoB;AACvC;AACA;AACA;AACA,IAAG;;AAEH;AACA;;AAEA;;AAEA,EAAC,EAAE,+BAA+B;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAC,GAAG;AACJ;;AAEA,iCAAgC,2CAA2C,gBAAgB,kBAAkB,OAAO,2BAA2B,wDAAwD,gCAAgC,uDAAuD,2DAA2D,EAAE,EAAE,yDAAyD,qEAAqE,6DAA6D,oBAAoB,GAAG,EAAE;;AAEjjB,kDAAiD,0CAA0C,0DAA0D,EAAE;;AAEvJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,EAAC,EAAE,wLAAwL;AAC3L;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;;AAEA,EAAC,GAAG;AACJ;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA,sBAAqB,uBAAuB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAsB,wBAAwB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;;AAEA,EAAC,GAAG;AACJ;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC,EAAE;AACnC;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;;AAEA,EAAC,GAAG;AACJ;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;;AAEA,EAAC,EAAE,+BAA+B;AAClC;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAsB;AACtB,2BAA0B,GAAG;AAC7B,iCAAgC;AAChC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,EAAC,EAAE,gBAAgB;AACnB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,EAAC,GAAG;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA,EAAC,GAAG;AACJ;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,EAAC,EAAE,qCAAqC;AACxC;AACA;AACA;;AAEA;AACA;AACA,eAAc;AACd,eAAc;AACd,gBAAe;AACf,iBAAgB;AAChB,iBAAgB;AAChB,iBAAgB;AAChB;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH,kCAAiC;AACjC;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,EAAC,GAAG;AACJ;;AAEA;;AAEA;AACA;AACA;AACA,0CAAyC;AACzC;AACA;AACA;AACA;AACA,aAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,gDAA+C;AAC/C;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA,4CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;;AAEA,EAAC,GAAG;AACJ;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,sBAAqB,gBAAgB;AACrC;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;;AAEA,EAAC,EAAE,2CAA2C;AAC9C;AACA,EAAC,EAAE,4BAA4B;AAC/B;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,gBAAgB;AACjC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;;AAEA;AACA;;AAEA,EAAC,EAAE,4BAA4B;AAC/B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,qBAAqB;AACxC;AACA;AACA;AACA;AACA,uBAAsB,mBAAmB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAC,EAAE,cAAc;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAC,EAAE,kDAAkD;AACrD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAC,GAAG;AACJ;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,uBAAuB;AACxC;AACA;AACA;AACA;AACA;AACA,sBAAqB,oBAAoB;AACzC;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,mBAAkB,iBAAiB;AACnC;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,kCAAiC;AACjC;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA,EAAC,EAAE,cAAc;AACjB;;AAEA,iCAAgC,2CAA2C,gBAAgB,kBAAkB,OAAO,2BAA2B,wDAAwD,gCAAgC,uDAAuD,2DAA2D,EAAE,EAAE,yDAAyD,qEAAqE,6DAA6D,oBAAoB,GAAG,EAAE;;AAEjjB,kDAAiD,0CAA0C,0DAA0D,EAAE;;AAEvJ;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,IAAG;AACH;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,IAAG;;AAEH;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAC,EAAE,sQAAsQ;AACzQ;AACA;;AAEA,qGAAoG,mBAAmB,EAAE,mBAAmB,8HAA8H;;AAE1Q;AACA;AACA;AACA;;;AAGA;;AAEA,cAAa,UAAU;AACvB;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK,IAAI;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAmB,oBAAoB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,UAAU;AAC7B;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,sBAAqB,uBAAuB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;;AAEA,EAAC,EAAE,iEAAiE;AACpE;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,oBAAoB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAC,EAAE,cAAc;AACjB;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,qBAAqB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,EAAC,EAAE,cAAc;AACjB;;AAEA;AACA;AACA;AACA;;AAEA,EAAC,EAAE,oCAAoC;AACvC;;AAEA;AACA;;AAEA;AACA;AACA,cAAa,eAAe;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa,eAAe;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sBAAqB,qBAAqB;AAC1C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAgB,IAAI;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,EAAC,EAAE,kCAAkC;AACrC;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB,IAAI;AACtB,8BAA6B,2BAA2B;AACxD,2BAA0B,qBAAqB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,EAAC,EAAE,cAAc;AACjB;AACA;;AAEA,qGAAoG,mBAAmB,EAAE,mBAAmB,8HAA8H;;AAE1Q;AACA;AACA;AACA;;AAEA;;AAEA;AACA,yBAAwB,UAAU;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB,oBAAoB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK,IAAI;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,EAAC,EAAE,iEAAiE;AACpE;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;;AAEA,EAAC,EAAE,gBAAgB;AACnB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;;AAEA,EAAC,EAAE,gBAAgB;AACnB;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;;AAEA,EAAC,GAAG;AACJ;;AAEA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,sBAAqB,uBAAuB;AAC5C;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,qBAAoB;AACpB;AACA,sBAAqB,yBAAyB;AAC9C;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,qBAAoB;AACpB;AACA;AACA;AACA,sBAAqB,qBAAqB;AAC1C;AACA,wBAAuB,qBAAqB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP,MAAK;;AAEL;AACA;AACA;AACA,MAAK;;;AAGL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;;AAEA,EAAC,GAAG;AACJ;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;;AAEH;AACA;AACA;AACA,MAAK;AACL;AACA,uBAAsB;AACtB,MAAK;AACL;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;AACH;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL,IAAG;;AAEH;AACA;AACA;AACA,MAAK;AACL,IAAG;AACH;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,EAAC,EAAE,eAAe;AAClB;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;;AAEA,EAAC,EAAE,gBAAgB;AACnB;;AAEA;;AAEA;AACA;AACA;AACA,kBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA,yCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAmC;AACnC;AACA,QAAO;AACP;AACA,MAAK;;AAEL;AACA;AACA;;AAEA,yCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA,MAAK;;AAEL;AACA;AACA;;AAEA,yCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA,sBAAqB,gBAAgB;AACrC,wBAAuB,eAAe;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;;AAEA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;;AAEA,EAAC,GAAG;AACJ;;AAEA;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP,MAAK;AACL;AACA;AACA;AACA,QAAO;AACP,MAAK;AACL;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;;AAEA,EAAC,GAAG;AACJ;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,QAAO;AACP,iEAAgE;AAChE,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;;AAEA,EAAC,GAAG;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAmB,gBAAgB;AACnC;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAC,GAAG;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAC,EAAE,4EAA4E;AAC/E;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAiB,kBAAkB;AACnC,oBAAmB,qBAAqB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAC,EAAE,YAAY;AACf;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAiB,qBAAqB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,EAAC,EAAE,0BAA0B;AAC7B;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAiB,qBAAqB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAC,EAAE,0BAA0B;AAC7B;;AAEA;AACA;;AAEA;AACA,kBAAiB,qBAAqB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAC,EAAE,gCAAgC;AACnC;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,EAAC,EAAE,oBAAoB;AACvB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,EAAC,EAAE,oFAAoF;AACvF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAC,GAAG;AACJ;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAAyD;AACzD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA,EAAC,EAAE,wCAAwC;AAC3C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAC,GAAG;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,EAAC,EAAE,iuBAAiuB;AACpuB;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;;AAEA,EAAC,EAAE,eAAe;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAiB,WAAW;AAC5B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,sBAAqB,qBAAqB;AAC1C;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kBAAiB,yBAAyB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAoB,sBAAsB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;;AAEA,EAAC,EAAE,+BAA+B;AAClC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,EAAC;AACD;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,EAAC;;AAED;AACA;AACA,kBAAiB,qBAAqB;AACtC,oBAAmB,wBAAwB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,EAAC,EAAE,+BAA+B;AAClC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,EAAC;AACD;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,EAAC;AACD;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,EAAC;AACD;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,EAAC;AACD;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,EAAC;;AAED;AACA;AACA,kBAAiB,mBAAmB;AACpC,oBAAmB,wBAAwB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,EAAC,EAAE,+BAA+B;AAClC;;AAEA;;AAEA,EAAC,EAAE,eAAe;AAClB;;AAEA;;AAEA;AACA;AACA,gCAA+B,IAAI;AACnC;AACA;AACA;AACA;AACA;AACA,4BAA2B,KAAK;AAChC;AACA;AACA;AACA;AACA,4BAA2B,IAAI;AAC/B;AACA;AACA;AACA;AACA;AACA,mCAAkC,IAAI;AACtC;AACA;AACA;AACA;AACA,4BAA2B,IAAI;AAC/B;AACA;AACA;AACA;AACA;;AAEA;;AAEA,EAAC,GAAG;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,EAAC,EAAE,yBAAyB;AAC5B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;;AAEA,EAAC,EAAE,wCAAwC;AAC3C;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAiB,qBAAqB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,EAAC,EAAE,0CAA0C;AAC7C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kBAAiB,oBAAoB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,EAAC,EAAE,eAAe;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kCAAiC,IAAI;AACrC;AACA;AACA;AACA;AACA;;AAEA;AACA,8BAA6B,GAAG;AAChC;AACA;AACA;AACA;;AAEA;AACA,uBAAsB,GAAG;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA,iDAAgD,IAAI;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,EAAC,EAAE,eAAe;AAClB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;;AAEA,EAAC,EAAE,uCAAuC;AAC1C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB,kBAAkB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;;AAEA;;AAEA,EAAC,EAAE,uCAAuC;AAC1C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAiB,oBAAoB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,EAAC,EAAE,eAAe;AAClB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,iFAAgF;;AAEhF;AACA;AACA;AACA;AACA;AACA,uEAAsE;AACtE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,EAAC,EAAE,eAAe;AAClB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAiB,qBAAqB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,EAAC,EAAE,eAAe;AAClB;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kBAAiB,eAAe;AAChC;AACA;AACA;AACA,0BAAyB,eAAe;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,EAAC,EAAE,eAAe;AAClB;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAiB,eAAe;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,EAAC,EAAE,2GAA2G;AAC9G;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sBAAqB,UAAU;AAC/B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,qBAAqB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAiB,qBAAqB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAkB,sBAAsB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,EAAC,GAAG;AACJ;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAC,GAAG;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;;AAEA,EAAC,EAAE,eAAe;AAClB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;;AAEA,EAAC,EAAE,eAAe;AAClB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iCAAgC;AAChC,yBAAwB;AACxB;AACA;;AAEA;AACA;AACA,kBAAiB,qBAAqB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAC,EAAE,mEAAmE;AACtE;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAC,IAAI;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,kBAAiB,yBAAyB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,EAAC,EAAE,eAAe;AAClB;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA,kBAAiB,qBAAqB;AACtC;AACA;AACA;AACA,sBAAqB,qBAAqB;AAC1C;AACA;AACA;AACA;AACA,mEAAkE;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAC,EAAE,eAAe;AAClB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,EAAC,IAAI;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAiB,qBAAqB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAC,EAAE,eAAe;AAClB;;AAEA;AACA;AACA;;AAEA;AACA;AACA,kBAAiB,qBAAqB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAA+B;AAC/B;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,EAAC,EAAE,0DAA0D;AAC7D;;AAEA;AACA;AACA;;AAEA,EAAC,GAAG;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAC,GAAG;AACJ;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,EAAC,GAAG;AACJ;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH,EAAC;;AAED;;AAEA,EAAC,GAAG;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ,EAAE,OAAO,EAAE;AACnB;AACA,aAAY,EAAE,eAAe,EAAE,OAAO,EAAE;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ,IAAI,eAAe,IAAI,eAAe,IAAI;;AAElD;AACA,gCAA+B,IAAI;AACnC,uBAAsB,IAAI,QAAQ,EAAE,WAAW,IAAI;;AAEnD;AACA,SAAQ,IAAI,qBAAqB,IAAI;AACrC,iBAAgB,IAAI,QAAQ,EAAE;AAC9B;;AAEA,SAAQ,IAAI,OAAO,IAAI;AACvB,SAAQ,IAAI,OAAO,IAAI;;AAEvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED,EAAC,GAAG;AACJ;AACA;AACA;;AAEA;;AAEA;AACA,iBAAgB,IAAI;AACpB;AACA,maAAka,EAAE;AACpa;AACA,04BAAy4B,EAAE,6QAA6Q,GAAG;AAC3pC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED,EAAC,GAAG,EAAE,GAAG;AACT,EAAC,E","file":"./build/js/processing.js","sourcesContent":["'use strict'\n\nconst nlp = require('compromise');\n\nconst pronouns = {\n  he: \"they\",\n  him: \"them\",\n  his: \"their\",\n  himself: \"themself\",\n  she: \"they\",\n  her: \"them\",\n  hers: \"theirs\",\n  herself: \"themself\",\n  He: \"They\",\n  Him: \"Them\",\n  His: \"Their\",\n  Himself: \"Themself\",\n  She: \"They\",\n  Her: \"Them\",\n  Hers: \"Theirs\",\n  Herself: \"Themself\",\n}\n\nconst nouns = {\n  man : \"person\",\n  Man: \"Person\",\n  men: \"people\",\n  Men: \"People\",\n  mens: \"people's\",\n  Mens: \"People's\",\n  boy: \"child\",\n  Boy: \"Child\",\n  boys: \"children\",\n  Boys: \"Children\",\n  \"boy's\": \"children's\",\n  \"Boy's\": \"Children's\",\n  woman: \"person\",\n  Woman: \"Person\",\n  women: \"people\",\n  Women: \"People\",\n  womens: \"people's\",\n  Womens: \"People's\",\n  girl: \"child\",\n  Girl: \"Child\",\n  girls: \"children\",\n  Girls: \"Children\",\n  \"girl's\": \"children's\",\n  \"Girl's\": \"Children's\",\n  husband: \"spouse\",\n  Husbane: \"Spouse\",\n  wife: \"spouse\",\n  Wife: \"Spouse\",\n  sister: \"sibling\",\n  Sister: \"sibling\"\n}\n\nconst adj = {\n  feisty: \"lively\",\n  frisky: \"spirited\",\n  irritable: \"grouchy\",\n  ambitious: \"determined\",\n  abrasive: \"unpleasant\",\n  nasty: \"disagreeable\",\n  bitchy: \"mean\",\n  bossy: \"forceful\",\n  bubbly: \"friendly\",\n  curvy: \"robust\",\n  ditzy: \"careless\",\n  emotional: \"impassioned\",\n  frigid: \"serious\",\n  frumpy: \"un-made-up\",\n  \"high-maintenence\": \"exacting\",\n  hysterical: \"furious\",\n  illogical: \"incorrectsass\",\n  irrational: \"incorrect\",\n  pushy: \"assertive\",\n  sassy: \"bold\",\n  shrill: \"assertive\",\n  exotic: \"unusual\",\n  brash: \"cocksure\",\n  catty: \"mean\",\n  slutty: \"sexually-active\",//don't really have a neutral for this\n  pretty: \"attractive\",\n  handsome: \"attractive\",\n  studly: \"hot\",\n  charming: \"pleasant\",\n  aggressive: \"determined\",\n  cocky: \"self-confident\",\n  arrogant: \"overconfident\",\n}\n\n//object to contain info about page for analytics\nconst pageStats = {\n  pronouns: {},\n  nouns: {},\n  adjectives: {}\n}\n\nconsole.log('the degender content script is totes active')\nchrome.runtime.onMessage.addListener(function(request, sender, sendResponse){\n    console.log('in listener', request)\n\n  //build a div to go at the top of the page\n  let topBar = document.createElement(\"div\");\n\n  topBar.setAttribute('id', 'degender-bar');\n  //topBar.className = 'hide'\n\n  document.body.insertBefore(topBar, document.body.firstChild);\n\n  //in order to add tags around the changes, need to access the text in a different way :(\n  let allElements = document.body.getElementsByTagName(\"*\");\n\n  const copyHTML = ()=> {\n    let HTMLarr = [];\n    for (let i =0; i < allElements.length; i++) {\n      HTMLarr.push(allElements[i].innerHTML)\n    }\n    return HTMLarr\n  }\n\n  let originalHTML = copyHTML();\n\n  //first test of compromise\n  originalHTML.forEach(string => {\n    console.log(string, nlp(string).data())\n    //console.log(string, nlp.text(string).tags())\n  })\n\n  //would still be nice to not have to go over elements with no innerHTML\n\n  const convert = () => {\n    //core logic of converter\n    for (let i = 0; i < allElements.length; i++) {\n      let eleArr = allElements[i].innerHTML.split(' ');\n      for (let j=0; j < eleArr.length; j++) {\n        //see if bit ends with punctuation\n        let end = ''\n        if (!/([a-zA-Z])/.test(eleArr[j][eleArr[j].length - 1])) {\n          end = eleArr[j][eleArr[j].length - 1]\n          eleArr[j] = eleArr[j].substr(0, eleArr[j].length - 1)\n        }\n        if (pronouns[eleArr[j]]) {\n          if (pageStats.pronouns[eleArr[j]]) pageStats.pronouns[eleArr[j]]++\n          else pageStats.pronouns[eleArr[j]] = 1\n          eleArr[j] = '<span class=\\'converted pronoun\\'>' + pronouns[eleArr[j]] +'</span>' + end\n        } else if (nouns[eleArr[j]]) {\n          if (pageStats.nouns[eleArr[j]]) pageStats.nouns[eleArr[j]]++\n          else pageStats.nouns[eleArr[j]] = 1\n          eleArr[j] = '<span class=\\'converted noun\\'>' + nouns[eleArr[j]] + '</span>' + end\n        } else if (adj[eleArr[j]]) {\n          if (pageStats.adjectives[eleArr[j]]) pageStats.adjectives[eleArr[j]]++\n          else pageStats.adjectives[eleArr[j]] = 1\n          eleArr[j] = '<span class=\\'converted adj\\'>' + adj[eleArr[j]] + '</span>' + end\n        } else {\n          eleArr[j] = eleArr[j] + end\n        }\n      }\n      allElements[i].innerHTML = eleArr.join(' ')\n    }\n    //to help with styling\n    console.log(pageStats)\n    let offsetHeight = document.body.childNodes[0].offsetHeight;\n    document.body.childNodes[2].style.marginTop = offsetHeight + 'px';\n  }\n\n  const revertPage = () => {\n    for (let i =0; i < allElements.length; i++) {\n      allElements[i].innerHTML = originalHTML[i];\n    }\n    document.body.childNodes[2].style.marginTop = '0px';\n    topBar.className = 'hide'\n  }\n\n  const color = (speech) => {\n    let changed = document.getElementsByClassName('converted ' + speech)\n    for (let i = 0; i < changed.length; i++) {\n      changed[i].className = changed[i].className + ' active-converted'\n    }\n  }\n\n  const decolor = (speech) => {\n    let changed = document.getElementsByClassName('converted ' + speech)\n    for (let i = 0; i < changed.length; i++) {\n      changed[i].className = 'converted ' + speech\n    }\n  }\n\n  const addListens = () => {\n    document.getElementById(\"revert\").addEventListener(\"click\", revertPage);\n    document.getElementById(\"highPro\").addEventListener(\"click\", (evt) => {\n      if (evt.target.className === 'active'){\n        evt.target.className = ''\n        decolor('pronoun')\n      } else {\n        color('pronoun')\n        evt.target.className = 'active'\n      }\n    });\n    document.getElementById(\"highAdj\").addEventListener(\"click\", (evt) => {\n      if (evt.target.className === 'active'){\n        evt.target.className = ''\n        decolor('adj')\n      } else {\n        color('adj')\n        evt.target.className = 'active'\n      }\n    });\n    document.getElementById(\"highNoun\").addEventListener(\"click\", (evt) => {\n      if (evt.target.className === 'active') {\n        evt.target.className = ''\n        decolor('noun')\n      } else {\n        color('noun')\n        evt.target.className = 'active'\n      }\n    });\n  }\n\n  switch (request.message) {\n    case 'convert':\n      if (document.documentElement.lang !== 'en' && document.documentElement.lang !== 'en-US') {\n        alert('It appears this page is not in English. Currently Degender Your Internet is only equipped to handle pages in English. If you would like to help develop Degender Your Internet for other languages, please contact me')\n        break\n      }\n      topBar.className = ''\n      convert();\n      addListens();\n      sendResponse({pageStatus: 'converted'});\n      break\n    case 'revert':\n      revertPage();\n      sendResponse({pageStatus: 'original'});\n      break\n    default:\n      sendResponse({error: 'that input makes no sense'})\n  }\n})\n\n\n\n\n// WEBPACK FOOTER //\n// ./text-processing/processing.js","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.nlp = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\nmodule.exports={\n  \"author\": \"Spencer Kelly <spencermountain@gmail.com> (http://spencermounta.in)\",\n  \"name\": \"compromise\",\n  \"description\": \"natural language processing in the browser\",\n  \"version\": \"7.0.28\",\n  \"main\": \"./builds/compromise.js\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git://github.com/nlp-compromise/compromise.git\"\n  },\n  \"scripts\": {\n    \"test\": \"node ./scripts/test.js\",\n    \"browsertest\": \"node ./scripts/browserTest.js\",\n    \"build\": \"node ./scripts/build.js\",\n    \"demo\": \"node ./scripts/demo.js\",\n    \"watch\": \"node ./scripts/watch.js\",\n    \"filesize\": \"node ./scripts/filesize.js\",\n    \"coverage\": \"node ./scripts/coverage.js\"\n  },\n  \"files\": [\n    \"builds/\",\n    \"docs/\"\n  ],\n  \"dependencies\": {},\n  \"devDependencies\": {\n    \"babel-plugin-transform-es3-member-expression-literals\": \"^6.22.0\",\n    \"babel-plugin-transform-es3-property-literals\": \"^6.22.0\",\n    \"babel-preset-es2015\": \"6.9.0\",\n    \"babel-preset-stage-2\": \"^6.11.0\",\n    \"babelify\": \"7.3.0\",\n    \"babili\": \"0.0.11\",\n    \"browserify\": \"13.0.1\",\n    \"browserify-glob\": \"^0.2.0\",\n    \"chalk\": \"^1.1.3\",\n    \"codacy-coverage\": \"^2.0.0\",\n    \"derequire\": \"^2.0.3\",\n    \"eslint\": \"^3.1.1\",\n    \"gaze\": \"^1.1.1\",\n    \"http-server\": \"0.9.0\",\n    \"nlp-corpus\": \"latest\",\n    \"nyc\": \"^8.4.0\",\n    \"shelljs\": \"^0.7.2\",\n    \"tap-min\": \"^1.1.0\",\n    \"tap-spec\": \"4.1.1\",\n    \"tape\": \"4.6.0\",\n    \"uglify-js\": \"2.7.0\"\n  },\n  \"license\": \"MIT\"\n}\n\n},{}],2:[function(_dereq_,module,exports){\n//adjectives that either aren't covered by rules, or have superlative/comparative forms\n//this list is the seed, from which various forms are conjugated\n'use strict';\n\nvar fns = _dereq_('../fns');\n\n//suffix-index adjectives\n//  {cial:'cru,spe'} -> 'crucial', 'special'\nvar compressed = {\n  going: 'easy,fore,on,out',\n  ight: 'overn,overwe,r,sl,upt',\n  ated: 'antiqu,intoxic,sophistic,unregul,unrel',\n  rant: 'aber,exube,flag,igno,vib',\n  wing: 'harro,kno,left-,right-',\n  ted: 'expec,impor,limi,spiri,talen,tes,unexpec,unpreceden',\n  ish: 'dan,fool,hell,lout,self,snobb,squeam,styl',\n  ary: 'dre,legend,necess,prim,sc,second,w,we',\n  ite: 'el,favor,fin,oppos,pet,pol,recond,tr',\n  ely: 'hom,lik,liv,lon,lov,tim,unlik',\n  tly: 'cos,ghas,ghos,nigh,sain,sprigh,unsigh',\n  dly: 'cowar,cud,frien,frien,kin,ma',\n  ble: 'a,dou,hum,nim,no,proba',\n  rly: 'bu,disorde,elde,hou,neighbo,yea',\n  ped: 'cram,pum,stereoty,stri,war',\n  sed: 'clo,disea,distres,unsupervi,u',\n  lly: 'chi,hi,jo,si,sme',\n  per: 'dap,impro,pro,su,up',\n  ile: 'fert,host,juven,mob,volat',\n  led: 'detai,disgrunt,fab,paralle,troub',\n  ast: 'e,l,p,steadf',\n  ent: 'abs,appar,b,pres',\n  ged: 'dama,deran,jag,rag',\n  ded: 'crow,guar,retar,undeci',\n  est: 'b,dishon,hon,quick',\n  ial: 'colon,impart,init,part',\n  ter: 'bet,lat,ou,ut',\n  ond: 'bey,bl,vagab',\n  ady: 'he,re,sh,ste',\n  eal: 'ether,id,r,surr',\n  ard: 'abo,awkw,stand,straightforw',\n  ior: 'jun,pr,sen,super',\n  ale: 'fem,m,upsc,wholes',\n  ed: 'advanc,belov,craz,determin,hallow,hook,inbr,justifi,nak,nuanc,sacr,subdu,unauthoriz,unrecogniz,wick',\n  ly: 'dai,earth,gris,heaven,low,meas,month,oi,prick,seem,s,ug,unru,week,wi,woman',\n  al: 'actu,coloss,glob,illeg,leg,leth,liter,loy,ov,riv,roy,univers,usu',\n  dy: 'baw,bloo,clou,gau,gid,han,mol,moo,stur,ti,tren,unti,unwiel',\n  se: 'adver,den,diver,fal,immen,inten,obe,perver,preci,profu',\n  er: 'clev,form,inn,oth,ov,she,slend,somb,togeth,und',\n  id: 'afra,hum,langu,plac,rab,sord,splend,stup,torp',\n  re: 'awa,bizar,di,enti,macab,me,seve,since,spa',\n  en: 'barr,brok,crav,op,sudd,unev,unwritt,wood',\n  ic: 'alcohol,didact,gener,hispan,organ,publ,symbol',\n  ny: 'ma,pho,pu,shi,skin,ti,za',\n  st: 'again,mo,populi,raci,robu,uttermo',\n  ne: 'do,go,insa,obsce,picayu,sere',\n  nd: 'behi,bla,bli,profou,undergrou,wou',\n  le: 'multip,sing,so,subt,who',\n  pt: 'abru,ade,a,bankru,corru,nondescri',\n  ty: 'faul,hef,lof,mea,sal,uppi',\n  sy: 'bu,chee,lou,no,ro',\n  ct: 'abstra,exa,imperfe,inta,perfe',\n  et: 'discre,secr,sovi,ups,viol',\n  me: 'part-ti,pri,sa,supre,welco',\n  cy: 'boun,fan,i,jui,spi',\n  ry: 'fur,sor,tawd,wi,w',\n  te: 'comple,concre,obsole,remo',\n  ld: 'ba,bo,go,mi',\n  an: 'deadp,republic,t,urb',\n  ll: 'a,i,overa,sti',\n  ay: 'everyd,g,gr,ok',\n  or: 'indo,maj,min,outdo',\n  my: 'foa,gloo,roo,sli',\n  ck: 'ba,qua,si,sli',\n  rt: 'cove,expe,hu,ove',\n  ul: 'fo,gainf,helpf,painf'\n};\n\nvar arr = ['ablaze', 'above', 'adult', 'ahead', 'aloof', 'arab', 'asleep', 'average', 'backwards', 'bad', 'blank', 'bogus', 'bottom', 'brisk', 'cagey', 'chief', 'civil', 'common', 'complex', 'cozy', 'crisp', 'devout', 'difficult', 'due', 'dumb', 'eerie', 'evil', 'excess', 'extra', 'fake', 'far', 'faux', 'fierce ', 'final', 'fit', 'foreign', 'fun', 'good', 'goofy', 'gratis', 'grey', 'groovy', 'gross', 'half', 'huge', 'humdrum', 'inside', 'kaput', 'left', 'level', 'lewd', 'magenta', 'makeshift', 'mammoth', 'medium', 'modern', 'moot', 'naive', 'nearby', 'next', 'nonstop', 'north', 'notable', 'offbeat', 'ok', 'online', 'offline', 'outside', 'overwrought', 'premium', 'pricey', 'pro', 'quaint', 'random', 'rear', 'rebel', 'ritzy', 'savvy', 'sexy', 'shut', 'shy', 'sleek', 'smug', 'solemn', 'south', 'stark', 'superb', 'taboo', 'teenage', 'top', 'tranquil', 'true', 'ultra', 'understood', 'unfair', 'unknown', 'upbeat', 'upstairs', 'vanilla', 'various', 'widespread', 'woozy', 'wrong',\n//in\n'certain', 'highfalutin', 'main', 'vain'];\n\nmodule.exports = fns.uncompress_suffixes(arr, compressed);\n\n},{\"../fns\":7}],3:[function(_dereq_,module,exports){\n'use strict';\n\nvar fns = _dereq_('../fns');\n//these are adjectives that can become comparative + superlative with out \"most/more\"\n//its a whitelist for conjugation\n//this data is shared between comparative/superlative methods\n\nvar compressed = {\n  erate: 'degen,delib,desp,lit,mod',\n  icial: 'artif,benef,off,superf',\n  ntial: 'esse,influe,pote,substa',\n  teful: 'gra,ha,tas,was',\n  stant: 'con,di,in,resi',\n  hing: 'astonis,das,far-reac,refres,scat,screec,self-loat,soot',\n  eful: 'car,grac,peac,sham,us,veng',\n  ming: 'alar,cal,glea,unassu,unbeco,upco',\n  cial: 'commer,cru,finan,ra,so,spe',\n  ure: 'insec,miniat,obsc,premat,sec,s',\n  uent: 'congr,fl,freq,subseq',\n  rate: 'accu,elabo,i,sepa',\n  ific: 'horr,scient,spec,terr',\n  rary: 'arbit,contempo,cont,tempo',\n  ntic: 'authe,fra,giga,roma',\n  nant: 'domi,malig,preg,reso',\n  nent: 'emi,immi,perma,promi',\n  iant: 'brill,def,g,luxur',\n  ging: 'dama,encoura,han,lon',\n  iate: 'appropr,immed,inappropr,intermed',\n  rect: 'cor,e,incor,indi',\n  zing: 'agoni,ama,appeti,free',\n  ine: 'div,femin,genu,mascul,prist,rout',\n  ute: 'absol,ac,c,m,resol',\n  ern: 'east,north,south,st,west',\n  tful: 'deligh,doub,fre,righ,though,wis',\n  ant: 'abund,arrog,eleg,extravag,exult,hesit,irrelev,miscre,nonchal,obeis,observ,pl,pleas,redund,relev,reluct,signific,vac,verd',\n  ing: 'absorb,car,coo,liv,lov,ly,menac,perplex,shock,stand,surpris,tell,unappeal,unconvinc,unend,unsuspect,vex,want',\n  ate: 'adequ,delic,fortun,inadequ,inn,intim,legitim,priv,sed,ultim'\n};\nvar arr = ['absurd', 'aggressive', 'alert', 'alive', 'angry', 'attractive', 'awesome', 'beautiful', 'big', 'bitter', 'black', 'blue', 'bored', 'boring', 'brash', 'brave', 'brief', 'brown', 'calm', 'charming', 'cheap', 'check', 'clean', 'clear', 'close', 'cold', 'cool', 'cruel', 'curly', 'cute', 'dangerous', 'dear', 'dirty', 'drunk', 'dry', 'dull', 'eager', 'early', 'easy', 'efficient', 'empty', 'even', 'extreme', 'faint', 'fair', 'fanc', 'feeble', 'few', 'fierce', 'fine', 'firm', 'forgetful', 'formal', 'frail', 'free', 'full', 'funny', 'gentle', 'glad', 'glib', 'glad', 'grand', 'green', 'gruesome', 'handsome', 'happy', 'harsh', 'heavy', 'high', 'hollow', 'hot', 'hungry', 'impolite', 'important', 'innocent', 'intellegent', 'interesting', 'keen', 'kind', 'lame', 'large', 'late', 'lean', 'little', 'long', 'loud', 'low', 'lucky', 'lush', 'macho', 'mature', 'mean', 'meek', 'mellow', 'mundane', 'narrow', 'near', 'neat', 'new', 'nice', 'noisy', 'normal', 'odd', 'old', 'orange', 'pale', 'pink', 'plain', 'poor', 'proud', 'pure', 'purple', 'rapid', 'rare', 'raw', 'rich', 'rotten', 'round', 'rude', 'safe', 'scarce', 'scared', 'shallow', 'shrill', 'simple', 'slim', 'slow', 'small', 'smooth', 'solid', 'soon', 'sore', 'sour', 'square', 'stale', 'steep', 'strange', 'strict', 'strong', 'swift', 'tall', 'tame', 'tart', 'tender', 'tense', 'thin', 'thirsty', 'tired', 'true', 'vague', 'vast', 'vulgar', 'warm', 'weird', 'wet', 'wild', 'windy', 'wise', 'yellow', 'young'];\n\nmodule.exports = fns.uncompress_suffixes(arr, compressed);\n\n},{\"../fns\":7}],4:[function(_dereq_,module,exports){\n'use strict';\n\n//adjectives that become verbs with +'en' (short->shorten)\n\n//ones that also become superlative/comparative (short -> shortest)\nmodule.exports = ['bright', 'broad', 'coarse', 'damp', 'dark', 'dead', 'deaf', 'deep', 'fast', 'fat', 'flat', 'fresh', 'great', 'hard', 'light', 'loose', 'mad', 'moist', 'quick', 'quiet', 'red', 'ripe', 'rough', 'sad', 'sharp', 'short', 'sick', 'smart', 'soft', 'stiff', 'straight', 'sweet', 'thick', 'tight', 'tough', 'weak', 'white', 'wide'];\n\n},{}],5:[function(_dereq_,module,exports){\n'use strict';\n//terms that are 'Date' term\n\nvar months = ['january', 'february',\n// \"march\",  //ambig\n'april',\n// \"may\",   //ambig\n'june', 'july', 'august', 'september', 'october', 'november', 'december', 'jan', 'feb', 'mar', 'apr', 'jun', 'jul', 'aug', 'sep', 'oct', 'nov', 'dec', 'sept', 'sep'];\n\nvar days = ['monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday', 'mon', 'tues', 'wed', 'thurs', 'fri', 'sat', 'sun'];\n//add plural eg.'mondays'\nfor (var i = 0; i <= 6; i++) {\n  days.push(days[i] + 's');\n}\n\nvar durations = ['millisecond',\n// 'second',\n'minute', 'hour', 'day', 'week', 'month', 'year', 'decade'];\n//add their plurals\nvar len = durations.length;\nfor (var _i = 0; _i < len; _i++) {\n  durations.push(durations[_i]);\n  durations.push(durations[_i] + 's');\n}\ndurations.push('century');\ndurations.push('centuries');\ndurations.push('seconds');\n\nvar relative = ['yesterday', 'today', 'tomorrow',\n// 'week',\n'weekend', 'tonight'];\n\nmodule.exports = {\n  days: days,\n  months: months,\n  durations: durations,\n  relative: relative\n};\n\n},{}],6:[function(_dereq_,module,exports){\n'use strict';\n\nmodule.exports = ['all hallows eve', 'all saints day', 'all sts day', 'april fools', 'armistice day', 'australia day', 'bastille day', 'boxing day', 'canada day', 'christmas', 'christmas eve', 'cinco de mayo', 'emancipation day', 'groundhog day', 'halloween', '16 de septiembre', 'dieciseis de septiembre', 'grito de dolores', 'all hallows eve', 'day of the dead', 'dia de muertos', 'harvey milk day', 'inauguration day', 'independence day', 'independents day', 'juneteenth', 'labour day', 'national freedom day', 'national nurses day', 'new years', 'new years eve', 'purple heart day', 'rememberance day', 'rosa parks day', 'saint andrews day', 'saint patricks day', 'saint stephens day', 'saint valentines day', 'st andrews day', 'st patricks day', 'st stephens day', 'st valentines day ', 'valentines day', 'veterans day', 'victoria day', 'womens equality day', 'xmas',\n// Fixed religious and cultural holidays\n// Catholic + Christian\n'epiphany', 'orthodox christmas day', 'orthodox new year', 'assumption of mary', 'all saints day', 'all souls day', 'feast of the immaculate conception', 'feast of our lady of guadalupe',\n\n// Kwanzaa\n'kwanzaa',\n\n// Pagan / metal 🤘\n'imbolc', 'beltaine', 'lughnassadh', 'samhain', 'martin luther king day', 'mlk day', 'presidents day', 'mardi gras', 'tax day', 'commonwealth day', 'mothers day', 'memorial day', 'fathers day', 'columbus day', 'indigenous peoples day', 'canadian thanksgiving', 'election day', 'thanksgiving', 't-day', 'turkey day', 'black friday', 'cyber monday',\n\n// Astronomical religious and cultural holidays\n// Catholic + Christian\n'ash wednesday', 'palm sunday', 'maundy thursday', 'good friday', 'holy saturday', 'easter', 'easter sunday', 'easter monday', 'orthodox good friday', 'orthodox holy saturday', 'orthodox easter', 'orthodox easter monday', 'ascension day', 'pentecost', 'whitsunday', 'whit sunday', 'whit monday', 'trinity sunday', 'corpus christi', 'advent',\n\n// Jewish\n'tu bishvat', 'tu bshevat', 'purim', 'passover', 'yom hashoah', 'lag baomer', 'shavuot', 'tisha bav', 'rosh hashana', 'yom kippur', 'sukkot', 'shmini atzeret', 'simchat torah', 'chanukah', 'hanukkah',\n\n// Muslim\n'isra and miraj', 'lailat al-qadr', 'eid al-fitr', 'id al-Fitr', 'eid ul-Fitr', 'ramadan', 'eid al-adha', 'muharram', 'the prophets birthday',\n\n// Pagan / metal 🤘\n'ostara', 'march equinox', 'vernal equinox', 'litha', 'june solistice', 'summer solistice', 'mabon', 'september equinox', 'autumnal equinox', 'yule', 'december solstice', 'winter solstice',\n\n// Additional important holidays\n'chinese new year', 'diwali'];\n\n},{}],7:[function(_dereq_,module,exports){\n'use strict';\n\n//shallow-merge an object\n\nexports.extendObj = function (o, o2) {\n  Object.keys(o2).forEach(function (k) {\n    o[k] = o2[k];\n  });\n  return o;\n};\n\n//uncompress data in the adhoc compressed form {'ly':'kind,quick'}\nexports.uncompress_suffixes = function (list, obj) {\n  var keys = Object.keys(obj);\n  var l = keys.length;\n  for (var i = 0; i < l; i++) {\n    var arr = obj[keys[i]].split(',');\n    for (var i2 = 0; i2 < arr.length; i2++) {\n      list.push(arr[i2] + keys[i]);\n    }\n  }\n  return list;\n};\n\n//uncompress data in the adhoc compressed form {'over':'blown,kill'}\nexports.uncompress_prefixes = function (list, obj) {\n  var keys = Object.keys(obj);\n  var l = keys.length;\n  for (var i = 0; i < l; i++) {\n    var arr = obj[keys[i]].split(',');\n    for (var i2 = 0; i2 < arr.length; i2++) {\n      list.push(keys[i] + arr[i2]);\n    }\n  }\n  return list;\n};\n\n},{}],8:[function(_dereq_,module,exports){\n'use strict';\n//the data is all variously compressed and sorted\n//this is just a helper file for the main file paths..\n\nmodule.exports = {\n  'firstnames': _dereq_('./people/firstnames'),\n  'lastnames': _dereq_('./people/lastnames'),\n  'notable_people': _dereq_('./people/notable'),\n  'titles': _dereq_('./people/titles'),\n\n  'currencies': _dereq_('./values/currencies'),\n  'numbers': _dereq_('./values/numbers'),\n  'ordinalMap': _dereq_('./values/ordinalMap'),\n  'units': _dereq_('./values/units'),\n\n  'dates': _dereq_('./dates/dates'),\n  'holidays': _dereq_('./dates/holidays'),\n\n  'professions': _dereq_('./nouns/professions'),\n  'abbreviations': _dereq_('./nouns/abbreviations'),\n  'demonyms': _dereq_('./nouns/demonyms'),\n  'irregular_plurals': _dereq_('./nouns/irregular_plurals'),\n  'places': _dereq_('./nouns/places'),\n  'uncountables': _dereq_('./nouns/uncountables'),\n  'nouns': _dereq_('./nouns/nouns'),\n\n  'organizations': _dereq_('./organizations/organizations'),\n  'sportsTeams': _dereq_('./organizations/sportsTeams'),\n  'bands': _dereq_('./organizations/bands'),\n  'orgWords': _dereq_('./organizations/orgWords'),\n\n  'adjectives': _dereq_('./adjectives/adjectives'),\n  'superlatives': _dereq_('./adjectives/superlatives'),\n  'verbConverts': _dereq_('./adjectives/verbConverts'),\n\n  'irregular_verbs': _dereq_('./verbs/irregular_verbs'),\n  'verbs': _dereq_('./verbs/verbs'),\n\n  'misc': _dereq_('./misc/misc')\n};\n\n},{\"./adjectives/adjectives\":2,\"./adjectives/superlatives\":3,\"./adjectives/verbConverts\":4,\"./dates/dates\":5,\"./dates/holidays\":6,\"./misc/misc\":13,\"./nouns/abbreviations\":15,\"./nouns/demonyms\":16,\"./nouns/irregular_plurals\":17,\"./nouns/nouns\":18,\"./nouns/places\":19,\"./nouns/professions\":20,\"./nouns/uncountables\":21,\"./organizations/bands\":22,\"./organizations/orgWords\":23,\"./organizations/organizations\":24,\"./organizations/sportsTeams\":25,\"./people/firstnames\":28,\"./people/lastnames\":29,\"./people/notable\":31,\"./people/titles\":32,\"./values/currencies\":33,\"./values/numbers\":34,\"./values/ordinalMap\":35,\"./values/units\":36,\"./verbs/irregular_verbs\":37,\"./verbs/verbs\":39}],9:[function(_dereq_,module,exports){\n'use strict';\n//a lexicon is a giant object of known words and their assumed pos-tag.\n//the way we make it rn is a bit of a mess.\n\nvar data = _dereq_('./index');\nvar fns = _dereq_('./fns');\nvar toPlural = _dereq_('../result/subset/nouns/methods/pluralize');\nvar adj = _dereq_('../result/subset/adjectives/methods/index');\nvar toAdjective = _dereq_('../result/subset/verbs/methods/toAdjective');\nvar fastConjugate = _dereq_('../result/subset/verbs/methods/conjugate/faster');\nvar lexicon = {};\n// console.time('lexicon');\n\nvar addObj = function addObj(o) {\n  fns.extendObj(lexicon, o);\n};\nvar addArr = function addArr(arr, tag) {\n  var l = arr.length;\n  for (var i = 0; i < l; i++) {\n    lexicon[arr[i]] = tag;\n  }\n};\n\n//let a rip\naddArr(data.uncountables, 'Noun');\nvar units = data.units.words.filter(function (s) {\n  return s.length > 1;\n});\naddArr(units, 'Unit');\naddArr(data.dates.durations, 'Duration');\n\naddObj(data.abbreviations);\n//number-words are well-structured\nvar obj = data.numbers.ordinal;\naddArr(Object.keys(obj.ones), 'Ordinal');\naddArr(Object.keys(obj.teens), 'Ordinal');\naddArr(Object.keys(obj.tens), 'Ordinal');\naddArr(Object.keys(obj.multiples), 'Ordinal');\nobj = data.numbers.cardinal;\naddArr(Object.keys(obj.ones), 'Cardinal');\naddArr(Object.keys(obj.teens), 'Cardinal');\naddArr(Object.keys(obj.tens), 'Cardinal');\naddArr(Object.keys(obj.multiples), 'Cardinal');\naddArr(Object.keys(data.numbers.prefixes), 'Cardinal');\n//singular/plural\naddArr(Object.keys(data.irregular_plurals.toPlural), 'Singular');\naddArr(Object.keys(data.irregular_plurals.toSingle), 'Plural');\n\n//dates are well-structured\naddArr(data.dates.days, 'WeekDay');\naddArr(data.dates.months, 'Month');\naddArr(data.dates.relative, 'RelativeDay');\naddArr(data.holidays, 'Holiday');\n\naddArr(data.professions, 'Actor'); //?\naddArr(data.demonyms, 'Demonym');\naddArr(data.sportsTeams, 'SportsTeam');\naddArr(data.bands, 'Organization');\naddArr(data.orgWords, 'Noun');\n\n//irregular verbs\nObject.keys(data.irregular_verbs).forEach(function (inf) {\n  lexicon[inf] = 'Infinitive';\n  var conj = data.irregular_verbs[inf];\n  Object.keys(conj).forEach(function (k2) {\n    if (conj[k2]) {\n      lexicon[conj[k2]] = k2;\n    }\n  });\n  var o = fastConjugate(inf);\n  Object.keys(o).forEach(function (k) {\n    if (o[k] && !lexicon[o[k]]) {\n      lexicon[o[k]] = k;\n    }\n  });\n});\n\n//conjugate verblist\ndata.verbs.forEach(function (v) {\n  var o = fastConjugate(v);\n  Object.keys(o).forEach(function (k) {\n    if (o[k] && !lexicon[o[k]]) {\n      lexicon[o[k]] = k;\n    }\n  });\n  lexicon[toAdjective(v)] = 'Adjective';\n});\n\n//conjugate adjectives\ndata.superlatives.forEach(function (a) {\n  lexicon[adj.toNoun(a)] = 'Noun';\n  lexicon[adj.toAdverb(a)] = 'Adverb';\n  lexicon[adj.toSuperlative(a)] = 'Superlative';\n  lexicon[adj.toComparative(a)] = 'Comparative';\n});\n\n//even more expressive adjectives\ndata.verbConverts.forEach(function (a) {\n  lexicon[adj.toNoun(a)] = 'Noun';\n  lexicon[adj.toAdverb(a)] = 'Adverb';\n  lexicon[adj.toSuperlative(a)] = 'Superlative';\n  lexicon[adj.toComparative(a)] = 'Comparative';\n\n  var v = adj.toVerb(a);\n  lexicon[v] = 'Verb';\n  //now conjugate it\n  var o = fastConjugate(v);\n  Object.keys(o).forEach(function (k) {\n    if (o[k] && !lexicon[o[k]]) {\n      lexicon[o[k]] = k;\n    }\n  });\n});\n\n//inflect nouns\ndata.nouns.forEach(function (n) {\n  lexicon[n] = 'Singular';\n  var plural = toPlural(n);\n  lexicon[plural] = 'Plural';\n});\n\n//let a rip.\naddObj(data.firstnames);\naddArr(data.notable_people.female, 'FemaleName');\naddArr(data.notable_people.male, 'MaleName');\naddArr(data.titles, 'Singular');\naddArr(data.lastnames, 'LastName');\naddArr(data.places.airports, 'Place');\naddArr(data.places.cities, 'City');\naddArr(data.places.countries, 'Country');\naddArr(data.organizations, 'Organization');\naddArr(data.adjectives, 'Adjective');\naddArr(data.verbConverts, 'Adjective');\naddArr(data.superlatives, 'Adjective');\naddArr(data.currencies, 'Currency');\n//these ad-hoc manual ones have priority\naddObj(data.misc);\n\n//for safety (these are sneaky)\ndelete lexicon[''];\ndelete lexicon[' '];\ndelete lexicon[null];\nmodule.exports = lexicon;\n\n// console.log(lexicon['make']);\n// console.log(fastConjugate('make'));\n// let t = new Term('shake');\n// t.tag.Verb = true;\n// console.timeEnd('lexicon');\n// console.log(Object.keys(lexicon).length);\n\n},{\"../result/subset/adjectives/methods/index\":61,\"../result/subset/nouns/methods/pluralize\":98,\"../result/subset/verbs/methods/conjugate/faster\":137,\"../result/subset/verbs/methods/toAdjective\":148,\"./fns\":7,\"./index\":8}],10:[function(_dereq_,module,exports){\n'use strict';\n\nmodule.exports = [\n// 'now',\n'a lot', 'a posteriori', 'abroad', 'ad nauseam', 'again', 'all but', 'all that', 'almost', 'alone', 'already', 'also', 'always', 'anymore', 'anyway', 'apart', 'aside', 'at best', 'at large', 'at least', 'at most', 'at worst', 'away', 'by far', 'by now', 'damn', 'de jure', 'de trop', 'directly', 'en masse', 'ever', 'for example', 'for good', 'for sure', 'forever', 'further', 'furthermore', 'hence', 'indeed', 'instead', 'just', 'just about', 'kinda', 'maybe', 'meanwhile', 'more', 'moreover', 'newly', 'no longer', 'not withstanding', 'of course', 'often', 'once', 'once again', 'once more', 'only', 'par excellence', 'per se', 'perhaps', 'point blank', 'quite', 'randomly', 'rather', 'really', 'several', 'so', 'somehow', 'sometimes', 'somewhat', 'soon', 'sort of', 'such', 'then', 'thus', 'too', 'totally', 'toward', 'twice', 'up to', 'upwards of', 'very', 'way', 'well', 'yes', 'yep'];\n\n},{}],11:[function(_dereq_,module,exports){\n'use strict';\n\nmodule.exports = ['this', 'any', 'enough', 'each', 'whatever', 'every', 'these', 'another', 'plenty', 'whichever', 'neither', 'an', 'a', 'least', 'own', 'few', 'both', 'those', 'the', 'that', 'various', 'either', 'much', 'some', 'else',\n//some other languages (what could go wrong?)\n'la', 'le', 'les', 'des', 'de', 'du', 'el'];\n\n},{}],12:[function(_dereq_,module,exports){\n'use strict';\n\nmodule.exports = ['uh', 'uhh', 'uhm', 'uh huh', 'uh-oh', 'please', 'plz', 'ugh', 'sheesh', 'eww', 'pff', 'voila', 'oy', 'hi', 'hello', 'bye', 'goodbye', 'hey', 'hai', 'eep', 'hurrah', 'yuck', 'ow', 'duh', 'oh', 'hmm', 'yeah', 'whoa', 'ooh', 'whee', 'ah', 'bah', 'gah', 'yaa', 'phew', 'gee', 'ahem', 'eek', 'meh', 'yahoo', 'oops', 'd\\'oh', 'psst', 'argh', 'grr', 'nah', 'shhh', 'whew', 'mmm', 'ooo', 'yay', 'uh-huh', 'boo', 'wow', 'nope', 'haha', 'hahaha', 'lol', 'lols', 'lmao', 'lmfao', 'ya', 'hee', 'ohh', 'eh', 'yup', 'wtf', 'wtaf', 'et cetera', 'fuck', 'shit', 'damn', 'dang', 'damnit', 'dammit', 'hell', 'a la'];\n\n},{}],13:[function(_dereq_,module,exports){\n'use strict';\n\nvar misc = {\n  'here': 'Noun',\n  'better': 'Comparative',\n  'earlier': 'Superlative',\n  'make sure': 'Verb',\n  'keep tabs': 'Verb',\n  'gonna': 'Verb',\n  'cannot': 'Verb',\n  'has': 'Verb',\n  'sounds': 'PresentTense',\n  //special case for took/taken\n  'taken': 'PastTense',\n  'msg': 'Verb', //slang\n  'a few': 'Value', //different than 'few people'\n  'years old': 'Unit', //special case\n  'not': 'Negative',\n  'non': 'Negative',\n  'never': 'Negative',\n  'no': 'Negative',\n  'no doubt': 'Noun',\n  'not only': 'Adverb',\n  'how\\'s': 'QuestionWord' //not conjunction\n};\n\nvar compact = {\n  Adjective: ['so called', //?\n  'on board', 'vice versa', 'en route', 'upside down', 'up front', 'in front', 'in situ', 'in vitro', 'ad hoc', 'de facto', 'ad infinitum', 'for keeps', 'a priori', 'off guard', 'spot on', 'ipso facto', 'fed up', 'brand new', 'old fashioned', 'bona fide', 'well off', 'far off', 'straight forward', 'hard up', 'sui generis', 'en suite', 'avant garde', 'sans serif', 'gung ho', 'super duper', 'bourgeois'],\n\n  Verb: ['lengthen', 'heighten', 'worsen', 'lessen', 'awaken', 'frighten', 'threaten', 'hasten', 'strengthen', 'given',\n  //misc\n  'known', 'shown', 'seen', 'born'],\n\n  Place: ['new england', 'new hampshire', 'new jersey', 'new mexico', 'united states', 'united kingdom', 'great britain', 'great lakes', 'pacific ocean', 'atlantic ocean', 'indian ocean', 'arctic ocean', 'antarctic ocean', 'everglades'],\n  //conjunctions\n  'Conjunction': ['yet', 'therefore', 'or', 'while', 'nor', 'whether', 'though', 'tho', 'because', 'cuz', 'but', 'for', 'and', 'however', 'before', 'although', 'how', 'plus', 'versus', 'otherwise'],\n  Time: [\n  //date\n  'noon', 'midnight', 'now', 'morning', 'evening', 'afternoon', 'night', 'breakfast time', 'lunchtime', 'dinnertime', 'ago', 'sometime', 'eod', 'oclock'],\n  Date: [\n  //end of day, end of month\n  'eom', 'standard time', 'daylight time'],\n  'Condition': ['if', 'unless', 'notwithstanding'],\n\n  'PastTense': ['said', 'had', 'been', 'began', 'came', 'did', 'meant', 'went'],\n\n  'Gerund': ['going', 'being', 'according', 'resulting', 'developing', 'staining'],\n\n  'Copula': ['is', 'are', 'was', 'were', 'am'],\n\n  //determiners\n  'Determiner': _dereq_('./determiners'),\n\n  //prepositions\n  'Preposition': _dereq_('./prepositions'),\n\n  //modal verbs\n  'Modal': ['can', 'may', 'could', 'might', 'will', 'ought to', 'would', 'must', 'shall', 'should', 'ought', 'shant', 'lets'],\n\n  //Possessive pronouns\n  'Possessive': ['mine', 'something', 'none', 'anything', 'anyone', 'theirs', 'himself', 'ours', 'his', 'my', 'their', 'yours', 'your', 'our', 'its', 'herself', 'hers', 'themselves', 'myself', 'her'],\n\n  //personal pronouns (nouns)\n  'Pronoun': ['it', 'they', 'i', 'them', 'you', 'she', 'me', 'he', 'him', 'ourselves', 'us', 'we', 'thou', 'il', 'elle', 'yourself', '\\'em', 'he\\'s', 'she\\'s'],\n  //questions are awkward pos. are clarified in question_pass\n  'QuestionWord': ['where', 'why', 'when', 'who', 'whom', 'whose', 'what', 'which'],\n  //some manual adverbs (the rest are generated)\n  'Adverb': _dereq_('./adverbs'),\n\n  //interjections, expressions\n  'Expression': _dereq_('./expressions'),\n\n  //family-terms are people\n  Person: ['father', 'mother', 'mom', 'dad', 'mommy', 'daddy', 'sister', 'brother', 'aunt', 'uncle', 'grandfather', 'grandmother', 'cousin', 'stepfather', 'stepmother', 'boy', 'girl', 'man', 'woman', 'guy', 'dude', 'bro', 'gentleman', 'someone']\n};\n//unpack the compact terms into the misc lexicon..\nvar keys = Object.keys(compact);\nfor (var i = 0; i < keys.length; i++) {\n  var arr = compact[keys[i]];\n  for (var i2 = 0; i2 < arr.length; i2++) {\n    misc[arr[i2]] = keys[i];\n  }\n}\nmodule.exports = misc;\n\n},{\"./adverbs\":10,\"./determiners\":11,\"./expressions\":12,\"./prepositions\":14}],14:[function(_dereq_,module,exports){\n'use strict';\n\nmodule.exports = ['\\'o', 'a\\'', 'about', 'across', 'after', 'along', 'amid', 'amidst', 'among', 'amongst', 'apropos', 'around', 'as', 'as long as', 'at', 'atop', 'barring', 'below', 'besides', 'between', 'by', 'chez', 'circa', 'despite', 'down', 'during', 'except', 'from', 'in', 'into',\n// 'just like',\n'mid', 'midst', 'notwithstanding', 'o\\'', 'of', 'off', 'on', 'onto', 'out', 'per', 'qua', 'sans', 'since', 'so that', 'than', 'through', 'throughout', 'thru', 'till', 'to', 'towards', 'unlike', 'until', 'up', 'upon', 'versus', 'via', 'vis-a-vis', 'w/o', 'whereas', 'with', 'within', 'without', '-' //june - july\n];\n\n},{}],15:[function(_dereq_,module,exports){\n//these are common word shortenings used in the lexicon and sentence segmentation methods\n//there are all nouns,or at the least, belong beside one.\n'use strict';\n\n//common abbreviations\n\nvar compact = {\n  Noun: ['arc', 'al', 'exp', 'fy', 'pd', 'pl', 'plz', 'tce', 'bl', 'ma', 'ba', 'lit', 'ex', 'eg', 'ie', 'ca', 'cca', 'vs', 'etc', 'esp', 'ft',\n  //these are too ambiguous\n  'bc', 'ad', 'md', 'corp', 'col'],\n  Organization: ['dept', 'univ', 'assn', 'bros', 'inc', 'ltd', 'co',\n  //proper nouns with exclamation marks\n  'yahoo', 'joomla', 'jeopardy'],\n\n  Place: ['rd', 'st', 'dist', 'mt', 'ave', 'blvd', 'cl', 'ct', 'cres', 'hwy',\n  //states\n  'ariz', 'cal', 'calif', 'colo', 'conn', 'fla', 'fl', 'ga', 'ida', 'ia', 'kan', 'kans', 'minn', 'neb', 'nebr', 'okla', 'penna', 'penn', 'pa', 'dak', 'tenn', 'tex', 'ut', 'vt', 'va', 'wis', 'wisc', 'wy', 'wyo', 'usafa', 'alta', 'ont', 'que', 'sask'],\n\n  Date: ['jan', 'feb', 'mar', 'apr', 'jun', 'jul', 'aug', 'sep', 'sept', 'oct', 'nov', 'dec', 'circa'],\n\n  //Honorifics\n  Honorific: ['adj', 'adm', 'adv', 'asst', 'atty', 'bldg', 'brig', 'capt', 'cmdr', 'comdr', 'cpl', 'det', 'dr', 'esq', 'gen', 'gov', 'hon', 'jr', 'llb', 'lt', 'maj', 'messrs', 'mister', 'mlle', 'mme', 'mr', 'mrs', 'ms', 'mstr', 'op', 'ord', 'phd', 'prof', 'pvt', 'rep', 'reps', 'res', 'rev', 'sen', 'sens', 'sfc', 'sgt', 'sir', 'sr', 'supt', 'surg'\n  //miss\n  //misses\n  ]\n\n};\n\n//unpack the compact terms into the misc lexicon..\nvar abbreviations = {};\nvar keys = Object.keys(compact);\nfor (var i = 0; i < keys.length; i++) {\n  var arr = compact[keys[i]];\n  for (var i2 = 0; i2 < arr.length; i2++) {\n    abbreviations[arr[i2]] = keys[i];\n  }\n}\nmodule.exports = abbreviations;\n\n},{}],16:[function(_dereq_,module,exports){\n'use strict';\n\n//adjectival forms of place names, as adjectives.\nmodule.exports = ['afghan', 'albanian', 'algerian', 'angolan', 'argentine', 'armenian', 'australian', 'aussie', 'austrian', 'bangladeshi', 'basque', // of Basque Country\n'belarusian', 'belgian', 'bolivian', 'bosnian', 'brazilian', 'bulgarian', 'cambodian', 'cameroonian', 'canadian', 'chadian', 'chilean', 'chinese', 'colombian', 'congolese', 'croatian', 'cuban', 'czech', 'dominican', 'danish', 'egyptian', 'british', 'estonian', 'ethiopian', 'ecuadorian', 'finnish', 'french', 'gambian', 'georgian', 'german', 'greek', 'ghanaian', 'guatemalan', 'haitian', 'hungarian', 'honduran', 'icelandic', 'indian', 'indonesian', 'iranian', 'iraqi', 'irish', 'israeli', 'italian', 'ivorian', // of Ivory Coast\n'jamaican', 'japanese', 'jordanian', 'kazakh', 'kenyan', 'korean', 'kuwaiti', 'lao', // of Laos\n'latvian', 'lebanese', 'liberian', 'libyan', 'lithuanian', 'namibian', 'malagasy', // of Madagascar\n'macedonian', 'malaysian', 'mexican', 'mongolian', 'moroccan', 'dutch', 'nicaraguan', 'nigerian', // of Nigeria\n'nigerien', // of Niger\n'norwegian', 'omani', 'panamanian', 'paraguayan', 'pakistani', 'palestinian', 'peruvian', 'philippine', 'filipino', 'polish', 'portuguese', 'qatari', 'romanian', 'russian', 'rwandan', 'samoan', 'saudi', 'scottish', 'senegalese', 'serbian', 'singaporean', 'slovak', 'somalian', 'sudanese', 'swedish', 'swiss', 'syrian', 'taiwanese', 'trinidadian', 'thai', 'tunisian', 'turkmen', 'ugandan', 'ukrainian', 'american', 'hindi', 'spanish', 'venezuelan', 'vietnamese', 'welsh', 'zambian', 'zimbabwean', 'english', 'african', 'european', 'asian', 'californian'];\n\n},{}],17:[function(_dereq_,module,exports){\n//nouns with irregular plural/singular forms\n//used in noun.inflect, and also in the lexicon.\n//compressed with '_' to reduce some redundancy.\n'use strict';\n\nvar main = [['child', '_ren'], ['person', 'people'], ['leaf', 'leaves'], ['database', '_s'], ['quiz', '_zes'], ['stomach', '_s'], ['sex', '_es'], ['move', '_s'], ['shoe', '_s'], ['goose', 'geese'], ['phenomenon', 'phenomena'], ['barracks', '_'], ['deer', '_'], ['syllabus', 'syllabi'], ['index', 'indices'], ['appendix', 'appendices'], ['criterion', 'criteria'], ['man', 'men'], ['rodeo', '_s'], ['epoch', '_s'], ['zero', '_s'], ['avocado', '_s'], ['halo', '_s'], ['tornado', '_s'], ['tuxedo', '_s'], ['sombrero', '_s'], ['addendum', 'addenda'], ['alga', '_e'], ['alumna', '_e'], ['alumnus', 'alumni'], ['bacillus', 'bacilli'], ['cactus', 'cacti'], ['beau', '_x'], ['château', '_x'], ['chateau', '_x'], ['tableau', '_x'], ['corpus', 'corpora'], ['curriculum', 'curricula'], ['echo', '_es'], ['embargo', '_es'], ['foot', 'feet'], ['genus', 'genera'], ['hippopotamus', 'hippopotami'], ['larva', '_e'], ['libretto', 'libretti'], ['loaf', 'loaves'], ['matrix', 'matrices'], ['memorandum', 'memoranda'], ['mosquito', '_es'], ['opus', 'opera'], ['ovum', 'ova'], ['ox', '_en'], ['radius', 'radii'], ['referendum', 'referenda'], ['thief', 'thieves'], ['tooth', 'teeth']];\n//decompress it\nmain = main.map(function (a) {\n  a[1] = a[1].replace('_', a[0]);\n  return a;\n});\n//build-out two mappings\nvar toSingle = main.reduce(function (h, a) {\n  h[a[1]] = a[0];\n  return h;\n}, {});\nvar toPlural = main.reduce(function (h, a) {\n  h[a[0]] = a[1];\n  return h;\n}, {});\n\nmodule.exports = {\n  toSingle: toSingle,\n  toPlural: toPlural\n};\n\n},{}],18:[function(_dereq_,module,exports){\n'use strict';\n\n//most nouns do not nead to be listed\n//for whatever reasons, these look like not-nouns\n//so make sure they become nouns\nmodule.exports = [\n//double-consonant rule\n'egg', 'bottle', 'cottage', 'kitty', 'doggy', 'ad hominem', 'banking', 'body', 'breakfast', 'ceiling', 'city', 'credit card', 'death', 'dinner', 'door', 'economy', 'energy', 'event', 'everything', 'example', 'fl oz', 'friend', 'funding', 'god', 'glacier', 'canary', 'grand slam', 'head start', 'home', 'house', 'lunch', 'nothing', 'number', 'others', 'part', 'patent', 'problem', 'purpose', 'room', 'student', 'stuff', 'super bowl', 'system', 'there', 'thing', 'things', 'tragedy', 'us dollar', 'world', 'world series'];\n\n},{}],19:[function(_dereq_,module,exports){\n'use strict';\n\nvar fns = _dereq_('../fns');\n\n//uncompressed country names\nvar countries = ['andorra', 'antarctica', 'antigua and barbuda', 'aruba', 'bahamas', 'bangladesh', 'barbados', 'belgium', 'belize', 'bermuda', 'bonaire', 'brazil', 'brunei', 'burkina faso', 'burundi', 'burma', 'cape verde',\n// 'chad',\n'chile', 'comoros', 'congo-brazzaville', 'cuba', 'curacao', 'cote d\\'ivoire', 'denmark', 'djibouti', 'dominica', 'east timor', 'ecuador', 'egypt', 'el salvador', 'fiji', 'france', 'french guiana', 'germany', 'gibraltar', 'greece', 'grenada', 'guam', 'guinea-bissau', 'guadeloupe', 'guernsey', 'haiti', 'honduras', 'hungary', 'hong kong', 'isle of man', 'iraq', 'israel', 'ivory coast', 'italy', 'jamaica', 'jersey', 'kenya', 'kiribati', 'kosovo', 'kuwait', 'laos', 'lesotho', 'libya', 'luxembourg', 'macao', 'malawi', 'mali', 'malta', 'martinique', 'mayotte', 'moldova', 'mozambique', 'montserrat', 'montenegro', 'nauru', 'niue', 'netherlands', 'nicaragua', 'niger', 'palau', 'panama', 'peru', 'samoa', 'san marino', 'saint helena', 'sint maarten', 'singapore', 'sri lanka', 'suriname', 'sweden', 'timor-leste', 'trinidad and tobago', 'tonga', 'tokelau', 'turkey', 'tuvalu', 'u.s.a.', 'united kingdom', 'u.k.', 'usa', 'ussr', 'vanuatu', 'vietnam', 'vatican city', 'wales', 'wallis and futuna', 'yemen', 'zimbabwe',\n//'in'\n'spain', 'benin', 'bahrain', 'saint martin', 'liechtenstein'];\nvar compressed_countries = {\n  sland: 'christmas i,norfolk i,bouvet i',\n  slands: 'british virgin i,u.s. virgin i,turks and caicos i,pitcairn i,northern mariana i,marshall i,cayman i,faroe i,falkland i,cook i,cocos i,keeling i,solomon i',\n  istan: 'pak,uzbek,afghan,tajik,turkmen',\n  ublic: 'czech rep,dominican rep,central african rep',\n  uinea: 'g,papua new g,equatorial g',\n  land: 'thai,po,switzer,fin,republic of ire,ire,new zea,swazi,ice,eng,scot,green',\n  ania: 'tanz,rom,maurit,lithu,alb',\n  rica: 'ame,united states of ame,south af,costa ',\n  mbia: 'colo,za,ga',\n  eria: 'nig,alg,lib',\n  nia: 'arme,macedo,slove,esto',\n  sia: 'indone,rus,malay,tuni',\n  ina: 'ch,argent,bosnia and herzegov',\n  tan: 'kazakhs,kyrgyzs,bhu',\n  ana: 'gh,botsw,guy',\n  bia: 'saudi ara,ser,nami',\n  lia: 'austra,soma,mongo',\n  rea: 'south ko,north ko,erit',\n  dan: 'su,south su,jor',\n  ria: 'sy,aust,bulga',\n  co: 'mexi,mona,puerto ri,moroc',\n  ia: 'ind,ethiop,cambod,boliv,slovak,georg,croat,latv,saint luc,micrones,french polynes,czech',\n  an: 'jap,ir,taiw,azerbaij,om',\n  da: 'ugan,cana,rwan',\n  us: 'belar,mauriti,cypr',\n  al: 'nep,seneg,portug',\n  go: 'dr con,to,trinidad-toba',\n  la: 'anguil,venezue,ango,guatema',\n  es: 'united stat,philippin,united arab emirat,seychell,maldiv',\n  on: 'camero,leban,gab',\n  ar: 'myanm,madagasc,qat',\n  ay: 'paragu,norw,urugu',\n  ne: 'ukrai,sierra leo,palesti'\n};\ncountries = fns.uncompress_suffixes(countries, compressed_countries);\n\n/////uncomressed cities\nvar cities = ['aalborg', 'abu dhabi', 'ahmedabad', 'almaty', 'antwerp', 'aqaba', 'ashdod', 'ashgabat', 'athens', 'auckland', 'bogota', 'brussels', 'calgary', 'cape town', 'cebu', 'curitiba', 'doha', 'dushanbe', 'frankfurt', 'genoa', 'ghent', 'giza', 'graz', 'guangzhou', 'haifa', 'hanoi', 'helsinki', 'ho chi minh', 'homs', 'i̇zmir', 'jakarta', 'kiev', 'kingston', 'klaipeda', 'kobe', 'kosice', 'krakow', 'la plata', 'luxembourg', 'medellín', 'mexico', 'miskolc', 'montevideo', 'montreal', 'moscow', 'nagoya', 'nis', 'odessa', 'oslo', 'ottawa', 'palermo', 'paris', 'perth', 'phnom penh', 'phoenix', 'port elizabeth', 'poznan', 'prague', 'reykjavik', 'riga', 'rome', 'rosario', 'seville', 'skopje', 'stockholm', 'stuttgart', 'sydney', 'tbilisi', 'tegucigalpa', 'the hague', 'thessaloniki', 'tokyo', 'toulouse', 'trondheim', 'tunis', 'turku', 'utrecht', 'warsaw', 'winnipeg', 'wroclaw', 'zagreb',\n//in\n'tianjin', 'berlin', 'turin', 'dublin'];\n\nvar suffix_compressed_cities = {\n  burg: 'saint peters,yekaterin,ham,til,gothen,salz',\n  ton: 'hous,edmon,welling,hamil',\n  ion: 'herakl',\n  ana: 'hav,tir',\n  ara: 'guadalaj,ank,timiso',\n  an: 'tehr,mil,durb,bus,tain,abidj,amm,yerev',\n  ia: 'philadelph,brasil,alexandr,pretor,valenc',\n  on: 'ly,lond,yang,inche,daeje,lisb',\n  en: 'shenzh,eindhov,pils,copenhag,berg',\n  ng: 'beiji,chittago,pyongya,kaohsiu,taichu',\n  es: 'los angel,nant,napl,buenos air,f',\n  la: 'pueb,mani,barranquil,kampa,guatema',\n  or: 'salvad,san salvad,ulan bat,marib',\n  us: 'damasc,pirae,aarh,vilni',\n  as: 'carac,patr,burg,kaun',\n  va: 'craio,petah tik,gene,bratisla',\n  ai: 'shangh,mumb,chenn,chiang m',\n  ne: 'colog,melbour,brisba,lausan',\n  er: 'manchest,vancouv,tangi',\n  ka: 'dha,osa,banja lu',\n  ro: 'rio de janei,sappo,cai',\n  am: 'birmingh,amsterd,rotterd',\n  ur: 'kuala lump,winterth,kopavog',\n  ch: 'muni,zuri,christchur',\n  na: 'barcelo,vien,var',\n  ma: 'yokoha,li',\n  ul: 'istanb,seo,kab',\n  to: 'toron,qui,por',\n  iv: 'khark,lv,tel av',\n  sk: 'gdan,min'\n};\n\ncities = fns.uncompress_suffixes(cities, suffix_compressed_cities);\n\nvar prefix_compressed_cities = {\n  'new ': 'delhi,york,taipei',\n  san: 'a\\'a,tiago, jose',\n  ta: 'ipei,mpere,llinn,rtu',\n  ba: 'ngalore,ngkok,ku,sel',\n  li: 'verpool,ege,nz,massol',\n  ma: 'rseille,ndalay,drid,lmo',\n  be: 'rn,lgrade,irut',\n  ka: 'rachi,raj,ndy',\n  da: 'egu,kar,ugavpils',\n  ch: 'icago',\n  co: 'lombo,nstanta,rk',\n  bu: 'rsa,charest,dapest'\n};\ncities = fns.uncompress_prefixes(cities, prefix_compressed_cities);\n\n//some of the busiest airports in the world from\n//https://www.world-airport-codes.com/world-top-30-airports.html\nvar airports = ['atl', 'pek', 'lhr', 'hnd', 'ord', 'lax', 'cdg', 'dfw', 'cgk', 'dxb', 'fra', 'hkg', 'den', 'bkk', 'ams', 'jfk', 'ist', 'sfo', 'clt', 'las', 'phx', 'iax', 'kul', 'mia', 'icn', 'muc', 'syd', 'fco', 'mco', 'bcn', 'yyz', 'lgw', 'phl'];\n\nmodule.exports = {\n  countries: countries,\n  cities: cities,\n  airports: airports\n};\n\n},{\"../fns\":7}],20:[function(_dereq_,module,exports){\n'use strict';\n\n//professions 'lawyer' that aren't covered by verb.to_actor()\n\nmodule.exports = ['accountant', 'administrator', 'advisor', 'agent', 'architect', 'artist', 'assistant', 'attendant', 'bricklayer', 'butcher', 'carpenter', 'clerk', 'deputy', 'dietician', 'engineer', 'farmer', 'firefighter', 'fireman', 'gardener', 'getor', 'hairdresser', 'housekeeper', 'instructor', 'journalist', 'lawyer', 'mechanic', 'minister', 'musician', 'nurse', 'officer', 'operator', 'photographer', 'plumber', 'policeman', 'politician', 'practitioner', 'president', 'programmer', 'psychologist', 'receptionist', 'researcher', 'roofer', 'sailor', 'scientist', 'secretary', 'security guard', 'soldier', 'supervisor', 'surgeon', 'technician', 'therapist'];\n\n},{}],21:[function(_dereq_,module,exports){\n'use strict';\n\n//common nouns that have no plural form. These are suprisingly rare\n//used in noun.inflect(), and added as nouns in lexicon\nmodule.exports = ['advice', 'aircraft', 'art', 'baggage', 'bass', 'beef', 'bison', 'blood', 'bread', 'butter', 'cake', 'cash', 'celcius', 'chaos', 'cheese', 'chewing', 'civics', 'clothing', 'coal', 'coffee', 'conduct', 'confusion', 'cotton', 'currency', 'economics', 'education', 'electricity', 'enjoyment', 'entertainment', 'equipment', 'ethics', 'everybody', 'everyone', 'fahrenheit', 'fiction', 'fish', 'flour', 'food', 'forgiveness', 'fowl', 'fruit', 'fun', 'furniture', 'gold', 'golf', 'gossip', 'grass', 'ground', 'gum', 'gymnastics', 'hair', 'halibut', 'happiness', 'hertz', 'history', 'hockey', 'homework', 'honey', 'hospitality', 'ice', 'impatience', 'importance', 'information', 'itself', 'jewelry', 'justice', 'kelvin', 'knowledge', 'laughter', 'leather', 'leisure', 'lightning', 'liquid', 'literature', 'luck', 'luggage', 'machinery', 'mail', 'mathematics', 'measles', 'meat', 'milk', 'mist', 'money', 'moose', 'mumps', 'music', 'news', 'noise', 'oil', 'oxygen', 'paper', 'patience', 'peace', 'peanut', 'pepper', 'petrol', 'physics', 'plastic', 'pork', 'power', 'pressure', 'progress', 'rain', 'recognition', 'recreation', 'relaxation', 'research', 'rice', 'sadness', 'safety', 'salmon', 'salt', 'sand', 'scenery', 'series', 'sheep', 'shopping', 'silk', 'silver', 'snow', 'soap', 'soccer', 'softness', 'space', 'spacecraft', 'species', 'speed', 'steam', 'steel', 'sugar', 'sunshine', 'tea', 'tennis', 'thunder', 'time', 'toothpaste', 'traffic', 'trouble', 'trousers', 'trout', 'tuna', 'vinegar', 'violence', 'warmth', 'water', 'weather', 'wildlife', 'wine', 'wood', 'wool'];\n\n},{}],22:[function(_dereq_,module,exports){\n'use strict';\n\nmodule.exports = ['abba', 'ac/dc', 'aerosmith', 'bee gees', 'coldplay', 'creedence clearwater revival', 'def leppard', 'depeche mode', 'destiny\\'s child', 'duran duran', 'fleetwood mac', 'green day', 'guns n roses', 'joy division', 'metallica', 'moody blues', 'motley crue', 'new kids on the block', 'pink floyd', 'r.e.m.', 'radiohead', 'red hot chili peppers', 'sex pistols', 'soundgarden', 'spice girls', 'the beach boys', 'the beatles', 'the black eyed peas', 'the byrds', 'the carpenters', 'the guess who', 'the hollies', 'the rolling stones', 'the smashing pumpkins', 'the supremes', 'the who', 'thin lizzy', 'u2', 'van halen'];\n\n},{}],23:[function(_dereq_,module,exports){\n'use strict';\n\n//nouns that also signal the title of an unknown organization\n//todo remove/normalize plural forms\nmodule.exports = ['administration', 'agence', 'agences', 'agencies', 'agency', 'aircraft', 'airlines', 'airways', 'army', 'assoc', 'associates', 'association', 'assurance', 'authority', 'autorite', 'aviation', 'bank', 'banque', 'board', 'boys', 'brands', 'brewery', 'brotherhood', 'brothers', 'building society', 'bureau', 'cafe', 'caisse', 'capital', 'care', 'cathedral', 'center', 'central bank', 'centre', 'chemicals', 'choir', 'chronicle', 'church', 'circus', 'clinic', 'clinique', 'club', 'co', 'coalition', 'coffee', 'collective', 'college', 'commission', 'committee', 'communications', 'community', 'company', 'comprehensive', 'computers', 'confederation', 'conference', 'conseil', 'consulting', 'containers', 'corporation', 'corps', 'council', 'crew', 'daily news', 'data', 'departement', 'department', 'department store', 'departments', 'design', 'development', 'directorate', 'division', 'drilling', 'education', 'eglise', 'electric', 'electricity', 'energy', 'ensemble', 'enterprise', 'enterprises', 'entertainment', 'estate', 'etat', 'evening news', 'faculty', 'federation', 'financial', 'fm', 'foundation', 'fund', 'gas', 'gazette', 'girls', 'government', 'group', 'guild', 'health authority', 'herald', 'holdings', 'hospital', 'hotel', 'hotels', 'inc', 'industries', 'institut', 'institute', 'institute of technology', 'institutes', 'insurance', 'international', 'interstate', 'investment', 'investments', 'investors', 'journal', 'laboratory', 'labs',\n// 'law',\n'liberation army', 'limited', 'local authority', 'local health authority', 'machines', 'magazine', 'management', 'marine', 'marketing', 'markets', 'media', 'memorial', 'mercantile exchange', 'ministere', 'ministry', 'military', 'mobile', 'motor', 'motors', 'musee', 'museum',\n// 'network',\n'news', 'news service', 'observatory', 'office', 'oil', 'optical', 'orchestra', 'organization', 'partners', 'partnership',\n// 'party',\n'people\\'s party', 'petrol', 'petroleum', 'pharmacare', 'pharmaceutical', 'pharmaceuticals', 'pizza', 'plc', 'police', 'polytechnic', 'post', 'power', 'press', 'productions', 'quartet', 'radio', 'regional authority', 'regional health authority', 'reserve', 'resources', 'restaurant', 'restaurants', 'savings', 'school', 'securities', 'service', 'services', 'social club', 'societe', 'society', 'sons', 'standard', 'state police', 'state university', 'stock exchange', 'subcommittee', 'syndicat', 'systems', 'telecommunications', 'telegraph', 'television', 'times', 'tribunal', 'tv', 'union', 'university', 'utilities', 'workers'];\n\n},{}],24:[function(_dereq_,module,exports){\n'use strict';\n//just a few named-organizations\n//no acronyms needed. no product/brand pollution.\n\nmodule.exports = ['20th century fox', '3m', '7-eleven', 'abc', 'academy of sciences', 'acer', 'activision', 'adidas', 'aig', 'al jazeera', 'al qaeda', 'alcatel-lucent', 'alcatel', 'altair', 'amc', 'amd', 'american express', 'amt', 'amtrak', 'anheuser-busch', 'aol', 'apple computers', 'applebee\\'s', 'arby\\'s', 'argos', 'armco', 'ashland oil', 'associated press', 'at&t', 'avis', 'avon', 'ayer', 'banana republic', 'basf', 'baskin robbins', 'baxter', 'bayer', 'bbc', 'bechtel', 'ben & jerry\\'s', 'berkshire hathaway', 'bf goodrich', 'bfgoodrich', 'black & decker', 'blockbuster video', 'bloomingdale', 'blue cross', 'bmw', 'bni', 'boeing', 'bombardier', 'boston globe', 'boston pizza', 'bp', 'capital one', 'cadbury', 'carl\\'s jr', 'cbc', 'chevron', 'chevy', 'chick fil-a', 'china daily', 'cia', 'cisco systems', 'cisco', 'citigroup', 'cnn', 'coca cola', 'colgate', 'comcast', 'compaq', 'coors', 'costco', 'craigslist', 'daimler', 'dea', 'dell', 'der spiegel', 'disney', 'doj', 'dow jones', 'dunkin donuts', 'dupont', 'ebay', 'esa', 'eu', 'exxon mobil', 'exxonmobil', 'facebook', 'fannie mae', 'fbi', 'fda', 'fedex', 'fiat', 'financial times', 'firestone', 'ford', 'frito-lay', 'g8', 'general electric', 'general motors', 'ghq', 'glaxo smith kline', 'glencore', 'goldman sachs', 'goodyear', 'google', 'gucci', 'h & m', 'hasbro', 'hewlett-packard', 'hitachi', 'hizbollah', 'home depot', 'honda', 'hsbc', 'hyundai', 'ibm', 'ihop', 'ing', 'intel', 'interpol', 'itv', 'jiffy lube', 'johnson & johnson', 'jpmorgan chase', 'jpmorgan', 'jsa', 'katv', 'kfc', 'kkk', 'kmart', 'kodak', 'l\\'oreal', 'la presse', 'la-z-boy', 'lenovo', 'lexis', 'lexmark', 'lg', 'little caesars', 'mac\\'s milk', 'mattel', 'mazda', 'mcdonald\\'s', 'mcdonalds', 'medicaid', 'medicare', 'mercedes-benz', 'mercedes', 'microsoft', 'mitas', 'mitsubishi', 'mlb', 'mobil', 'monsanto', 'motel 6', 'motorola', 'mtv', 'myspace', 'nandos', 'nasa', 'nascar', 'nasdaq', 'national academy of sciences', 'nato', 'natwest', 'nba', 'nbc', 'nestle', 'nestlé', 'netflix', 'new york times', 'newsweek', 'nfl', 'nhl', 'nhs', 'nike', 'nintendo', 'nissan', 'nokia', 'notre dame', 'novartis', 'nsa', 'nwa', 'old navy', 'opec', 'orange julius', 'oxfam', 'pan am', 'panasonic', 'panda express', 'pbs', 'pepsico', 'petrobras', 'petrochina', 'petronas', 'peugeot', 'pfizer', 'philip morris', 'pizza hut', 'premier oil', 'procter & gamble', 'prudential', 'quantas', 'quizno\\'s', 'rbc', 'rbs', 're/max', 'readers digest', 'red bull', 'red cross', 'red lobster', 'revlon', 'royal bank', 'royal dutch shell', 'ryanair', 'safeway', 'sainsbury\\'s', 'samsung', 'sears', 'siemens', 'sony', 'starbucks', 'statoil', 'subaru', 't mobile', 'taco bell', 'td bank', 'telefonica', 'telus', 'tesco', 'tesla motors', 'tgi fridays', 'the daily mail', 'tim hortons', 'tmz', 'toshiba', 'toyota', 'toys r us', 'twitter', 'ubs', 'unesco', 'unilever', 'united nations', 'ups', 'usa today', 'usps', 'verizon', 'vh1', 'visa', 'vodafone', 'volkswagen', 'volvo', 'wal-mart', 'walgreens', 'wall street journal', 'walmart', 'warner bros', 'wells fargo', 'westfield', 'westinghouse', 'world trade organization', 'yahoo!', 'yamaha', 'ymca', 'youtube', 'ywca'];\n\n},{}],25:[function(_dereq_,module,exports){\n'use strict';\n\nmodule.exports = [\n//mlb\n'washington nationals', 'toronto blue jays', 'texas rangers', 'tampa bay rays', 'st. louis cardinals', 'seattle mariners', 'san francisco giants', 'san diego padres', 'pittsburgh pirates', 'philadelphia phillies', 'oakland athletics', 'new york yankees', 'new york mets', 'minnesota twins', 'milwaukee brewers', 'miami marlins', 'los angeles dodgers', 'kansas city royals', 'houston astros', 'detroit tigers', 'colorado rockies', 'cleveland indians', 'cincinnati reds', 'chicago white sox', 'chicago cubs', 'boston red sox', 'baltimore orioles', 'atlanta braves', 'arizona diamondbacks', 'diamondbacks', 'braves', 'orioles', 'white sox', 'astros', 'royals', 'dodgers', 'marlins', 'brewers', 'mets', 'yankees', 'phillies', 'padres', 'giants', 'mariners', 'cardinals', 'blue jays',\n\n//nba\n'boston celtics', 'brooklyn nets', 'new york knicks', 'philadelphia 76ers', 'toronto raptors', 'chicago bulls', 'cleveland cavaliers', 'detroit pistons', 'indiana pacers', 'milwaukee bucks', 'atlanta hawks', 'charlotte hornets', 'miami heat', 'orlando magic', 'washington wizards', 'dallas mavericks', 'houston rockets', 'memphis grizzlies', 'new orleans pelicans', 'san antonio spurs', 'denver nuggets', 'minnesota timberwolves', 'portland trail blazers', 'oklahoma city thunder', 'utah jazz', 'golden state warriors', 'los angeles clippers', 'los angeles lakers', 'phoenix suns', 'sacramento kings', '76ers', 'knicks', 'mavericks', 'lakers', 'celtics',\n\n//nfl\n'buffalo bills', 'miami dolphins', 'new england patriots', 'new york jets', 'baltimore ravens', 'cincinnati bengals', 'cleveland browns', 'pittsburgh steelers', 'houston texans', 'indianapolis colts', 'jacksonville jaguars', 'tennessee titans', 'denver broncos', 'kansas city chiefs', 'oakland raiders', 'san diego chargers', 'dallas cowboys', 'new york giants', 'philadelphia eagles', 'washington redskins', 'chicago bears', 'detroit lions', 'green bay packers', 'minnesota vikings', 'atlanta falcons', 'carolina panthers', 'new orleans saints', 'tampa bay buccaneers', 'arizona cardinals', 'st. louis rams', 'san francisco 49ers', 'seattle seahawks',\n\n//mls\n'chicago fire', 'columbus crew sc', 'd.c. united', 'montreal impact', 'new england revolution', 'new york city fc', 'new york red bulls', 'philadelphia union', 'colorado rapids', 'fc dallas', 'houston dynamo', 'la galaxy', 'portland timbers', 'real salt lake', 'san jose earthquakes', 'seattle sounders', 'sporting kansas city', 'vancouver whitecaps', 'atlanta united', 'minnesota united',\n//premier league soccer (mostly city+fc)\n'blackburn rovers', 'leicester city', 'manchester city', 'manchester united', 'aston villa', 'cardiff city', 'newcastle united', 'queens park rangers', 'sheffield united', 'stoke city', 'tottenham hotspur', 'west ham united'];\n\n},{}],26:[function(_dereq_,module,exports){\n'use strict';\n\n//names commonly used in either gender\nmodule.exports = ['casey', 'jamie', 'lee', 'jaime', 'jessie', 'morgan', 'rene', 'robin', 'devon', 'kerry', 'alexis', 'guadalupe', 'blair', 'kasey', 'jean', 'marion', 'aubrey', 'shelby', 'jan', 'shea', 'jade', 'kenyatta', 'kelsey', 'shay', 'lashawn', 'trinity', 'regan', 'jammie', 'cassidy', 'cheyenne', 'reagan', 'shiloh', 'marlo', 'andra', 'devan', 'rosario', 'lee', 'mel'];\n\n},{}],27:[function(_dereq_,module,exports){\n'use strict';\n\nvar fns = _dereq_('../fns');\n//names with a distinctive signal that they identify as a female, internationally\n\n//compressed by frequent suffixes\n//comprssed with\n//https://github.com/nlp-compromise/thumb/blob/master/src/compress/compress.js\nvar compressed = {\n  stine: 'chri,erne,ju,kri',\n  rlene: 'a,cha,da,ma',\n  eline: 'ad,ang,jacqu,mad',\n  nette: 'an,antoi,jean,ly',\n  elia: 'ad,am,ang,cec,c,corn,d,of,sh',\n  anne: ',di,je,jo,le,mari,rox,sus,suz',\n  elle: 'dani,est,gabri,isab,jan,mich,rach,roch',\n  ella: 'd,est,isab,lu,marc,st',\n  rina: 'kata,kat,ma,sab,t',\n  icia: 'al,fel,let,patr,tr',\n  ette: 'bernad,b,claud,paul,yv',\n  leen: 'ai,cath,col,ei,kath',\n  ndra: 'alexa,cassa,ke,sa,so',\n  elma: ',s,th,v',\n  anda: 'am,mir,w,yol',\n  etta: ',henri,lor,ros',\n  isha: 'al,ke,lat,tr',\n  tina: 'cris,mar,,valen',\n  inda: 'bel,l,luc,mel',\n  arla: 'c,d,k,m',\n  lena: 'e,je,,magda',\n  ine: 'carol,cather,cel,ela,franc,gerald,jan,jasm,jeann,joseph,kathar,kather,lorra,max,nad,paul',\n  ice: 'al,beatr,bern,cand,clar,eun,jan,patr',\n  ela: 'andj,ang,carm,gabri,graci,l,manu,pam',\n  ara: 'barb,c,cl,k,l,tam,t,z',\n  ora: 'c,d,fl,isid,len,l,n,teod',\n  ina: 'am,catal,d,georg,g,josef,n',\n  ita: 'an,arp,bon,juan,kav,margar,r',\n  nna: 'dea,do,gle,je,joha,lado,sha',\n  lyn: 'caro,eve,gwendo,jac,jacque,joce,mari',\n  ica: 'angel,er,jess,mil,mon,patr,veron',\n  ene: 'adri,hel,imog,ir,jol,lor',\n  ana: 'adri,d,jov,ju,l,sus',\n  nda: 'bre,gle,ly,rho,ro',\n  nia: 'anto,euge,so,to,virgi',\n  ley: 'ash,kel,kimber,les,shir',\n  sha: 'lata,mar,nata,ta',\n  ian: 'jill,lill,mar,viv',\n  isa: 'al,el,l,lu',\n  ann: ',jo,le,mary',\n  ise: 'den,el,elo,lou',\n  ida: 'a,,rach,sa',\n  nya: 'lato,so,ta,to',\n  ssa: 'aly,mari,meli,vane',\n  tha: 'ber,mar,saman,tabi',\n  ia: 'cecil,claud,cynth,dam,georg,glor,jul,luc,lyd,marc,mar,nad,oliv,silv,sof,soph,sylv,victor',\n  la: 'eu,kay,lei,leo,li,lo,pau,priscil,shei,ursu,vio,wil',\n  na: 'de,ed,leo,lor,mo,myr,ramo,re,shau,shaw,shee,ver',\n  le: 'ade,camil,caro,ceci,ga,gay,lucil,mab,myrt,nicho,nico',\n  en: 'carm,dore,ell,gretch,gw,hel,kar,kirst,krist,laur,maure',\n  ra: 'aud,barb,deb,elvi,javie,lau,may,my,pet,ve',\n  ma: 'al,em,er,fati,ir,kari,nai,nor,wil',\n  el: 'eth,isab,laur,mab,marib,muri,racha,rach,raqu',\n  ta: 'alber,al,chris,ek,kris,mandakran,mar,rober',\n  ey: 'audr,brittn,courtn,linds,stac,trac,whitn',\n  ri: 'je,kanyakuma,ka,ker,sha,she,ter',\n  ne: 'corin,daph,ja,laver,lyn,simo,yvon',\n  th: 'be,edi,elisabe,elizabe,judi,meredi,ru',\n  ah: 'aish,beul,debor,hann,le,rebek,sar',\n  is: 'delor,dor,jan,lo,mav,phyll',\n  da: 'a,fre,frie,hil,matil,priyamva',\n  ce: 'canda,constan,floren,gra,joy',\n  es: 'agn,delor,dolor,franc,merced',\n  er: 'amb,est,esth,heath,jennif',\n  et: 'bridg,harri,jan,margar,margr',\n  ca: 'bian,blan,francis,rebec',\n  ja: 'an,khadi,mari,son',\n  sa: 'el,ro,tere,there',\n  ee: 'aim,d,desir,ren',\n  va: 'a,el,e,i',\n  on: 'alis,man,shann,shar',\n  an: 'meag,meg,megh,sus'\n};\n\nvar list = ['abigail', 'aicha', 'alya', 'andrea', 'annika', 'beatriz', 'bettye', 'brandi', 'brooke', 'carol', 'celeste', 'chelsea', 'cheryl', 'chloe', 'claire', 'cleo', 'constanza', 'consuelo', 'crystal', 'dominique', 'dorothea', 'eleanor', 'eliza', 'erika', 'fay', 'faye', 'fern', 'gail', 'genevieve', 'gertrude', 'gladys', 'heidi', 'ingrid', 'jade', 'jill', 'jo', 'jodie', 'joni', 'kate', 'katie', 'kathryn', 'kay', 'kim', 'krystal', 'latoya', 'laxmi', 'leigh', 'lindsay', 'lupe', 'lynn', 'mae', 'malika', 'margo', 'marguerite', 'marisol', 'maritza', 'maude', 'maya', 'mildred', 'miriam', 'monique', 'mrignayani', 'naomi', 'nell', 'nikki', 'olga', 'paige', 'pam', 'parvati', 'pearl', 'reba', 'robyn', 'rosalind', 'shania', 'sheryl', 'sue', 'sybil', 'tami', 'tamika', 'therese', 'toni', 'gisele',\n//in\n'caitlin', 'erin', 'karin', 'kristin'];\nlist = fns.uncompress_suffixes(list, compressed);\n\nfor (var i = 0; i < list.length; i++) {\n  var str = list[i];\n  if (str.match(/[^ea]y$/)) {\n    list.push(str.replace(/y$/, 'i'));\n  }\n  if (str.match(/ll/)) {\n    list.push(str.replace(/ll/, 'l'));\n  }\n  if (str.match(/nn/)) {\n    list.push(str.replace(/nn/, 'n'));\n  }\n  if (str.match(/ah/)) {\n    list.push(str.replace(/ah/, 'a'));\n  }\n  if (str.match(/t$/)) {\n    list.push(str.replace(/t$/, 'tte'));\n  }\n  if (str.match(/ey$/)) {\n    list.push(str.replace(/ey$/, 'y'));\n  }\n  if (str.match(/ie$/)) {\n    list.push(str.replace(/ie$/, 'y'));\n  }\n  if (str.match(/ne$/)) {\n    list.push(str.replace(/ne$/, 'na'));\n  }\n  if (str.match(/ss/)) {\n    list.push(str.replace(/ss/, 's'));\n  }\n  if (str.match(/rr/)) {\n    list.push(str.replace(/rr/, 'r'));\n  }\n}\nvar no_change = ['amy', 'becky', 'betty', 'beverly', 'cathy', 'dolly', 'dorothy', 'hilary', 'hillary', 'kimberly', 'rosemary', 'sally', 'shelly', 'trudy', 'tammy', 'wendy', 'ruby', 'susi'];\nlist = list.concat(no_change);\nmodule.exports = list;\n\n},{\"../fns\":7}],28:[function(_dereq_,module,exports){\n// common first-names in compressed form.\n// from http://www.ssa.gov/oact/babynames/limits.html  and http://www.servicealberta.gov.ab.ca/pdf/vs/2001_Boys.pdf\n// not sure what regional/cultural/demographic bias this has. Probably a lot.\n// 73% of people are represented in the top 1000 names\n\n// used to reduce redundant named-entities in longer text. (don't spot the same person twice.)\n// used to identify gender for coreference resolution\n'use strict';\n\nvar male = _dereq_('./male');\nvar female = _dereq_('./female');\nvar ambiguous = _dereq_('./ambiguous');\nvar names = {};\n\nfor (var i = 0; i < male.length; i++) {\n  names[male[i]] = 'MaleName';\n}\nfor (var _i = 0; _i < female.length; _i++) {\n  names[female[_i]] = 'FemaleName';\n}\n//ambiguous/unisex names\nfor (var _i2 = 0; _i2 < ambiguous.length; _i2 += 1) {\n  names[ambiguous[_i2]] = 'FirstName';\n}\n// console.log(names['spencer']);\nmodule.exports = names;\n\n},{\"./ambiguous\":26,\"./female\":27,\"./male\":30}],29:[function(_dereq_,module,exports){\n'use strict';\n\n//a random copy+paste job from around the internet\n//(dont mean to step on any toes)\n//some countries have a higher lastname-signal than others\n//this list is further augmented by some regexps, over in ./data/punct_rules.js\n// https://en.wikipedia.org/wiki/List_of_most_common_surnames_in_Europe\nmodule.exports = ['lee', 'li', 'zhang', 'wang', 'nguyen', 'garcia', 'gonzalez', 'hernandez', 'smirnov', 'muller', 'wong', 'cheung', 'liu', 'lau', 'chen', 'chan', 'yang', 'yeung', 'huang', 'zhao', 'chiu', 'wu', 'zhou', 'chow', 'xu', 'tsui', 'zhu', 'hu', 'guo', 'gao', 'kwok', 'luo', 'devi', 'singh', 'kumar', 'kaur', 'sato', 'suzuki', 'takahashi', 'tanaka', 'watanabe', 'ito', 'yamamoto', 'nakamura', 'kobayashi', 'kato', 'yoshida', 'yamada', 'sasaki', 'yamaguchi', 'saito', 'matsumoto', 'inoue', 'kimura', 'hayashi', 'shimizu', 'yamazaki', 'ikeda', 'hashimoto', 'yamashita', 'ishikawa', 'nakajima', 'maeda', 'fujita', 'ogawa', 'harris', 'thompson', 'martinez', 'robinson', 'rodriguez', 'walker', 'wright', 'lopez', 'carter', 'perez', 'roberts', 'turner', 'phillips', 'parker', 'evans', 'edwards', 'collins', 'sanchez', 'morris', 'rogers', 'bailey', 'rivera', 'cooper', 'richardson', 'cox', 'torres', 'peterson', 'ramirez', 'brooks', 'sanders', 'bennett', 'barnes', 'henderson', 'coleman', 'jenkins', 'perry', 'powell', 'patterson', 'hughes', 'flores', 'simmons', 'foster', 'bryant', 'hayes', 'smith', 'jones', 'williams', 'miller', 'taylor', 'wilson', 'davis', 'clark', 'moore', 'anderson', 'lewis', 'jackson', 'adams', 'tryniski', 'campbell', 'gruber', 'huber', 'wagner', 'pichler', 'steiner', 'mammadov', 'aliyev', 'hasanov', 'ivanou', 'ivanov', 'kazlov', 'peeters', 'janssens', 'dimitrov', 'horvat', 'neilson', 'jensen', 'hansen', 'pedersen', 'andersen', 'christensen', 'larsen', 'vassiljev', 'petrov', 'kuznetsov', 'mihhailov', 'pavlov', 'semjonov', 'andrejev', 'aleksejev', 'johansson', 'nyman', 'lindholm', 'karlsson', 'andersson', 'dubois', 'durand', 'leroy', 'moreau', 'lefebvre', 'lefevre', 'roux', 'fournier', 'mercier', 'schmidt', 'schneider', 'fischer', 'meyer', 'weber', 'schulz', 'becker', 'hoffmann', 'kovacs', 'szabo', 'toth', 'nagy', 'byrne', 'murray', 'sullivan', 'rossi', 'russo', 'esposito', 'ricci', 'marino', 'klein', 'nowak', 'silva', 'santos', 'fernandez', 'ruiz', 'jimenez', 'alvarez', 'moreno', 'muñoz', 'alonso', 'gutierrez', 'romero', 'navarro', 'dominguez', 'gil', 'vazquez', 'serrano', 'ramos', 'blanco', 'sanz', 'castro', 'suarez', 'ortega', 'rubio', 'molina', 'delgado', 'morales', 'ortiz', 'marin', 'iglesias', 'boyko', 'davies', 'clarke', 'johnson', 'oliveira', 'sosa', 'rojas', 'munoz', 'diaz', 'gomez', 'xiao', 'tian', 'bahk', 'pahk', 'chung', 'jung', 'joung', 'chong', 'cheong', 'choung', 'choi', 'che', 'choy', 'chwe', 'yeun', 'yun', 'jhang', 'chang', 'cheon', 'kwon', 'soung', 'bhang', 'bahng', 'pahng', 'phang', 'kahn', 'tran', 'pham', 'huynh', 'hoang', 'phan', 'patel',\n//these are famous ones\n'mozart', 'bach', 'beethoven', 'nixon', 'vivaldi', 'obama', 'reagan', 'lenin', 'stalin', 'hitler', 'mussolini', 'kennedy', 'lincoln', 'gandhi', 'thatcher', 'orwell', 'darwin', 'einstein', 'picasso', 'edison', 'roosevelt', 'tolstoy', 'hemingway', 'hitchcock', 'messi', 'beckham', 'cohen'];\n\n// let obj = {}\n// module.exports.forEach((str) => {\n//   if (obj[str]) {\n//     console.log(str)\n//   }\n//   obj[str] = true\n// })\n\n},{}],30:[function(_dereq_,module,exports){\n'use strict';\n\nvar fns = _dereq_('../fns');\n//names with a distinctive signal that they identify as a male, internationally\n\n//the unique/uncompressed names..\nvar arr = ['abu', 'adolfo', 'anthony', 'arthur', 'billy', 'bobby', 'bob', 'buddy', //ergh\n'bradford', 'bret', 'caleb', 'clifford', 'craig', 'derek', 'doug', 'dwight', 'eli', 'elliot', 'enrique', 'felipe', 'felix', 'francisco', 'frank', 'george', 'glenn', 'greg', 'gregg', 'hans', 'hugh', 'ira', 'isaac', 'kermit', 'leo', 'levi', 'lorenzo', 'percy', 'philip', 'phillip', 'regis', 'rex', 'ricky', 'shaun', 'shaquille', 'shawn', 'steve', 'timothy', 'ty', 'wilbur', 'williams', 'woodrow', 'wolfgang', 'youssef', 'mahmoud', 'mustafa', 'hamza', 'tareq', 'ali', 'beshoi', 'mark', 'moe', 'habib', 'moussa', 'adama', 'osama', 'abdoulaye', 'modibo', 'mustapha', 'aziz', 'mateo', 'santino', 'davi', 'jacob', 'vicente', 'alonso', 'maximiliano', 'jose', 'jeronimo', 'joshua', 'ajani', 'amir', 'arnav', 'suraj', 'bruno', 'yousouf', 'wei', 'hao', 'yi', 'lei', 'aarav', 'reyansh', 'arjun', 'abulfazl', 'reza', 'kathem', 'ori', 'yosef', 'itai', 'moshe', 'ichika', 'itsuki', 'tatsuki', 'asahi', 'haruki', 'tomoharu', 'yuuma', 'taichi', 'saqib', 'abubakr', 'ergi', 'marc', 'eric', 'enzo', 'pol', 'alex', 'marti', 'jakob', 'paul', 'leevi', 'aputsiaq', 'inunnguaq', 'inuk', 'francesco', 'andrea', 'mattia', 'matteo', 'tommaso', 'nikola', 'ilija', 'marko', 'luka', 'antoni', 'jakub', 'franciszek', 'filip', 'stanislaw', 'mikolaj', 'yusuf', 'berat', 'emir', 'ahmet', 'mehmet', 'leroy', 'roy', 'troy', 'floyd', 'lloyd', 'carl', 'earl', 'karl', 'raul', 'saul', 'earnest', 'ernest', 'forrest', 'arnold', 'harold', 'andrew', 'mathew', 'matthew', 'elliott', 'matt', 'scott', 'marty', 'monty', 'scotty', 'clay', 'jay', 'murray', 'monte', 'pete', 'elwood', 'jarrod', 'claude', 'clyde', 'wade', 'alfredo', 'reynaldo', 'wilfredo', 'clark', 'kirk', 'chase', 'jesse', 'cedric', 'dominic', 'josh', 'rocky', 'rodolfo', 'roosevelt', 'roscoe', 'ross', 'jeff', 'jeremy', 'jerome', 'jess', 'toby', 'todd', 'tom', 'tony', 'darryl', 'daryl', 'dave', 'joe', 'john', 'jorge', 'malcolm', 'marco', 'max', 'alfonso', 'alonzo', 'guillermo', 'gustavo',\n//in\n'yassin', 'hussein', 'benjamin', 'martin', 'joaquin', 'hossein', 'colin', 'franklin', 'marlin', 'darwin', 'edwin', 'erwin', 'darin', 'darrin', 'efrain', 'quentin'];\n\n//compressed by frequent suffixes\n//comprssed with\n//https://github.com/nlp-compromise/thumb/blob/master/src/compress/compress.js\nvar suffix_compressed = {\n  'rence': 'cla,lau,law,te,ter',\n  'lbert': 'a,de,e,gi,wi',\n  'berto': 'al,gil,hum,ro',\n  'ustin': 'ag,j,a,d',\n  'rick': 'e,frede,rode,der,fred,kend,pat,',\n  'ardo': 'bern,leon,ricc,edu,ger,ric',\n  'lvin': 'e,ke,me,a,ca',\n  'nnie': 'do,lo,ro,be,joh',\n  'bert': ',her,hu,nor,ro',\n  'than': 'e,na,johna,jona',\n  'ando': 'arm,fern,orl,rol',\n  'land': 'cleve,gar,le,ro',\n  'arry': 'b,g,h,l',\n  'lton': 'a,car,e,mi',\n  'ian': 'sebast,j,,maximil,krist,adr,br,christ,dam,fab,jul',\n  'ton': 'an,clin,quin,bur,clay,clif,pres,wins',\n  'ter': 'car,pe,ches,les,sylves,dex,wal',\n  'ard': 'bern,edw,ger,how,leon,rich,will',\n  'ell': 'darn,darr,low,mitch,russ,terr,wend',\n  'son': 'jack,ma,harri,ja,nel,ty,wil',\n  'aan': 'ish,arm,viv,ay,vih,nom',\n  'ron': 'a,aa,by,came,my,',\n  'lan': 'mi,a,al,dy,har,no',\n  'man': 'abdulrah,us,her,nor,sher,ro',\n  'mon': 'ra,szy,da,si,solo',\n  'uel': 'mig,sam,eman,emman,man',\n  'don': 'bran,,el,gor,shel',\n  'med': 'moha,muha,ah,moham,muham',\n  'ald': 'don,regin,ron,ger,jer',\n  'vin': 'er,ir,mar,de,ke',\n  'rey': 'ca,co,geoff,jeff',\n  'ett': 'br,ever,garr,emm',\n  'ael': 'raf,ism,mich,raph',\n  'mmy': 'ji,sa,ti,to',\n  'las': 'nico,dal,doug,nicho',\n  'red': 'alf,f,wilf,ja',\n  'nny': 'be,da,joh,ke',\n  'ius': 'cornel,dar,demetr,jul',\n  'ley': 'brad,har,stan,wes',\n  'mar': 'o,ou,am,la',\n  'iel': 'gabr,dan,ar,nathan',\n  'ane': 'souleym,d,du,sh',\n  'ent': 'br,k,tr,vinc',\n  'an': 'hass,ju,log,ary,roh,has,eit,yonat,ro,zor,drag,dej,stef,iv,emirh,ev,brend,d,jord,bry,de,esteb,ry,se,st,steph',\n  'er': 'ik,javi,alexand,oliv,aleksand,om,christoph,kristoph,luth,elm,grov,hom,jasp,rodg,rog,spenc,tyl,xavi',\n  'en': 'jayd,jad,aid,dev,eym,b,reub,rub,darr,lor,warr,all,dami,gl,k,ow,steph,stev',\n  'ie': 'j,jimm,samm,tomm,bill,charl,will,ern,arch,edd,frank,fredd,lou,regg,robb',\n  'is': 'alex,lu,lou,math,chr,curt,den,denn,ell,franc,lew,morr,ot,trav,will',\n  'el': 'abd,ang,no,jo,ro,ab,darr,fid,lion,marc,mich,russ',\n  'ry': 'jer,per,ter,co,grego,ro,ga,zacha,hen,jeffe,jeff',\n  'ce': 'lan,terran,van,bru,bry,hora,mauri,roy,walla',\n  'ne': 'deway,dway,way,antoi,blai,jermai,euge,ge,tyro',\n  'to': 'mina,yuu,haru,haruhi,haya,beni,ernes,ot',\n  'or': 'heit,vict,ig,hect,juni,salvad,tayl,trev',\n  'as': 'mati,tom,luc,thom,luk,tobi,jon,eli',\n  'io': 'anton,emil,jul,rogel,gregor,ignac,mar,serg',\n  'le': 'gabrie,doy,ky,ly,da,mer,orvil',\n  'al': 'bil,,h,jam,miche,ne,rand',\n  'dy': 'fred,ted,an,bra,co,gra,ru',\n  'ad': 'muhamm,mohamm,moham,mur,br,ch,conr',\n  'ey': 'dew,harv,jo,mick,rick,rodn,sidn',\n  'am': 'li,willi,no,ad,abrah,grah,s',\n  'ah': 'abdall,no,elij,jeremi,abdull,mic',\n  'on': 'bry,j,jonath,le,marl,vern',\n  'il': 'ne,nikh,cec,em,ph,virg',\n  'im': 'j,t,ibrah,kar,hal,sel',\n  'go': 'santia,thia,die,rodri,domin,hu',\n  'ar': 'ces,hyd,aleksand,pet,edg,osc',\n  'os': 'kiroll,carl,mil,am,marc,sant',\n  'ro': 'ped,alejand,alessand,alva,artu,rami',\n  'nd': 'arma,edmu,desmo,edmo,raymo',\n  'ck': 'ja,chu,domini,ma,ni',\n  'ta': 'hina,haru,sou,ara,kana',\n  'ou': 'l,mamad,mahamad,sek,ry',\n  'ph': 'ral,randol,rudol,jose,joes',\n  'ik': 'er,adv,mal,min,sal',\n  'rt': 'cu,ku,ba,stewa,stua',\n  'us': 'mathe,jes,marc,ruf',\n  'lo': 'ange,pab,abdul,nii',\n  'es': 'jam,andr,charl,mos',\n  'id': 'rach,dav,zah,shah',\n  'nt': 'brya,cli,gra,lamo',\n  're': 'and,pier,salvato,theodo',\n  'ng': 'irvi,sterli,fe,yo',\n  'ed': 'khal,,n,t',\n  'ke': 'bla,ja,lu,mi',\n  'th': 'hea,kei,kenne,se',\n  'll': 'carro,kenda,marsha,randa',\n  'di': 'fa,meh,mah,jor'\n};\narr = fns.uncompress_suffixes(arr, suffix_compressed);\n\nmodule.exports = arr;\n\n// console.log(JSON.stringify(arr, null, 2))\n\n},{\"../fns\":7}],31:[function(_dereq_,module,exports){\n'use strict';\n\n//notable people with names that aren't caught by the ordinary person-name rules\nexports.male = ['messiaen', 'saddam hussain', 'virgin mary', 'van gogh', 'mitt romney', 'barack obama', 'kanye west', 'mubarek', 'lebron james', 'emeril lagasse', 'rush limbaugh', 'carson palmer', 'ray romano', 'ronaldinho', 'valentino rossi', 'rod stewart', 'kiefer sutherland', 'denzel washington', 'dick wolf', 'tiger woods', 'adolf hitler', 'hulk hogan', 'ashton kutcher', 'kobe bryant', 'cardinal wolsey', 'slobodan milosevic'];\n\nexports.female = ['jk rowling', 'oprah winfrey', 'reese witherspoon', 'tyra banks', 'halle berry', 'paris hilton', 'scarlett johansson'];\n\n},{}],32:[function(_dereq_,module,exports){\n'use strict';\n\n//extend to person-names if infront of a name - 'Professor Frink'\nmodule.exports = ['lord', 'lady', 'king', 'queen', 'prince', 'princess', 'dutchess', 'president', 'excellency', 'professor', 'chancellor', 'father', 'pastor', 'brother', 'sister', 'doctor', 'captain', 'commander', 'general', 'lieutenant', 'reverend', 'rabbi', 'ayatullah', 'councillor', 'secretary', 'sultan', 'mayor', 'congressman', 'congresswoman'];\n\n},{}],33:[function(_dereq_,module,exports){\n'use strict';\n//some most-common iso-codes (most are too ambiguous)\n\nvar shortForms = ['usd', 'cad', 'aud', 'gbp', 'krw', 'inr', 'hkd', 'dkk', 'cny', 'xaf', 'xof', 'eur', 'jpy',\n//currency symbols\n'€', '$', '¥', '£', 'лв', '₡', 'kn', 'kr', '¢', 'Ft', 'Rp', '﷼', '₭', 'ден', '₨', 'zł', 'lei', 'руб', '฿'];\n\n//some common, unambiguous currency names\nvar longForms = ['denar', 'dobra', 'forint', 'kwanza', 'kyat', 'lempira', 'pound sterling', 'riel', 'yen', 'zloty',\n//colloquial currency names\n'dollar', 'cent', 'penny', 'dime', 'dinar', 'euro', 'lira', 'pound', 'pence', 'peso', 'baht', 'sterling', 'rouble', 'shekel', 'sheqel', 'yuan', 'franc', 'rupee', 'shilling', 'krona', 'dirham', 'bitcoin'];\nvar irregularPlurals = {\n  yen: 'yen',\n  baht: 'baht',\n  riel: 'riel',\n  penny: 'pennies'\n};\n\n//add plural forms - 'euros'\nvar l = longForms.length;\nfor (var i = 0; i < l; i++) {\n  if (irregularPlurals[longForms[i]]) {\n    longForms.push(irregularPlurals[longForms[i]]);\n  } else {\n    longForms.push(longForms[i] + 's');\n  }\n}\n\nmodule.exports = shortForms.concat(longForms);\n\n},{}],34:[function(_dereq_,module,exports){\n'use strict';\n\nvar cardinal = {\n  ones: {\n    // 'a': 1,\n    'zero': 0,\n    'one': 1,\n    'two': 2,\n    'three': 3,\n    'four': 4,\n    'five': 5,\n    'six': 6,\n    'seven': 7,\n    'eight': 8,\n    'nine': 9\n  },\n  teens: {\n    'ten': 10,\n    'eleven': 11,\n    'twelve': 12,\n    'thirteen': 13,\n    'fourteen': 14,\n    'fifteen': 15,\n    'sixteen': 16,\n    'seventeen': 17,\n    'eighteen': 18,\n    'nineteen': 19\n  },\n  tens: {\n    'twenty': 20,\n    'thirty': 30,\n    'forty': 40,\n    'fifty': 50,\n    'sixty': 60,\n    'seventy': 70,\n    'eighty': 80,\n    'ninety': 90\n  },\n  multiples: {\n    'hundred': 1e2,\n    'thousand': 1e3,\n    'grand': 1e3,\n    'million': 1e6,\n    'billion': 1e9,\n    'trillion': 1e12,\n    'quadrillion': 1e15,\n    'quintillion': 1e18,\n    'sextillion': 1e21,\n    'septillion': 1e24\n  }\n};\n\nvar ordinal = {\n  ones: {\n    'zeroth': 0,\n    'first': 1,\n    'second': 2,\n    'third': 3,\n    'fourth': 4,\n    'fifth': 5,\n    'sixth': 6,\n    'seventh': 7,\n    'eighth': 8,\n    'ninth': 9\n  },\n  teens: {\n    'tenth': 10,\n    'eleventh': 11,\n    'twelfth': 12,\n    'thirteenth': 13,\n    'fourteenth': 14,\n    'fifteenth': 15,\n    'sixteenth': 16,\n    'seventeenth': 17,\n    'eighteenth': 18,\n    'nineteenth': 19\n  },\n  tens: {\n    'twentieth': 20,\n    'thirtieth': 30,\n    'fourtieth': 40,\n    'fiftieth': 50,\n    'sixtieth': 60,\n    'seventieth': 70,\n    'eightieth': 80,\n    'ninetieth': 90\n  },\n  multiples: {\n    'hundredth': 1e2,\n    'thousandth': 1e3,\n    'millionth': 1e6,\n    'billionth': 1e9,\n    'trillionth': 1e12,\n    'quadrillionth': 1e15,\n    'quintillionth': 1e18,\n    'sextillionth': 1e21,\n    'septillionth': 1e24\n  }\n};\n\n//used for the units\nvar prefixes = {\n  'yotta': 1,\n  'zetta': 1,\n  'exa': 1,\n  'peta': 1,\n  'tera': 1,\n  'giga': 1,\n  'mega': 1,\n  'kilo': 1,\n  'hecto': 1,\n  'deka': 1,\n  'deci': 1,\n  'centi': 1,\n  'milli': 1,\n  'micro': 1,\n  'nano': 1,\n  'pico': 1,\n  'femto': 1,\n  'atto': 1,\n  'zepto': 1,\n  'yocto': 1,\n\n  'square': 1,\n  'cubic': 1,\n  'quartic': 1\n};\n\nmodule.exports = {\n  cardinal: cardinal,\n  ordinal: ordinal,\n  prefixes: prefixes\n};\n\n},{}],35:[function(_dereq_,module,exports){\n'use strict';\n//create an easy mapping between ordinal-cardinal\n\nvar numbers = _dereq_('./numbers');\nvar toOrdinal = {};\nvar toCardinal = {};\nObject.keys(numbers.ordinal).forEach(function (k) {\n  var ordinal = Object.keys(numbers.ordinal[k]);\n  var cardinal = Object.keys(numbers.cardinal[k]);\n  for (var i = 0; i < ordinal.length; i++) {\n    toOrdinal[cardinal[i]] = ordinal[i];\n    toCardinal[ordinal[i]] = cardinal[i];\n  }\n});\nmodule.exports = {\n  toOrdinal: toOrdinal,\n  toCardinal: toCardinal\n};\n\n},{\"./numbers\":34}],36:[function(_dereq_,module,exports){\n'use strict';\n\nvar units = {\n  'Temperature': {\n    '°c': 'Celsius',\n    '°f': 'Fahrenheit',\n    'k': 'Kelvin',\n    '°re': 'Reaumur',\n    '°n': 'Newton',\n    '°ra': 'Rankine'\n  },\n  'Volume': {\n    'm³': 'cubic meter',\n    'm3': 'cubic meter',\n    'dm³': 'cubic decimeter',\n    'dm3': 'cubic decimeter',\n    'cm³': 'cubic centimeter',\n    'cm3': 'cubic centimeter',\n    'l': 'liter',\n    'dl': 'deciliter',\n    'cl': 'centiliter',\n    'ml': 'milliliter',\n    'in³': 'cubic inch',\n    'in3': 'cubic inch',\n    'ft³': 'cubic foot',\n    'ft3': 'cubic foot',\n    'yd³': 'cubic yard',\n    'yd3': 'cubic yard',\n    'gal': 'gallon',\n    'bbl': 'petroleum barrel',\n    'pt': 'pint',\n    'qt': 'quart',\n    'tbl': 'tablespoon',\n    'tsp': 'teaspoon',\n    'tbsp': 'tablespoon',\n    'cup': 'cup',\n    'fl oz': 'fluid ounce'\n  },\n  'Distance': {\n    'km': 'kilometer',\n    'm': 'meter',\n    'dm': 'decimeter',\n    'cm': 'centimeter',\n    'mm': 'millimeter',\n    'mi': 'mile',\n    // 'in': 'inch',\n    'ft': 'foot',\n    'yd': 'yard'\n  },\n  'Weight': {\n    't': 'tonne',\n    'kg': 'kilogram',\n    'hg': 'hectogram',\n    'g': 'gram',\n    'dg': 'decigram',\n    'cg': 'centigram',\n    'mg': 'milligram',\n    'µg': 'microgram',\n    'carat': 'carat',\n    'grain': 'grain',\n    'oz': 'ounce',\n    'lb': 'pound',\n    'ton': 'tonne'\n  },\n  'Area': {\n    'km²': 'square kilometer',\n    'km2': 'square kilometer',\n    'm²': 'square meter',\n    'm2': 'square meter',\n    'dm²': 'square decimeter',\n    'dm2': 'square decimeter',\n    'cm²': 'square centimeter',\n    'cm2': 'square centimeter',\n    'mm²': 'square millimeter',\n    'mm2': 'square millimeter',\n    'ha': 'hectare',\n    'mile²': 'square mile',\n    'mile2': 'square mile',\n    'in²': 'square inch',\n    'in2': 'square inch',\n    'yd²': 'square yard',\n    'yd2': 'square yard',\n    'ft²': 'square foot',\n    'sq ft': 'square feet',\n    'ft2': 'square foot',\n    'acre': 'acre'\n  },\n  'Frequency': {\n    'hz': 'hertz'\n  },\n  'Speed': {\n    'km/h': 'kilometer per hour',\n    'kmph': 'kilometer per hour',\n    'mps': 'meter per second',\n    'm/s': 'meter per second',\n    'mph': 'mile per hour',\n    'mi/h': 'mile per hour',\n    'knot': 'knot'\n  },\n  'Data': {\n    'b': 'byte',\n    'kb': 'kilobyte',\n    'mb': 'megabyte',\n    'gb': 'gigabyte',\n    'tb': 'terabyte',\n    'pt': 'petabyte',\n    'eb': 'exabyte',\n    'zb': 'zettabyte',\n    'yb': 'yottabyte'\n  },\n  'Energy': {\n    'j': 'joule',\n    'pa': 'pascal',\n    'w': 'watt',\n    'n': 'newton',\n    'wb': 'weber',\n    'h': 'henry',\n    'c': 'coulomb',\n    'v': 'volt',\n    'f': 'farad',\n    's': 'siemens',\n    'o': 'ohm',\n    'lx': 'lux',\n    'lm': 'lumen'\n  },\n  'Time': {\n    'year': 'year',\n    'week': 'week',\n    'day': 'day',\n    'h': 'hour',\n    'min': 'minute',\n    's': 'second',\n    'ms': 'millisecond',\n    'µs': 'microsecond',\n    'nanosecond': 'nanosecond',\n    'picosecond': 'picosecond',\n    'femtosecond': 'femtosecond',\n    'attosecond': 'attosecond'\n  }\n};\n\n//prepare a list of them, for the lexicon\nvar words = {};\nObject.keys(units).forEach(function (k) {\n  Object.keys(units[k]).forEach(function (shorter) {\n    if (shorter.length > 1) {\n      words[shorter] = true;\n    }\n    var longer = units[k][shorter];\n    words[longer] = true;\n    words[longer + 's'] = true;\n  });\n});\nwords = Object.keys(words);\n\nmodule.exports = {\n  words: words,\n  units: units\n};\n\n},{}],37:[function(_dereq_,module,exports){\n//a list of exceptions to the verb rules\n'use strict';\n\nvar participles = _dereq_('./participles');\n\nvar irregular = {\n  take: {\n    PerfectTense: 'have taken',\n    pluPerfectTense: 'had taken',\n    FuturePerfect: 'will have taken'\n  },\n  can: {\n    Gerund: '',\n    PresentTense: 'can',\n    PastTense: 'could',\n    FutureTense: 'can',\n    PerfectTense: 'could',\n    pluPerfectTense: 'could',\n    FuturePerfect: 'can',\n    Actor: ''\n  },\n  free: {\n    Gerund: 'freeing',\n    Actor: ''\n  },\n  arise: {\n    PastTense: 'arose',\n    Participle: 'arisen'\n  },\n  babysit: {\n    PastTense: 'babysat',\n    Actor: 'babysitter'\n  },\n  be: { // this is crazy-hard and shouldn't be here\n    PastTense: 'was',\n    Participle: 'been',\n    PresentTense: 'is',\n    // FutureTense: 'will be',\n    Actor: '',\n    Gerund: 'am'\n  },\n  // will: {\n  //   PastTense: 'will',\n  // },\n  is: {\n    PastTense: 'was',\n    PresentTense: 'is',\n    // FutureTense: 'will be',\n    // PerfectTense: 'have been',\n    // pluPerfectTense: 'had been',\n    // FuturePerfect: 'will have been',\n    Actor: '',\n    Gerund: 'being'\n  },\n  beat: {\n    Gerund: 'beating',\n    Actor: 'beater',\n    Participle: 'beaten'\n  },\n  begin: {\n    Gerund: 'beginning',\n    PastTense: 'began'\n  },\n  ban: {\n    PastTense: 'banned',\n    Gerund: 'banning',\n    Actor: ''\n  },\n  bet: {\n    Actor: 'better'\n  },\n  bite: {\n    Gerund: 'biting',\n    PastTense: 'bit'\n  },\n  bleed: {\n    PastTense: 'bled'\n  },\n  breed: {\n    PastTense: 'bred'\n  },\n  bring: {\n    PastTense: 'brought'\n  },\n  broadcast: {\n    PastTense: 'broadcast'\n  },\n  build: {\n    PastTense: 'built'\n  },\n  buy: {\n    PastTense: 'bought'\n  },\n  choose: {\n    Gerund: 'choosing',\n    PastTense: 'chose'\n  },\n  cost: {\n    PastTense: 'cost'\n  },\n  deal: {\n    PastTense: 'dealt'\n  },\n  die: {\n    PastTense: 'died',\n    Gerund: 'dying'\n  },\n  dig: {\n    Gerund: 'digging',\n    PastTense: 'dug'\n  },\n  draw: {\n    PastTense: 'drew'\n  },\n  drink: {\n    PastTense: 'drank',\n    Participle: 'drunk'\n  },\n  drive: {\n    Gerund: 'driving',\n    PastTense: 'drove'\n  },\n  eat: {\n    Gerund: 'eating',\n    PastTense: 'ate',\n    Actor: 'eater',\n    Participle: 'eaten'\n  },\n  fall: {\n    PastTense: 'fell'\n  },\n  feed: {\n    PastTense: 'fed'\n  },\n  feel: {\n    PastTense: 'felt',\n    Actor: 'feeler'\n  },\n  fight: {\n    PastTense: 'fought'\n  },\n  find: {\n    PastTense: 'found'\n  },\n  fly: {\n    PastTense: 'flew',\n    Participle: 'flown'\n  },\n  blow: {\n    PastTense: 'blew',\n    Participle: 'blown'\n  },\n  forbid: {\n    PastTense: 'forbade'\n  },\n  forget: {\n    Gerund: 'forgeting',\n    PastTense: 'forgot'\n  },\n  forgive: {\n    Gerund: 'forgiving',\n    PastTense: 'forgave'\n  },\n  freeze: {\n    Gerund: 'freezing',\n    PastTense: 'froze'\n  },\n  get: {\n    PastTense: 'got'\n  },\n  give: {\n    Gerund: 'giving',\n    PastTense: 'gave'\n  },\n  go: {\n    PastTense: 'went',\n    PresentTense: 'goes'\n  },\n  hang: {\n    PastTense: 'hung'\n  },\n  have: {\n    Gerund: 'having',\n    PastTense: 'had',\n    PresentTense: 'has'\n  },\n  hear: {\n    PastTense: 'heard'\n  },\n  hide: {\n    PastTense: 'hid'\n  },\n  hold: {\n    PastTense: 'held'\n  },\n  hurt: {\n    PastTense: 'hurt'\n  },\n  lay: {\n    PastTense: 'laid'\n  },\n  lead: {\n    PastTense: 'led'\n  },\n  leave: {\n    PastTense: 'left'\n  },\n  lie: {\n    Gerund: 'lying',\n    PastTense: 'lay'\n  },\n  light: {\n    PastTense: 'lit'\n  },\n  lose: {\n    Gerund: 'losing',\n    PastTense: 'lost'\n  },\n  make: {\n    PastTense: 'made'\n  },\n  mean: {\n    PastTense: 'meant'\n  },\n  meet: {\n    Gerund: 'meeting',\n    PastTense: 'met',\n    Actor: 'meeter'\n  },\n  pay: {\n    PastTense: 'paid'\n  },\n  read: {\n    PastTense: 'read'\n  },\n  ring: {\n    PastTense: 'rang'\n  },\n  rise: {\n    PastTense: 'rose',\n    Gerund: 'rising',\n    pluPerfectTense: 'had risen',\n    FuturePerfect: 'will have risen'\n  },\n  run: {\n    Gerund: 'running',\n    PastTense: 'ran'\n  },\n  say: {\n    PastTense: 'said'\n  },\n  see: {\n    PastTense: 'saw'\n  },\n  sell: {\n    PastTense: 'sold'\n  },\n  shine: {\n    PastTense: 'shone'\n  },\n  shoot: {\n    PastTense: 'shot'\n  },\n  show: {\n    PastTense: 'showed'\n  },\n  sing: {\n    PastTense: 'sang',\n    Participle: 'sung'\n  },\n  sink: {\n    PastTense: 'sank',\n    pluPerfectTense: 'had sunk'\n  },\n  sit: {\n    PastTense: 'sat'\n  },\n  slide: {\n    PastTense: 'slid'\n  },\n  speak: {\n    PastTense: 'spoke',\n    PerfectTense: 'have spoken',\n    pluPerfectTense: 'had spoken',\n    FuturePerfect: 'will have spoken'\n  },\n  spin: {\n    Gerund: 'spinning',\n    PastTense: 'spun'\n  },\n  stand: {\n    PastTense: 'stood'\n  },\n  steal: {\n    PastTense: 'stole',\n    Actor: 'stealer'\n  },\n  stick: {\n    PastTense: 'stuck'\n  },\n  sting: {\n    PastTense: 'stung'\n  },\n  stream: {\n    Actor: 'streamer'\n  },\n  strike: {\n    Gerund: 'striking',\n    PastTense: 'struck'\n  },\n  swear: {\n    PastTense: 'swore'\n  },\n  swim: {\n    PastTense: 'swam'\n  },\n  swing: {\n    PastTense: 'swung'\n  },\n  teach: {\n    PastTense: 'taught',\n    PresentTense: 'teaches'\n  },\n  tear: {\n    PastTense: 'tore'\n  },\n  tell: {\n    PastTense: 'told'\n  },\n  think: {\n    PastTense: 'thought'\n  },\n  understand: {\n    PastTense: 'understood'\n  },\n  wake: {\n    PastTense: 'woke'\n  },\n  wear: {\n    PastTense: 'wore'\n  },\n  win: {\n    Gerund: 'winning',\n    PastTense: 'won'\n  },\n  withdraw: {\n    PastTense: 'withdrew'\n  },\n  write: {\n    Gerund: 'writing',\n    PastTense: 'wrote',\n    Participle: 'written'\n  },\n  tie: {\n    Gerund: 'tying',\n    PastTense: 'tied'\n  },\n  ski: {\n    PastTense: 'skiied'\n  },\n  boil: {\n    Actor: 'boiler'\n  },\n  miss: {\n    PresentTense: 'miss'\n  },\n  act: {\n    Actor: 'actor'\n  },\n  compete: {\n    Gerund: 'competing',\n    PastTense: 'competed',\n    Actor: 'competitor'\n  },\n  being: {\n    Gerund: 'are',\n    PastTense: 'were',\n    PresentTense: 'are'\n  },\n  imply: {\n    PastTense: 'implied',\n    PresentTense: 'implies'\n  },\n  ice: {\n    Gerund: 'icing',\n    PastTense: 'iced'\n  },\n  develop: {\n    PastTense: 'developed',\n    Actor: 'developer',\n    Gerund: 'developing'\n  },\n  wait: {\n    Gerund: 'waiting',\n    PastTense: 'waited',\n    Actor: 'waiter'\n  },\n  aim: {\n    Actor: 'aimer'\n  },\n  spill: {\n    PastTense: 'spilt'\n  },\n  drop: {\n    Gerund: 'dropping',\n    PastTense: 'dropped'\n  },\n  log: {\n    Gerund: 'logging',\n    PastTense: 'logged'\n  },\n  rub: {\n    Gerund: 'rubbing',\n    PastTense: 'rubbed'\n  },\n  smash: {\n    PresentTense: 'smashes'\n  },\n  suit: {\n    Gerund: 'suiting',\n    PastTense: 'suited',\n    Actor: 'suiter'\n  }\n};\n//fancy es3 literal support (ftw?)\nvar literals = [['break', {\n  PastTense: 'broke'\n}], ['catch', {\n  PastTense: 'caught'\n}], ['do', {\n  PastTense: 'did',\n  PresentTense: 'does'\n}], ['bind', {\n  PastTense: 'bound'\n}], ['spread', {\n  PastTense: 'spread'\n}]];\nliterals.forEach(function (a) {\n  irregular[a[0]] = a[1];\n});\n\nObject.keys(participles).forEach(function (inf) {\n  if (irregular[inf]) {\n    irregular[inf].Participle = participles[inf];\n  } else {\n    irregular[inf] = {\n      Participle: participles[inf]\n    };\n  }\n});\nmodule.exports = irregular;\n\n},{\"./participles\":38}],38:[function(_dereq_,module,exports){\n'use strict';\n\n//particples are a bit like past-tense, but used differently\n//map the infinitive to its irregular-participle\nmodule.exports = {\n  'become': 'become',\n  'begin': 'begun',\n  'bend': 'bent',\n  'bet': 'bet',\n  'bite': 'bitten',\n  'bleed': 'bled',\n  'brake': 'broken',\n  'bring': 'brought',\n  'build': 'built',\n  'burn': 'burned',\n  'burst': 'burst',\n  'buy': 'bought',\n  // 'catch': 'caught',\n  'choose': 'chosen',\n  'cling': 'clung',\n  'come': 'come',\n  'creep': 'crept',\n  'cut': 'cut',\n  'deal': 'dealt',\n  'dig': 'dug',\n  'dive': 'dived',\n  // 'do': 'done',\n  'draw': 'drawn',\n  'dream': 'dreamt',\n  'drive': 'driven',\n  'eat': 'eaten',\n  'fall': 'fallen',\n  'feed': 'fed',\n  'fight': 'fought',\n  'flee': 'fled',\n  'fling': 'flung',\n  'forget': 'forgotten',\n  'forgive': 'forgiven',\n  'freeze': 'frozen',\n  'got': 'gotten',\n  'give': 'given',\n  'go': 'gone',\n  'grow': 'grown',\n  'hang': 'hung',\n  'have': 'had',\n  'hear': 'heard',\n  'hide': 'hidden',\n  'hit': 'hit',\n  'hold': 'held',\n  'hurt': 'hurt',\n  'keep': 'kept',\n  'kneel': 'knelt',\n  'know': 'known',\n  'lay': 'laid',\n  'lead': 'led',\n  'leap': 'leapt',\n  'leave': 'left',\n  'lend': 'lent',\n  'light': 'lit',\n  'loose': 'lost',\n  'make': 'made',\n  'mean': 'meant',\n  'meet': 'met',\n  'pay': 'paid',\n  'prove': 'proven',\n  'put': 'put',\n  'quit': 'quit',\n  'read': 'read',\n  'ride': 'ridden',\n  'ring': 'rung',\n  'rise': 'risen',\n  'run': 'run',\n  'say': 'said',\n  'see': 'seen',\n  'seek': 'sought',\n  'sell': 'sold',\n  'send': 'sent',\n  'set': 'set',\n  'sew': 'sewn',\n  'shake': 'shaken',\n  'shave': 'shaved',\n  'shine': 'shone',\n  'shoot': 'shot',\n  'shut': 'shut',\n  'seat': 'sat',\n  'slay': 'slain',\n  'sleep': 'slept',\n  'slide': 'slid',\n  'sneak': 'snuck',\n  'speak': 'spoken',\n  'speed': 'sped',\n  'spend': 'spent',\n  'spill': 'spilled',\n  'spin': 'spun',\n  'spit': 'spat',\n  'split': 'split',\n  'spring': 'sprung',\n  'stink': 'stunk',\n  'strew': 'strewn',\n  'sware': 'sworn',\n  'sweep': 'swept',\n  'thrive': 'thrived',\n  // 'throw': 'thrown',\n  'undergo': 'undergone',\n  'upset': 'upset',\n  'weave': 'woven',\n  'weep': 'wept',\n  'wind': 'wound',\n  'wring': 'wrung'\n};\n\n},{}],39:[function(_dereq_,module,exports){\n//most-frequent non-irregular verbs, in infinitive form, to be conjugated for the lexicon\n//this list is the seed, from which various forms are conjugated\n'use strict';\n\nvar fns = _dereq_('../fns');\n\n//suffix-index adjectives\n//  {cial:'cru,spe'} -> 'crucial', 'special'\n\n//suffix-index adjectives\n//  {cial:'cru,spe'} -> 'crucial', 'special'\nvar compressed = {\n  prove: ',im,ap,disap',\n  serve: ',de,ob,re',\n  ress: 'exp,p,prog,st,add,d',\n  lect: 'ref,se,neg,col,e',\n  sist: 'in,con,per,re,as',\n  tain: 'ob,con,main,s,re',\n  mble: 'rese,gru,asse,stu',\n  ture: 'frac,lec,tor,fea',\n  port: 're,sup,ex,im',\n  ate: 'rel,oper,indic,cre,h,activ,estim,particip,d,anticip,evalu',\n  use: ',ca,over,ref,acc,am,pa',\n  ive: 'l,rece,d,arr,str,surv,thr,rel',\n  are: 'prep,c,comp,sh,st,decl,d,sc',\n  ine: 'exam,imag,determ,comb,l,decl,underm,def',\n  nce: 'annou,da,experie,influe,bou,convi,enha',\n  ain: 'tr,rem,expl,dr,compl,g,str',\n  ent: 'prev,repres,r,res,rel,inv',\n  age: 'dam,mess,man,encour,eng,discour',\n  rge: 'su,cha,eme,u,me',\n  ise: 'ra,exerc,prom,surpr,pra',\n  ect: 'susp,dir,exp,def,rej',\n  ter: 'en,mat,cen,ca,al',\n  end: ',t,dep,ext,att',\n  est: 't,sugg,prot,requ,r',\n  ock: 'kn,l,sh,bl,unl',\n  nge: 'cha,excha,ra,challe,plu',\n  ase: 'incre,decre,purch,b,ce',\n  ish: 'establ,publ,w,fin,distingu',\n  mit: 'per,ad,sub,li',\n  ure: 'fig,ens,end,meas',\n  der: 'won,consi,mur,wan',\n  ave: 's,sh,w,cr',\n  ire: 'requ,des,h,ret',\n  tch: 'scra,swi,ma,stre',\n  ack: 'att,l,p,cr',\n  ion: 'ment,quest,funct,envis',\n  ump: 'j,l,p,d',\n  ide: 'dec,prov,gu,s',\n  ush: 'br,cr,p,r',\n  eat: 'def,h,tr,ch',\n  ash: 'sm,spl,w,fl',\n  rry: 'ca,ma,hu,wo',\n  ear: 'app,f,b,disapp',\n  er: 'answ,rememb,off,suff,cov,discov,diff,gath,deliv,both,empow,with',\n  le: 'fi,sett,hand,sca,whist,enab,smi,ming,ru,sprink,pi',\n  st: 'exi,foreca,ho,po,twi,tru,li,adju,boa,contra,boo',\n  it: 'vis,ed,depos,sp,awa,inhib,cred,benef,prohib,inhab',\n  nt: 'wa,hu,pri,poi,cou,accou,confro,warra,pai',\n  ch: 'laun,rea,approa,sear,tou,ar,enri,atta',\n  ss: 'discu,gue,ki,pa,proce,cro,glo,dismi',\n  ll: 'fi,pu,ki,ca,ro,sme,reca,insta',\n  rn: 'tu,lea,conce,retu,bu,ea,wa,gove',\n  ce: 'redu,produ,divor,noti,for,repla',\n  te: 'contribu,uni,tas,vo,no,constitu,ci',\n  rt: 'sta,comfo,exe,depa,asse,reso,conve',\n  ck: 'su,pi,che,ki,tri,wre',\n  ct: 'intera,restri,predi,attra,depi,condu',\n  ke: 'sta,li,bra,overta,smo,disli',\n  se: 'collap,suppo,clo,rever,po,sen',\n  nd: 'mi,surrou,dema,remi,expa,comma',\n  ve: 'achie,invol,remo,lo,belie,mo',\n  rm: 'fo,perfo,confi,confo,ha',\n  or: 'lab,mirr,fav,monit,hon',\n  ue: 'arg,contin,val,iss,purs',\n  ow: 'all,foll,sn,fl,borr',\n  ay: 'pl,st,betr,displ,portr',\n  ze: 'recogni,reali,snee,ga,emphasi',\n  ip: 'cl,d,gr,sl,sk',\n  re: 'igno,sto,interfe,sco',\n  ng: 'spri,ba,belo,cli',\n  ew: 'scr,vi,revi,ch',\n  gh: 'cou,lau,outwei,wei',\n  ly: 'app,supp,re,multip',\n  ge: 'jud,acknowled,dod,alle',\n  en: 'list,happ,threat,strength',\n  ee: 'fors,agr,disagr,guarant',\n  et: 'budg,regr,mark,targ',\n  rd: 'rega,gua,rewa,affo',\n  am: 'dre,j,sl,ro',\n  ry: 'va,t,c,bu'\n};\nvar arr = ['abandon', 'accept', 'add', 'added', 'adopt', 'aid', 'appeal', 'applaud', 'archive', 'ask', 'assign', 'associate', 'assume', 'attempt', 'avoid', 'ban', 'become', 'bomb', 'cancel', 'claim', 'claw', 'come', 'control', 'convey', 'cook', 'copy', 'cut', 'deem', 'defy', 'deny', 'describe', 'design', 'destroy', 'die', 'divide', 'do', 'doubt', 'drag', 'drift', 'drop', 'echo', 'embody', 'enjoy', 'envy', 'excel', 'fall', 'fail', 'fix', 'float', 'flood', 'focus', 'fold', 'get', 'goes', 'grab', 'grasp', 'grow', 'happen', 'head', 'help', 'hold fast', 'hope', 'include', 'instruct', 'invest', 'join', 'keep', 'know', 'learn', 'let', 'lift', 'link', 'load', 'loan', 'look', 'make due', 'mark', 'melt', 'minus', 'multiply', 'name', 'need', 'occur', 'overcome', 'overlap', 'overwhelm', 'owe', 'pay', 'plan', 'plug', 'plus', 'pop', 'pour', 'proclaim', 'put', 'rank', 'reason', 'reckon', 'relax', 'repair', 'reply', 'reveal', 'revel', 'risk', 'rub', 'ruin', 'sail', 'seek', 'seem', 'send', 'set', 'shout', 'sleep', 'sneak', 'sort', 'spoil', 'stem', 'step', 'stop', 'study', 'take', 'talk', 'thank', 'took', 'trade', 'transfer', 'trap', 'travel', 'tune', 'undergo', 'undo', 'uplift', 'walk', 'watch', 'win', 'wipe', 'work', 'yawn', 'yield'];\n\nmodule.exports = fns.uncompress_suffixes(arr, compressed);\n\n},{\"../fns\":7}],40:[function(_dereq_,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar tagColors = _dereq_('./tags/colors');\n\n// https://stackoverflow.com/questions/9781218/how-to-change-node-jss-console-font-color\nvar c = {\n  reset: '\\x1b[0m',\n  red: '\\x1b[31m',\n  green: '\\x1b[32m',\n  yellow: '\\x1b[33m',\n  blue: '\\x1b[34m',\n  magenta: '\\x1b[35m',\n  cyan: '\\x1b[36m',\n  black: '\\x1b[30m'\n};\n//dont use colors on client-side\nif (typeof module === 'undefined') {\n  Object.keys(c).forEach(function (k) {\n    c[k] = '';\n  });\n}\n\n//coerce any input into a string\nexports.ensureString = function (input) {\n  if (typeof input === 'string') {\n    return input;\n  } else if (typeof input === 'number') {\n    return '' + input;\n  }\n  return '';\n};\n//coerce any input into a string\nexports.ensureObject = function (input) {\n  if ((typeof input === 'undefined' ? 'undefined' : _typeof(input)) !== 'object') {\n    return {};\n  }\n  if (input === null || input instanceof Array) {\n    return {};\n  }\n  return input;\n};\n//string utilities\nexports.endsWith = function (str, suffix) {\n  if (str && str.substr(-suffix.length) === suffix) {\n    return true;\n  }\n  return false;\n};\n\nexports.startsWith = function (str, prefix) {\n  if (str && prefix) {\n    if (str.substr(0, prefix.length) === prefix) {\n      return true;\n    }\n  }\n  return false;\n};\n\nexports.titleCase = function (str) {\n  return str.charAt(0).toUpperCase() + str.substr(1);\n};\n\n//turn a nested array into one array\nexports.flatten = function (arr) {\n  var all = [];\n  arr.forEach(function (a) {\n    all = all.concat(a);\n  });\n  return all;\n};\n\n//shallow-clone an object\nexports.copy = function (o) {\n  var o2 = {};\n  o = exports.ensureObject(o);\n  Object.keys(o).forEach(function (k) {\n    o2[k] = o[k];\n  });\n  return o2;\n};\nexports.extend = function (obj, a) {\n  obj = exports.copy(obj);\n  var keys = Object.keys(a);\n  for (var i = 0; i < keys.length; i++) {\n    obj[keys[i]] = a[keys[i]];\n  }\n  return obj;\n};\n\n//colorization\nexports.green = function (str) {\n  return c.green + str + c.reset;\n};\nexports.red = function (str) {\n  return c.red + str + c.reset;\n};\nexports.blue = function (str) {\n  return c.blue + str + c.reset;\n};\nexports.magenta = function (str) {\n  return c.magenta + str + c.reset;\n};\nexports.cyan = function (str) {\n  return c.cyan + str + c.reset;\n};\nexports.yellow = function (str) {\n  return c.yellow + str + c.reset;\n};\nexports.black = function (str) {\n  return c.black + str + c.reset;\n};\nexports.printTag = function (tag) {\n  if (tagColors[tag]) {\n    return exports[tagColors[tag]](tag);\n  }\n  return tag;\n};\nexports.printTerm = function (t) {\n  var tags = Object.keys(t.tag);\n  for (var i = 0; i < tags.length; i++) {\n    if (tagColors[tags[i]]) {\n      var color = tagColors[tags[i]];\n      return exports[color](t.plaintext);\n    }\n  }\n  return c.reset + t.plaintext + c.reset;\n};\n\nexports.leftPad = function (str, width, char) {\n  char = char || ' ';\n  str = str.toString();\n  while (str.length < width) {\n    str += char;\n  }\n  return str;\n};\n\n},{\"./tags/colors\":154}],41:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\n\nvar buildResult = _dereq_('./result/build');\nvar pkg = _dereq_('../package.json');\nvar log = _dereq_('./log');\n\n//the main thing\nvar nlp = function nlp(str, lexicon, tagSet) {\n  return buildResult(str, lexicon, tagSet);\n};\n\n//this is handy\nnlp.version = pkg.version;\n\n//so handy at times\nnlp.lexicon = function () {\n  return _dereq_('./data/lexicon');\n};\n\n//also this is much handy\nnlp.verbose = function (str) {\n  log.enable(str);\n};\n\n//and then all-the-exports...\nif (typeof self !== 'undefined') {\n  self.nlp = nlp; // Web Worker\n} else if (typeof window !== 'undefined') {\n  window.nlp = nlp; // Browser\n} else if (typeof global !== 'undefined') {\n  global.nlp = nlp; // NodeJS\n}\n//don't forget amd!\nif (typeof define === 'function' && define.amd) {\n  define(nlp);\n}\n//then for some reason, do this too!\nif (typeof module !== 'undefined') {\n  module.exports = nlp;\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"../package.json\":1,\"./data/lexicon\":9,\"./log\":42,\"./result/build\":43}],42:[function(_dereq_,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar fns = _dereq_('../fns');\nvar _enable = false;\n\nmodule.exports = {\n  enable: function enable(str) {\n    if (str === undefined) {\n      str = true;\n    }\n    _enable = str;\n  },\n  here: function here(path) {\n    if (_enable === true || _enable === path) {\n      console.log('  ' + path);\n    }\n  },\n  tell: function tell(str, path) {\n    if (_enable === true || _enable === path) {\n      if ((typeof str === 'undefined' ? 'undefined' : _typeof(str)) === 'object') {\n        str = JSON.stringify(str);\n      }\n      str = '    ' + str;\n      console.log(str);\n    }\n  },\n  tagAs: function tagAs(t, pos, reason) {\n    if (_enable === true || _enable === 'tagger') {\n      var title = t.normal || '[' + t.silent_term + ']';\n      title = fns.yellow(title);\n      title = fns.leftPad('\\'' + title + '\\'', 20);\n      title += '  ->   ' + fns.printTag(pos);\n      title = fns.leftPad(title, 54);\n      console.log('       ' + title + '(' + fns.cyan(reason || '') + ')');\n    }\n  }\n};\n\n},{\"../fns\":40}],43:[function(_dereq_,module,exports){\n'use strict';\n\nvar Text = _dereq_('./index');\nvar tokenize = _dereq_('./tokenize');\nvar Terms = _dereq_('./paths').Terms;\nvar normalize = _dereq_('../term/methods/normalize/normalize').normalize;\nvar tagArr = _dereq_('../tags');\n\n//basically really dirty and stupid.\nvar normalizeLex = function normalizeLex(lex) {\n  lex = lex || {};\n  return Object.keys(lex).reduce(function (h, k) {\n    //add natural form\n    h[k] = lex[k];\n    var normal = normalize(k);\n    if (k !== normal) {\n      //add it too\n      h[normal] = lex[k];\n    }\n    return h;\n  }, {});\n};\n\nvar extendTags = function extendTags(newTags) {\n  console.log(newTags);\n  console.log(tagArr);\n};\n\n//build a new pos-tagged Result obj from a string\nvar fromString = function fromString(str, lexicon, tagSet) {\n  var sentences = tokenize(str);\n  //make sure lexicon obeys standards\n  lexicon = normalizeLex(lexicon);\n  var list = sentences.map(function (s) {\n    return Terms.fromString(s, lexicon);\n  });\n  //extend tagset for this ref\n  if (tagSet) {\n    extendTags(tagSet);\n  }\n\n  var r = new Text(list, lexicon, null, tagSet);\n  //give each ts a ref to the result\n  r.list.forEach(function (ts) {\n    ts.refText = r;\n  });\n  return r;\n};\nmodule.exports = fromString;\n\n},{\"../tags\":156,\"../term/methods/normalize/normalize\":163,\"./index\":44,\"./paths\":56,\"./tokenize\":153}],44:[function(_dereq_,module,exports){\n'use strict';\n//a Text is an array of termLists\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Text = function () {\n  function Text(arr, lexicon, reference, tagSet) {\n    _classCallCheck(this, Text);\n\n    this.list = arr || [];\n    this.reference = reference;\n    this.tagSet = tagSet;\n  }\n  //getter/setters\n  /** did it find anything? */\n\n\n  _createClass(Text, [{\n    key: 'all',\n    value: function all() {\n      return this.parent;\n    }\n  }, {\n    key: 'index',\n    value: function index() {\n      return this.list.map(function (ts) {\n        return ts.index();\n      });\n    }\n  }, {\n    key: 'data',\n    value: function data() {\n      return this.list.map(function (ts) {\n        return {\n          normal: ts.out('normal'),\n          text: ts.out('text')\n        };\n      });\n    }\n  }, {\n    key: 'debug',\n    value: function debug(opts) {\n      return out(this, 'debug', opts);\n    }\n  }, {\n    key: 'found',\n    get: function get() {\n      return this.list.length > 0;\n    }\n    /** how many Texts are there?*/\n\n  }, {\n    key: 'length',\n    get: function get() {\n      return this.list.length;\n    }\n  }, {\n    key: 'isA',\n    get: function get() {\n      return 'Text';\n    }\n  }, {\n    key: 'parent',\n    get: function get() {\n      return this.reference || this;\n    },\n    set: function set(r) {\n      this.reference = r;\n      return this;\n    }\n  }, {\n    key: 'whitespace',\n    get: function get() {\n      var _this = this;\n\n      return {\n        before: function before(str) {\n          _this.list.forEach(function (ts) {\n            ts.whitespace.before(str);\n          });\n          return _this;\n        },\n        after: function after(str) {\n          _this.list.forEach(function (ts) {\n            ts.whitespace.after(str);\n          });\n          return _this;\n        }\n      };\n    }\n  }]);\n\n  return Text;\n}();\n\nmodule.exports = Text;\nText = _dereq_('./methods/array')(Text);\nText = _dereq_('./methods/loops')(Text);\nText = _dereq_('./methods/match')(Text);\nText = _dereq_('./methods/out')(Text);\nText = _dereq_('./methods/sort')(Text);\nText = _dereq_('./methods/split')(Text);\nText = _dereq_('./methods/tag')(Text);\nText = _dereq_('./methods/normalize')(Text);\n\nvar subset = {\n  acronyms: _dereq_('./subset/acronyms'),\n  adjectives: _dereq_('./subset/adjectives'),\n  adverbs: _dereq_('./subset/adverbs'),\n  clauses: _dereq_('./subset/clauses'),\n  contractions: _dereq_('./subset/contractions'),\n  dates: _dereq_('./subset/dates'),\n  hashTags: _dereq_('./subset/hashTags'),\n  nouns: _dereq_('./subset/nouns'),\n  organizations: _dereq_('./subset/organizations'),\n  people: _dereq_('./subset/people'),\n  phoneNumbers: _dereq_('./subset/phoneNumbers'),\n  places: _dereq_('./subset/places'),\n  questions: _dereq_('./subset/sentences/questions'),\n  quotations: _dereq_('./subset/quotations'),\n  sentences: _dereq_('./subset/sentences'),\n  statements: _dereq_('./subset/sentences/statements'),\n  terms: _dereq_('./subset/terms'),\n  topics: _dereq_('./subset/topics'),\n  urls: _dereq_('./subset/urls'),\n  values: _dereq_('./subset/values'),\n  verbs: _dereq_('./subset/verbs'),\n  ngrams: _dereq_('./subset/ngrams'),\n  startGrams: _dereq_('./subset/ngrams/startGrams'),\n  endGrams: _dereq_('./subset/ngrams/endGrams')\n};\n//term subsets\nObject.keys(subset).forEach(function (k) {\n  Text.prototype[k] = function (num, arg) {\n    var sub = subset[k];\n    var m = sub.find(this, num, arg);\n    return new subset[k](m.list, this.lexicon, this.parent);\n  };\n});\n\n},{\"./methods/array\":45,\"./methods/loops\":46,\"./methods/match\":47,\"./methods/normalize\":48,\"./methods/out\":49,\"./methods/sort\":52,\"./methods/split\":54,\"./methods/tag\":55,\"./subset/acronyms\":57,\"./subset/adjectives\":59,\"./subset/adverbs\":67,\"./subset/clauses\":69,\"./subset/contractions\":73,\"./subset/dates\":75,\"./subset/hashTags\":85,\"./subset/ngrams\":89,\"./subset/ngrams/endGrams\":86,\"./subset/ngrams/startGrams\":90,\"./subset/nouns\":92,\"./subset/organizations\":101,\"./subset/people\":103,\"./subset/phoneNumbers\":105,\"./subset/places\":106,\"./subset/quotations\":108,\"./subset/sentences\":109,\"./subset/sentences/questions\":110,\"./subset/sentences/statements\":113,\"./subset/terms\":116,\"./subset/topics\":118,\"./subset/urls\":119,\"./subset/values\":120,\"./subset/verbs\":133}],45:[function(_dereq_,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar Terms = _dereq_('../../terms');\n\nvar genericMethods = function genericMethods(Text) {\n\n  var methods = {\n\n    /**copy data properly so later transformations will have no effect*/\n    clone: function clone() {\n      var list = this.list.map(function (ts) {\n        return ts.clone();\n      });\n      // this.parent.list = this.parent.list.map((ts) => {\n      //   return ts.clone();\n      // });\n      // return this;\n      return new Text(list); //this.lexicon, this.parent\n    },\n\n    /** get the nth term of each result*/\n    term: function term(n) {\n      var _this = this;\n\n      var list = this.list.map(function (ts) {\n        var arr = [];\n        var el = ts.terms[n];\n        if (el) {\n          arr = [el];\n        }\n        return new Terms(arr, _this.lexicon, _this.refText, _this.refTerms);\n      });\n      return new Text(list, this.lexicon, this.parent);\n    },\n    firstTerm: function firstTerm() {\n      return this.match('^.');\n    },\n    lastTerm: function lastTerm() {\n      return this.match('.$');\n    },\n\n    /** grab a subset of the results*/\n    slice: function slice(start, end) {\n      this.list = this.list.slice(start, end);\n      return this;\n    },\n\n    /** use only the nth result*/\n    get: function get(n) {\n      //return an empty result\n      if (!n && n !== 0 || !this.list[n]) {\n        return new Text([], this.lexicon, this.parent);\n      }\n      var ts = this.list[n];\n      return new Text([ts], this.lexicon, this.parent);\n    },\n    /**use only the first result */\n    first: function first(n) {\n      if (!n && n !== 0) {\n        return this.get(0);\n      }\n      return new Text(this.list.slice(0, n), this.lexicon, this.parent);\n    },\n    /**use only the last result */\n    last: function last(n) {\n      if (!n && n !== 0) {\n        return this.get(this.list.length - 1);\n      }\n      var end = this.list.length;\n      var start = end - n;\n      return new Text(this.list.slice(start, end), this.lexicon, this.parent);\n    },\n\n    concat: function concat() {\n      //any number of params\n      for (var i = 0; i < arguments.length; i++) {\n        var p = arguments[i];\n        if ((typeof p === 'undefined' ? 'undefined' : _typeof(p)) === 'object') {\n          //Text()\n          if (p.isA === 'Text' && p.list) {\n            this.list = this.list.concat(p.list);\n          }\n          //Terms()\n          if (p.isA === 'Terms') {\n            this.list.push(p);\n          }\n        }\n      }\n      return this;\n    },\n    /** make it into one sentence/termlist */\n    flatten: function flatten() {\n      var terms = [];\n      this.list.forEach(function (ts) {\n        terms = terms.concat(ts.terms);\n      });\n      //dont create an empty ts\n      if (!terms.length) {\n        return new Text(null, this.lexicon, this.parent);\n      }\n      var ts = new Terms(terms, this.lexicon, this, null);\n      return new Text([ts], this.lexicon, this.parent);\n    }\n\n  };\n\n  Object.keys(methods).forEach(function (k) {\n    Text.prototype[k] = methods[k];\n  });\n  return Text;\n};\n\nmodule.exports = genericMethods;\n\n},{\"../../terms\":176}],46:[function(_dereq_,module,exports){\n'use strict';\n//this methods are simply loops around each termList object.\n\nvar foreach = ['toTitleCase', 'toUpperCase', 'toLowerCase', 'toCamelCase', 'hyphenate', 'dehyphenate', 'insertBefore', 'insertAfter', 'insertAt', 'replace', 'replaceWith', 'delete'];\n\nvar addMethods = function addMethods(Text) {\n\n  foreach.forEach(function (k) {\n    var myFn = function myFn() {\n      var args = arguments;\n      this.list.forEach(function (ts) {\n        ts[k].apply(ts, args);\n      });\n      return this;\n    };\n    Text.prototype[k] = myFn;\n  });\n  return Text;\n};\n\nmodule.exports = addMethods;\n\n},{}],47:[function(_dereq_,module,exports){\n'use strict';\n\nvar splitMethods = function splitMethods(Text) {\n\n  var methods = {\n\n    /** do a regex-like search through terms and return a subset */\n    match: function match(reg, verbose) {\n      var list = [];\n      this.list.forEach(function (ts) {\n        //an array of arrays\n        var matches = ts.match(reg, verbose);\n        matches.list.forEach(function (ms) {\n          list.push(ms);\n        });\n      });\n      var parent = this.parent || this;\n      return new Text(list, this.lexicon, parent);\n    },\n\n    not: function not(reg, verbose) {\n      var list = [];\n      this.list.forEach(function (ts) {\n        var found = ts.not(reg, verbose);\n        list = list.concat(found.list);\n      });\n      var parent = this.parent || this;\n      return new Text(list, this.lexicon, parent);\n    },\n\n    /** find the first result */\n    // matchOne: function (reg, verbose) {\n    //   for (let i = 0; i < this.list.length; i++) {\n    //     let ms = this.list[i].match(reg, verbose);\n    //     if (ms && ms.length) {\n    //       let parent = this.parent || this;\n    //       return new Text(ms, parent);\n    //     }\n    //   }\n    //   return null;\n    // },\n\n    /** true/false if it countains atleast one match*/\n    // has: function (reg, verbose) {\n    //   for (let i = 0; i < this.list.length; i++) {\n    //     let ms = this.list[i].match(reg, verbose);\n    //     if (ms && ms.length) {\n    //       return true;\n    //     }\n    //   }\n    //   return false;\n    // },\n\n    'if': function _if(reg, verbose) {\n      var list = [];\n      for (var i = 0; i < this.list.length; i++) {\n        var m = this.list[i].match(reg, verbose);\n        if (m.found) {\n          list.push(this.list[i]);\n        }\n      }\n      var parent = this.parent || this;\n      return new Text(list, this.lexicon, parent);\n    },\n\n    ifNo: function ifNo(reg, verbose) {\n      var list = [];\n      for (var i = 0; i < this.list.length; i++) {\n        var m = this.list[i].match(reg, verbose);\n        if (!m.found) {\n          list.push(this.list[i]);\n        }\n      }\n      var parent = this.parent || this;\n      return new Text(list, this.lexicon, parent);\n    }\n\n  };\n  //alias 'and'\n  methods.and = methods.match;\n\n  //hook them into result.proto\n  Object.keys(methods).forEach(function (k) {\n    Text.prototype[k] = methods[k];\n  });\n  return Text;\n};\n\nmodule.exports = splitMethods;\n\n},{}],48:[function(_dereq_,module,exports){\n'use strict';\n//\n\nvar defaultMethods = {\n  whitespace: true,\n  'case': true,\n  numbers: true,\n  punctuation: true,\n  unicode: true,\n  contractions: true\n};\n\nvar methods = {\n\n  /** make only one space between each word */\n  whitespace: function whitespace(r) {\n    r.terms().list.forEach(function (ts, i) {\n      var t = ts.terms[0];\n      if (i > 0) {\n        t.whitespace.before = ' ';\n      }\n      t.whitespace.after = '';\n    });\n    return r;\n  },\n\n  /** make first-word titlecase, and people, places titlecase */\n  'case': function _case(r) {\n    r.terms().list.forEach(function (ts, i) {\n      var t = ts.terms[0];\n      if (i === 0 || t.tag.Person || t.tag.Place || t.tag.Organization) {\n        ts.toTitleCase();\n      } else {\n        ts.toLowerCase();\n      }\n    });\n    return r;\n  },\n\n  /** turn 'five' to 5, and 'fifth' to 5th*/\n  numbers: function numbers(r) {\n    return r.values().toNumber();\n  },\n\n  /** remove commas, semicolons - but keep sentence-ending punctuation*/\n  punctuation: function punctuation(r) {\n    r.terms().list.forEach(function (ts, i) {\n      var t = ts.terms[0];\n      if (i < ts.terms.length - 1) {\n        t.text = t.killPunctuation();\n      }\n    });\n    return r;\n  },\n\n  contractions: function contractions(r) {\n    return r.contractions().expand();\n  }\n};\n\nvar addMethods = function addMethods(Text) {\n  Text.prototype.normalize = function (obj) {\n    var _this = this;\n\n    obj = obj || defaultMethods;\n    //do each type of normalization\n    Object.keys(obj).forEach(function (fn) {\n      if (methods[fn]) {\n        methods[fn](_this);\n      }\n    });\n  };\n  return Text;\n};\nmodule.exports = addMethods;\n\n},{}],49:[function(_dereq_,module,exports){\n'use strict';\n\nvar _topk = _dereq_('./topk');\nvar offset = _dereq_('./offset');\n\nvar methods = {\n  text: function text(r) {\n    return r.list.reduce(function (str, ts) {\n      str += ts.out('text');\n      return str;\n    }, '');\n  },\n  normal: function normal(r) {\n    return r.list.map(function (ts) {\n      var str = ts.out('normal');\n      var last = ts.last();\n      if (last) {\n        var punct = last.endPunctuation();\n        if (punct === '.' || punct === '!' || punct === '?') {\n          str += punct;\n        }\n      }\n      return str;\n    }).join(' ');\n  },\n  root: function root(r) {\n    return r.list.map(function (ts) {\n      return ts.out('root');\n    }).join(' ');\n  },\n  /** output where in the original output string they are*/\n  offsets: function offsets(r) {\n    return offset(r);\n  },\n  grid: function grid(r) {\n    return r.list.reduce(function (str, ts) {\n      str += ts.out('grid');\n      return str;\n    }, '');\n  },\n  color: function color(r) {\n    return r.list.reduce(function (str, ts) {\n      str += ts.out('color');\n      return str;\n    }, '');\n  },\n  array: function array(r) {\n    return r.list.reduce(function (arr, ts) {\n      arr.push(ts.out('normal'));\n      return arr;\n    }, []);\n  },\n  json: function json(r) {\n    return r.list.reduce(function (arr, ts) {\n      var terms = ts.terms.map(function (t) {\n        return {\n          text: t.text,\n          normal: t.normal,\n          tags: t.tag\n        };\n      });\n      arr.push(terms);\n      return arr;\n    }, []);\n  },\n  html: function html(r) {\n    var html = r.list.reduce(function (str, ts) {\n      var sentence = ts.terms.reduce(function (sen, t) {\n        sen += '\\n    ' + t.out('html');\n        return sen;\n      }, '');\n      return str += '\\n  <span>' + sentence + '\\n  </span>';\n    }, '');\n    return '<span> ' + html + '\\n</span>';\n  },\n  terms: function terms(r) {\n    var arr = [];\n    r.list.forEach(function (ts) {\n      ts.terms.forEach(function (t) {\n        arr.push({\n          text: t.text,\n          normal: t.normal,\n          tags: Object.keys(t.tag)\n        });\n      });\n    });\n    return arr;\n  },\n  debug: function debug(r) {\n    console.log('====');\n    r.list.forEach(function (ts) {\n      console.log('   --');\n      ts.debug();\n    });\n    return r;\n  },\n  topk: function topk(r) {\n    return _topk(r);\n  }\n};\nmethods.plaintext = methods.text;\nmethods.normalized = methods.normal;\nmethods.colors = methods.color;\nmethods.tags = methods.terms;\nmethods.offset = methods.offsets;\nmethods.frequency = methods.topk;\nmethods.freq = methods.topk;\nmethods.arr = methods.array;\n\nvar addMethods = function addMethods(Text) {\n  Text.prototype.out = function (fn) {\n    if (methods[fn]) {\n      return methods[fn](this);\n    }\n    return methods.text(this);\n  };\n  Text.prototype.debug = function () {\n    return methods.debug(this);\n  };\n  return Text;\n};\n\nmodule.exports = addMethods;\n\n},{\"./offset\":50,\"./topk\":51}],50:[function(_dereq_,module,exports){\n'use strict';\n/** say where in the original output string they are found*/\n\nvar findOffset = function findOffset(parent, term) {\n  var sum = 0;\n  for (var i = 0; i < parent.list.length; i++) {\n    for (var o = 0; o < parent.list[i].terms.length; o++) {\n      var t = parent.list[i].terms[o];\n      if (t.uid === term.uid) {\n        return sum;\n      } else {\n        sum += t.whitespace.before.length + t._text.length + t.whitespace.after.length;\n      }\n    }\n  }\n  return null;\n};\n\n//map over all-dem-results\nvar allOffset = function allOffset(r) {\n  var parent = r.all();\n  return r.list.map(function (ts) {\n    return {\n      text: ts.out('text'),\n      normal: ts.out('normal'),\n      offset: findOffset(parent, ts.terms[0]),\n      length: ts.out('text').length\n    };\n  });\n};\nmodule.exports = allOffset;\n\n},{}],51:[function(_dereq_,module,exports){\n'use strict';\n//\n\nvar topk = function topk(r, n) {\n  //count occurance\n  var count = {};\n  r.list.forEach(function (ts) {\n    var str = ts.out('root');\n    count[str] = count[str] || 0;\n    count[str] += 1;\n  });\n  //turn into an array\n  var all = [];\n  Object.keys(count).forEach(function (k) {\n    all.push({\n      normal: k,\n      count: count[k]\n    });\n  });\n  //add percentage\n  all.forEach(function (o) {\n    o.percent = parseFloat((o.count / r.list.length * 100).toFixed(2));\n  });\n  //sort by freq\n  all = all.sort(function (a, b) {\n    if (a.count > b.count) {\n      return -1;\n    }\n    return 1;\n  });\n  if (n) {\n    all = all.splice(0, n);\n  }\n  return all;\n};\n\nmodule.exports = topk;\n\n},{}],52:[function(_dereq_,module,exports){\n'use strict';\n\nvar sorter = _dereq_('./methods');\n\nvar addMethods = function addMethods(Text) {\n\n  var fns = {\n\n    /**reorder result.list alphabetically */\n    sort: function sort(method) {\n      //default sort\n      method = method || 'alphabetical';\n      method = method.toLowerCase();\n      if (!method || method === 'alpha' || method === 'alphabetical') {\n        return sorter.alpha(this, Text);\n      }\n      if (method === 'chron' || method === 'chronological') {\n        return sorter.chron(this, Text);\n      }\n      if (method === 'length') {\n        return sorter.lengthFn(this, Text);\n      }\n      if (method === 'freq' || method === 'frequency') {\n        return sorter.freq(this, Text);\n      }\n      if (method === 'wordcount') {\n        return sorter.wordCount(this, Text);\n      }\n      return this;\n    },\n\n    /**reverse the order of result.list */\n    reverse: function reverse() {\n      this.list = this.list.reverse();\n      return this;\n    },\n\n    unique: function unique() {\n      var obj = {};\n      this.list = this.list.filter(function (ts) {\n        var str = ts.out('root');\n        if (obj[str]) {\n          return false;\n        }\n        obj[str] = true;\n        return true;\n      });\n      return this;\n    }\n  };\n  //hook them into result.proto\n  Object.keys(fns).forEach(function (k) {\n    Text.prototype[k] = fns[k];\n  });\n  return Text;\n};\n\nmodule.exports = addMethods;\n\n},{\"./methods\":53}],53:[function(_dereq_,module,exports){\n'use strict';\n\n//perform sort on pre-computed values\n\nvar sortEm = function sortEm(arr) {\n  arr = arr.sort(function (a, b) {\n    if (a.index > b.index) {\n      return 1;\n    }\n    if (a.index === b.index) {\n      return 0;\n    }\n    return -1;\n  });\n  //return ts objects\n  return arr.map(function (o) {\n    return o.ts;\n  });\n};\n\n//alphabetical sorting of a termlist array\nexports.alpha = function (r) {\n  r.list.sort(function (a, b) {\n    //#1 performance speedup\n    if (a === b) {\n      return 0;\n    }\n    //#2 performance speedup\n    if (a.terms[0] && b.terms[0]) {\n      if (a.terms[0].root > b.terms[0].root) {\n        return 1;\n      }\n      if (a.terms[0].root < b.terms[0].root) {\n        return -1;\n      }\n    }\n    //regular compare\n    if (a.out('root') > b.out('root')) {\n      return 1;\n    }\n    return -1;\n  });\n  return r;\n};\n\n//the order they were recieved (chronological~)\nexports.chron = function (r) {\n  //pre-compute indexes\n  var tmp = r.list.map(function (ts) {\n    return {\n      ts: ts,\n      index: ts.termIndex()\n    };\n  });\n  r.list = sortEm(tmp);\n  return r;\n};\n\n//shortest matches first\nexports.lengthFn = function (r) {\n  //pre-compute indexes\n  var tmp = r.list.map(function (ts) {\n    return {\n      ts: ts,\n      index: ts.chars()\n    };\n  });\n  r.list = sortEm(tmp).reverse();\n  return r;\n};\n\n//count the number of terms in each match\nexports.wordCount = function (r) {\n  //pre-compute indexes\n  var tmp = r.list.map(function (ts) {\n    return {\n      ts: ts,\n      index: ts.length\n    };\n  });\n  r.list = sortEm(tmp);\n  return r;\n};\n\n//sort by frequency (like topk)\nexports.freq = function (r) {\n  //get counts\n  var count = {};\n  r.list.forEach(function (ts) {\n    var str = ts.out('root');\n    count[str] = count[str] || 0;\n    count[str] += 1;\n  });\n  //pre-compute indexes\n  var tmp = r.list.map(function (ts) {\n    var num = count[ts.out('root')] || 0;\n    return {\n      ts: ts,\n      index: num * -1 //quick-reverse it\n    };\n  });\n  r.list = sortEm(tmp);\n  return r;\n};\n\n},{}],54:[function(_dereq_,module,exports){\n'use strict';\n\nvar splitMethods = function splitMethods(Text) {\n\n  var methods = {\n    /** turn result into two seperate results */\n    splitAfter: function splitAfter(reg, verbose) {\n      var list = [];\n      this.list.forEach(function (ts) {\n        ts.splitAfter(reg, verbose).forEach(function (mts) {\n          list.push(mts);\n        });\n      });\n      this.list = list;\n      return this;\n    },\n    /** turn result into two seperate results */\n    splitBefore: function splitBefore(reg, verbose) {\n      var list = [];\n      this.list.forEach(function (ts) {\n        ts.splitBefore(reg, verbose).forEach(function (mts) {\n          list.push(mts);\n        });\n      });\n      this.list = list;\n      return this;\n    },\n    /** turn result into two seperate results */\n    splitOn: function splitOn(reg, verbose) {\n      var list = [];\n      this.list.forEach(function (ts) {\n        ts.splitOn(reg, verbose).forEach(function (mts) {\n          list.push(mts);\n        });\n      });\n      this.list = list;\n      return this;\n    }\n  };\n\n  //hook them into result.proto\n  Object.keys(methods).forEach(function (k) {\n    Text.prototype[k] = methods[k];\n  });\n  return Text;\n};\n\nmodule.exports = splitMethods;\n\n},{}],55:[function(_dereq_,module,exports){\n'use strict';\n\nvar splitMethods = function splitMethods(Text) {\n\n  var methods = {\n\n    /**tag all the terms in this result as something */\n    tag: function tag(_tag, reason) {\n      var _this = this;\n\n      this.list.forEach(function (ts) {\n        ts.tagAs(_tag, reason, _this.tagSet);\n      });\n      return this;\n    },\n    /**remove a tag in all the terms in this result (that had it) */\n    unTag: function unTag(tag, reason) {\n      var _this2 = this;\n\n      this.list.forEach(function (ts) {\n        ts.unTag(tag, reason, _this2.tagSet);\n      });\n      return this;\n    },\n\n    /** see if these terms can become this tag*/\n    canBe: function canBe(tag) {\n      var _this3 = this;\n\n      this.list.forEach(function (ts) {\n        ts.terms = ts.terms.filter(function (t) {\n          return t.canBe(tag, _this3.tagSet);\n        });\n      });\n      return this;\n    }\n\n  };\n\n  //hook them into result.proto\n  Object.keys(methods).forEach(function (k) {\n    Text.prototype[k] = methods[k];\n  });\n  return Text;\n};\n\nmodule.exports = splitMethods;\n\n},{}],56:[function(_dereq_,module,exports){\n'use strict';\n\nmodule.exports = {\n  fns: _dereq_('../fns'),\n  log: _dereq_('../log'),\n  data: _dereq_('../data'),\n  Terms: _dereq_('../terms'),\n  tags: _dereq_('../tags')\n};\n\n},{\"../data\":8,\"../fns\":40,\"../log\":42,\"../tags\":156,\"../terms\":176}],57:[function(_dereq_,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Text = _dereq_('../../index');\n\nvar Acronyms = function (_Text) {\n  _inherits(Acronyms, _Text);\n\n  function Acronyms() {\n    _classCallCheck(this, Acronyms);\n\n    return _possibleConstructorReturn(this, (Acronyms.__proto__ || Object.getPrototypeOf(Acronyms)).apply(this, arguments));\n  }\n\n  _createClass(Acronyms, [{\n    key: 'data',\n    value: function data() {\n      return this.terms().list.map(function (ts) {\n        var t = ts.terms[0];\n        var parsed = t.text.toUpperCase().replace(/\\./g).split('');\n        return {\n          periods: parsed.join('.'),\n          normal: parsed.join(''),\n          text: t.text\n        };\n      });\n    }\n  }], [{\n    key: 'find',\n    value: function find(r, n) {\n      r = r.match('#Acronym');\n      if (typeof n === 'number') {\n        r = r.get(n);\n      }\n      return r;\n    }\n  }]);\n\n  return Acronyms;\n}(Text);\n\nmodule.exports = Acronyms;\n\n},{\"../../index\":44}],58:[function(_dereq_,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Terms = _dereq_('../../paths').Terms;\nvar methods = _dereq_('./methods');\n\nvar Adjective = function (_Terms) {\n  _inherits(Adjective, _Terms);\n\n  function Adjective(arr, lexicon, refText, refTerms) {\n    _classCallCheck(this, Adjective);\n\n    return _possibleConstructorReturn(this, (Adjective.__proto__ || Object.getPrototypeOf(Adjective)).call(this, arr, lexicon, refText, refTerms));\n  }\n\n  _createClass(Adjective, [{\n    key: 'data',\n    value: function data() {\n      var str = this.out('normal');\n      return {\n        comparative: methods.toComparative(str),\n        superlative: methods.toSuperlative(str),\n        adverbForm: methods.toAdverb(str),\n        nounForm: methods.toNoun(str),\n        verbForm: methods.toVerb(str),\n        normal: str,\n        text: this.out('text')\n      };\n    }\n  }]);\n\n  return Adjective;\n}(Terms);\n\nmodule.exports = Adjective;\n\n},{\"../../paths\":56,\"./methods\":61}],59:[function(_dereq_,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Text = _dereq_('../../index');\nvar Adjective = _dereq_('./adjective');\n\nvar Adjectives = function (_Text) {\n  _inherits(Adjectives, _Text);\n\n  function Adjectives() {\n    _classCallCheck(this, Adjectives);\n\n    return _possibleConstructorReturn(this, (Adjectives.__proto__ || Object.getPrototypeOf(Adjectives)).apply(this, arguments));\n  }\n\n  _createClass(Adjectives, [{\n    key: 'data',\n    value: function data() {\n      return this.list.map(function (ts) {\n        return ts.data();\n      });\n    }\n  }], [{\n    key: 'find',\n    value: function find(r, n) {\n      r = r.match('#Adjective');\n      if (typeof n === 'number') {\n        r = r.get(n);\n      }\n      r.list = r.list.map(function (ts) {\n        return new Adjective(ts.terms, ts.lexicon, ts.refText, ts.refTerms);\n      });\n      return r;\n    }\n  }]);\n\n  return Adjectives;\n}(Text);\n\nmodule.exports = Adjectives;\n\n},{\"../../index\":44,\"./adjective\":58}],60:[function(_dereq_,module,exports){\n'use strict';\n//an obj of adjectives that can be converted to superlative + comparative, via the lexicon data\n\nvar data = _dereq_('../../../../data');\n\nvar convertables = {};\ndata.superlatives.forEach(function (a) {\n  convertables[a] = true;\n});\ndata.verbConverts.forEach(function (a) {\n  convertables[a] = true;\n});\nmodule.exports = convertables;\n\n},{\"../../../../data\":8}],61:[function(_dereq_,module,exports){\n'use strict';\n\nmodule.exports = {\n  toNoun: _dereq_('./toNoun'),\n  toSuperlative: _dereq_('./toSuperlative'),\n  toComparative: _dereq_('./toComparative'),\n  toAdverb: _dereq_('./toAdverb'),\n  toVerb: _dereq_('./toVerb')\n};\n\n},{\"./toAdverb\":62,\"./toComparative\":63,\"./toNoun\":64,\"./toSuperlative\":65,\"./toVerb\":66}],62:[function(_dereq_,module,exports){\n//turn 'quick' into 'quickly'\n'use strict';\n\nvar adj_to_adv = function adj_to_adv(str) {\n  var irregulars = {\n    'idle': 'idly',\n    'public': 'publicly',\n    'vague': 'vaguely',\n    'day': 'daily',\n    'icy': 'icily',\n    'single': 'singly',\n    'female': 'womanly',\n    'male': 'manly',\n    'simple': 'simply',\n    'whole': 'wholly',\n    'special': 'especially',\n    'straight': 'straight',\n    'wrong': 'wrong',\n    'fast': 'fast',\n    'hard': 'hard',\n    'late': 'late',\n    'early': 'early',\n    'well': 'well',\n    'good': 'well',\n    'little': 'little',\n    'long': 'long',\n    'low': 'low',\n    'best': 'best',\n    'latter': 'latter',\n    'bad': 'badly'\n  };\n\n  var dont = {\n    'foreign': 1,\n    'black': 1,\n    'modern': 1,\n    'next': 1,\n    'difficult': 1,\n    'degenerate': 1,\n    'young': 1,\n    'awake': 1,\n    'back': 1,\n    'blue': 1,\n    'brown': 1,\n    'orange': 1,\n    'complex': 1,\n    'cool': 1,\n    'dirty': 1,\n    'done': 1,\n    'empty': 1,\n    'fat': 1,\n    'fertile': 1,\n    'frozen': 1,\n    'gold': 1,\n    'grey': 1,\n    'gray': 1,\n    'green': 1,\n    'medium': 1,\n    'parallel': 1,\n    'outdoor': 1,\n    'unknown': 1,\n    'undersized': 1,\n    'used': 1,\n    'welcome': 1,\n    'yellow': 1,\n    'white': 1,\n    'fixed': 1,\n    'mixed': 1,\n    'super': 1,\n    'guilty': 1,\n    'tiny': 1,\n    'able': 1,\n    'unable': 1,\n    'same': 1,\n    'adult': 1\n  };\n\n  var transforms = [{\n    reg: /al$/i,\n    repl: 'ally'\n  }, {\n    reg: /ly$/i,\n    repl: 'ly'\n  }, {\n    reg: /(.{3})y$/i,\n    repl: '$1ily'\n  }, {\n    reg: /que$/i,\n    repl: 'quely'\n  }, {\n    reg: /ue$/i,\n    repl: 'uly'\n  }, {\n    reg: /ic$/i,\n    repl: 'ically'\n  }, {\n    reg: /ble$/i,\n    repl: 'bly'\n  }, {\n    reg: /l$/i,\n    repl: 'ly'\n  }];\n\n  var not_matches = [/airs$/, /ll$/, /ee.$/, /ile$/];\n\n  if (dont[str]) {\n    return null;\n  }\n  if (irregulars[str]) {\n    return irregulars[str];\n  }\n  if (str.length <= 3) {\n    return null;\n  }\n  for (var i = 0; i < not_matches.length; i++) {\n    if (str.match(not_matches[i])) {\n      return null;\n    }\n  }\n  for (var _i = 0; _i < transforms.length; _i++) {\n    if (str.match(transforms[_i].reg)) {\n      return str.replace(transforms[_i].reg, transforms[_i].repl);\n    }\n  }\n  return str + 'ly';\n};\n// console.log(adj_to_adv('direct'))\n\nmodule.exports = adj_to_adv;\n\n},{}],63:[function(_dereq_,module,exports){\n//turn 'quick' into 'quickly'\n'use strict';\n\nvar convertables = _dereq_('./convertable');\n\nvar irregulars = {\n  'grey': 'greyer',\n  'gray': 'grayer',\n  'green': 'greener',\n  'yellow': 'yellower',\n  'red': 'redder',\n  'good': 'better',\n  'well': 'better',\n  'bad': 'worse',\n  'sad': 'sadder',\n  'big': 'bigger'\n};\n\nvar dont = {\n  'overweight': 1,\n  'main': 1,\n  'nearby': 1,\n  'asleep': 1,\n  'weekly': 1,\n  'secret': 1,\n  'certain': 1\n};\n\nvar transforms = [{\n  reg: /y$/i,\n  repl: 'ier'\n}, {\n  reg: /([aeiou])t$/i,\n  repl: '$1tter'\n}, {\n  reg: /([aeou])de$/i,\n  repl: '$1der'\n}, {\n  reg: /nge$/i,\n  repl: 'nger'\n}];\n\nvar matches = [/ght$/, /nge$/, /ough$/, /ain$/, /uel$/, /[au]ll$/, /ow$/, /old$/, /oud$/, /e[ae]p$/];\n\nvar not_matches = [/ary$/, /ous$/];\n\nvar to_comparative = function to_comparative(str) {\n  if (dont.hasOwnProperty(str)) {\n    return null;\n  }\n\n  if (irregulars.hasOwnProperty(str)) {\n    return irregulars[str];\n  }\n\n  for (var i = 0; i < transforms.length; i++) {\n    if (str.match(transforms[i].reg)) {\n      return str.replace(transforms[i].reg, transforms[i].repl);\n    }\n  }\n\n  if (convertables[str] !== undefined) {\n    if (str.match(/e$/)) {\n      return str + 'r';\n    }\n    return str + 'er';\n  }\n\n  for (var _i = 0; _i < not_matches.length; _i++) {\n    if (str.match(not_matches[_i])) {\n      return 'more ' + str;\n    }\n  }\n\n  for (var _i2 = 0; _i2 < matches.length; _i2++) {\n    if (str.match(matches[_i2])) {\n      return str + 'er';\n    }\n  }\n  return 'more ' + str;\n};\n\n// console.log(to_comparative('big'));\n\nmodule.exports = to_comparative;\n\n},{\"./convertable\":60}],64:[function(_dereq_,module,exports){\n'use strict';\n//convert 'cute' to 'cuteness'\n\nvar to_noun = function to_noun(w) {\n  var irregulars = {\n    'clean': 'cleanliness',\n    'naivety': 'naivety',\n    hurt: 'hurt'\n  };\n  if (!w) {\n    return '';\n  }\n  if (irregulars.hasOwnProperty(w)) {\n    return irregulars[w];\n  }\n  if (w.match(' ')) {\n    return w;\n  }\n  if (w.match(/w$/)) {\n    return w;\n  }\n  var transforms = [{\n    'reg': /y$/,\n    'repl': 'iness'\n  }, {\n    'reg': /le$/,\n    'repl': 'ility'\n  }, {\n    'reg': /ial$/,\n    'repl': 'y'\n  }, {\n    'reg': /al$/,\n    'repl': 'ality'\n  }, {\n    'reg': /ting$/,\n    'repl': 'ting'\n  }, {\n    'reg': /ring$/,\n    'repl': 'ring'\n  }, {\n    'reg': /bing$/,\n    'repl': 'bingness'\n  }, {\n    'reg': /sing$/,\n    'repl': 'se'\n  }, {\n    'reg': /ing$/,\n    'repl': 'ment'\n  }, {\n    'reg': /ess$/,\n    'repl': 'essness'\n  }, {\n    'reg': /ous$/,\n    'repl': 'ousness'\n  }];\n\n  for (var i = 0; i < transforms.length; i++) {\n    if (w.match(transforms[i].reg)) {\n      return w.replace(transforms[i].reg, transforms[i].repl);\n    }\n  }\n\n  if (w.match(/s$/)) {\n    return w;\n  }\n  return w + 'ness';\n};\n\n// console.log(to_noun(\"great\"))\n\nmodule.exports = to_noun;\n\n},{}],65:[function(_dereq_,module,exports){\n//turn 'quick' into 'quickest'\n'use strict';\n\nvar convertables = _dereq_('./convertable');\n\nvar irregulars = {\n  'nice': 'nicest',\n  'late': 'latest',\n  'hard': 'hardest',\n  'inner': 'innermost',\n  'outer': 'outermost',\n  'far': 'furthest',\n  'worse': 'worst',\n  'bad': 'worst',\n  'good': 'best',\n  'big': 'biggest'\n};\n\nvar dont = {\n  'overweight': 1,\n  'ready': 1\n};\n\nvar transforms = [{\n  'reg': /y$/i,\n  'repl': 'iest'\n}, {\n  'reg': /([aeiou])t$/i,\n  'repl': '$1ttest'\n}, {\n  'reg': /([aeou])de$/i,\n  'repl': '$1dest'\n}, {\n  'reg': /nge$/i,\n  'repl': 'ngest'\n}];\n\nvar matches = [/ght$/, /nge$/, /ough$/, /ain$/, /uel$/, /[au]ll$/, /ow$/, /oud$/, /...p$/];\n\nvar not_matches = [/ary$/];\n\nvar generic_transformation = function generic_transformation(s) {\n  if (s.match(/e$/)) {\n    return s + 'st';\n  }\n  return s + 'est';\n};\n\nvar to_superlative = function to_superlative(str) {\n  if (irregulars.hasOwnProperty(str)) {\n    return irregulars[str];\n  }\n  for (var i = 0; i < transforms.length; i++) {\n    if (str.match(transforms[i].reg)) {\n      return str.replace(transforms[i].reg, transforms[i].repl);\n    }\n  }\n\n  if (convertables.hasOwnProperty(str)) {\n    return generic_transformation(str);\n  }\n\n  if (dont.hasOwnProperty(str)) {\n    return 'most ' + str;\n  }\n\n  for (var _i = 0; _i < not_matches.length; _i++) {\n    if (str.match(not_matches[_i])) {\n      return 'most ' + str;\n    }\n  }\n\n  for (var _i2 = 0; _i2 < matches.length; _i2++) {\n    if (str.match(matches[_i2])) {\n      if (irregulars.hasOwnProperty(str)) {\n        return irregulars[str];\n      }\n      return generic_transformation(str);\n    }\n  }\n  return 'most ' + str;\n};\n\n// console.log(to_superlative(\"great\"))\n\nmodule.exports = to_superlative;\n\n},{\"./convertable\":60}],66:[function(_dereq_,module,exports){\n'use strict';\n\nvar data = _dereq_('../../../../data');\n//turn an adjective like 'soft' into a verb like 'soften'\n\nvar irregulars = {\n  red: 'redden',\n  sad: 'sadden',\n  fat: 'fatten'\n};\n\nvar convertable = data.verbConverts.reduce(function (h, str) {\n  h[str] = true;\n  return h;\n}, {});\n\nvar toVerb = function toVerb(str) {\n  //don't do words like 'green' -> 'greenen'\n  if (!convertable[str]) {\n    return str;\n  }\n  //irregulars\n  if (irregulars[str]) {\n    return irregulars[str];\n  }\n  if (str.match(/e$/)) {\n    return str + 'n';\n  }\n  return str + 'en';\n};\nmodule.exports = toVerb;\n\n},{\"../../../../data\":8}],67:[function(_dereq_,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Text = _dereq_('../../index');\nvar toAdjective = _dereq_('./toAdjective');\n\nvar Adverbs = function (_Text) {\n  _inherits(Adverbs, _Text);\n\n  function Adverbs() {\n    _classCallCheck(this, Adverbs);\n\n    return _possibleConstructorReturn(this, (Adverbs.__proto__ || Object.getPrototypeOf(Adverbs)).apply(this, arguments));\n  }\n\n  _createClass(Adverbs, [{\n    key: 'data',\n    value: function data() {\n      return this.terms().list.map(function (ts) {\n        var t = ts.terms[0];\n        return {\n          adjectiveForm: toAdjective(t.normal),\n          normal: t.normal,\n          text: t.text\n        };\n      });\n    }\n  }], [{\n    key: 'find',\n    value: function find(r, n) {\n      r = r.match('#Adverb+');\n      if (typeof n === 'number') {\n        r = r.get(n);\n      }\n      return r;\n    }\n  }]);\n\n  return Adverbs;\n}(Text);\n\nmodule.exports = Adverbs;\n\n},{\"../../index\":44,\"./toAdjective\":68}],68:[function(_dereq_,module,exports){\n//turns 'quickly' into 'quick'\n'use strict';\n\nvar irregulars = {\n  'idly': 'idle',\n  'sporadically': 'sporadic',\n  'basically': 'basic',\n  'grammatically': 'grammatical',\n  'alphabetically': 'alphabetical',\n  'economically': 'economical',\n  'conically': 'conical',\n  'politically': 'political',\n  'vertically': 'vertical',\n  'practically': 'practical',\n  'theoretically': 'theoretical',\n  'critically': 'critical',\n  'fantastically': 'fantastic',\n  'mystically': 'mystical',\n  'pornographically': 'pornographic',\n  'fully': 'full',\n  'jolly': 'jolly',\n  'wholly': 'whole'\n};\n\nvar transforms = [{\n  'reg': /bly$/i,\n  'repl': 'ble'\n}, {\n  'reg': /gically$/i,\n  'repl': 'gical'\n}, {\n  'reg': /([rsdh])ically$/i,\n  'repl': '$1ical'\n}, {\n  'reg': /ically$/i,\n  'repl': 'ic'\n}, {\n  'reg': /uly$/i,\n  'repl': 'ue'\n}, {\n  'reg': /ily$/i,\n  'repl': 'y'\n}, {\n  'reg': /(.{3})ly$/i,\n  'repl': '$1'\n}];\n\nvar toAdjective = function toAdjective(str) {\n  if (irregulars.hasOwnProperty(str)) {\n    return irregulars[str];\n  }\n  for (var i = 0; i < transforms.length; i++) {\n    if (str.match(transforms[i].reg)) {\n      return str.replace(transforms[i].reg, transforms[i].repl);\n    }\n  }\n  return str;\n};\n\n// console.log(toAdjective('quickly') === 'quick')\n// console.log(toAdjective('marvelously') === 'marvelous')\nmodule.exports = toAdjective;\n\n},{}],69:[function(_dereq_,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Text = _dereq_('../../index');\n\nvar Clauses = function (_Text) {\n  _inherits(Clauses, _Text);\n\n  function Clauses() {\n    _classCallCheck(this, Clauses);\n\n    return _possibleConstructorReturn(this, (Clauses.__proto__ || Object.getPrototypeOf(Clauses)).apply(this, arguments));\n  }\n\n  _createClass(Clauses, null, [{\n    key: 'find',\n    value: function find(r, n) {\n      r = r.splitAfter('#ClauseEnd');\n      if (typeof n === 'number') {\n        r = r.get(n);\n      }\n      return r;\n    }\n  }]);\n\n  return Clauses;\n}(Text);\n\nmodule.exports = Clauses;\n\n},{\"../../index\":44}],70:[function(_dereq_,module,exports){\n'use strict';\n\n//the plumbing to turn two words into a contraction\n\nvar combine = function combine(a, b) {\n  b.whitespace.after = a.whitespace.after;\n  a.whitespace.after = '';\n  b.whitespace.before = '';\n  a.silent_term = a.text;\n  b.silent_term = b.text;\n  b.text = '';\n  a.tagAs('Contraction', 'new-contraction');\n  b.tagAs('Contraction', 'new-contraction');\n};\n\nvar contract = function contract(ts) {\n  if (ts.expanded === false || ts.match('#Contraction').found) {\n    return ts;\n  }\n  //he is -> he's\n  ts.match('(#Noun|#QuestionWord) is').list.forEach(function (ls) {\n    combine(ls.terms[0], ls.terms[1]);\n    ls.terms[0].text += '\\'s';\n    ls.contracted = true;\n  });\n  //he did -> he'd\n  ts.match('#PronNoun did').list.forEach(function (ls) {\n    combine(ls.terms[0], ls.terms[1]);\n    ls.terms[0].text += '\\'d';\n    ls.contracted = true;\n  });\n  //how do -> how'd\n  ts.match('#QuestionWord (did|do)').list.forEach(function (ls) {\n    combine(ls.terms[0], ls.terms[1]);\n    ls.terms[0].text += '\\'d';\n    ls.contracted = true;\n  });\n\n  //he would -> he'd\n  ts.match('#Noun (could|would)').list.forEach(function (ls) {\n    combine(ls.terms[0], ls.terms[1]);\n    ls.terms[0].text += '\\'d';\n    ls.contracted = true;\n  });\n  //they are -> they're\n  ts.match('(they|we|you) are').list.forEach(function (ls) {\n    combine(ls.terms[0], ls.terms[1]);\n    ls.terms[0].text += '\\'re';\n    ls.contracted = true;\n  });\n  //i am -> i'm\n  ts.match('i am').list.forEach(function (ls) {\n    combine(ls.terms[0], ls.terms[1]);\n    ls.terms[0].text += '\\'m';\n    ls.contracted = true;\n  });\n  //they will -> they'll\n  ts.match('(#Noun|#QuestionWord) will').list.forEach(function (ls) {\n    combine(ls.terms[0], ls.terms[1]);\n    ls.terms[0].text += '\\'ll';\n    ls.contracted = true;\n  });\n  //they have -> they've\n  ts.match('(they|we|you|i) have').list.forEach(function (ls) {\n    combine(ls.terms[0], ls.terms[1]);\n    ls.terms[0].text += '\\'ve';\n    ls.contracted = true;\n  });\n  //is not -> isn't\n  ts.match('(#Copula|#Modal|do) not').list.forEach(function (ls) {\n    combine(ls.terms[0], ls.terms[1]);\n    ls.terms[0].text += 'n\\'t';\n    ls.contracted = true;\n  });\n  return ts;\n};\n\nmodule.exports = contract;\n\n},{}],71:[function(_dereq_,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Terms = _dereq_('../../paths').Terms;\nvar _contract = _dereq_('./contract');\n\nvar _expand = function _expand(ts) {\n  if (ts.contracted === false) {\n    return ts;\n  }\n  ts.terms.forEach(function (t) {\n    if (t.silent_term) {\n      //this term also needs a space now too\n      if (!t.text) {\n        t.whitespace.before = ' ';\n      }\n      t._text = t.silent_term;\n      t.normalize();\n      t.silent_term = null;\n      t.unTag('Contraction', 'expanded');\n    }\n  });\n  return ts;\n};\n\nvar Contraction = function (_Terms) {\n  _inherits(Contraction, _Terms);\n\n  function Contraction() {\n    _classCallCheck(this, Contraction);\n\n    return _possibleConstructorReturn(this, (Contraction.__proto__ || Object.getPrototypeOf(Contraction)).apply(this, arguments));\n  }\n\n  _createClass(Contraction, [{\n    key: 'data',\n    value: function data() {\n      var expanded = _expand(this.clone());\n      var contracted = _contract(this.clone());\n      return {\n        text: this.out('text'),\n        normal: this.out('normal'),\n        expanded: {\n          normal: expanded.out('normal'),\n          text: expanded.out('text')\n        },\n        contracted: {\n          normal: contracted.out('normal'),\n          text: contracted.out('text')\n        },\n        isContracted: !!this.contracted\n      };\n    }\n  }, {\n    key: 'expand',\n    value: function expand() {\n      return _expand(this);\n    }\n  }, {\n    key: 'contract',\n    value: function contract() {\n      return _contract(this);\n    }\n  }]);\n\n  return Contraction;\n}(Terms);\n\nmodule.exports = Contraction;\n\n},{\"../../paths\":56,\"./contract\":70}],72:[function(_dereq_,module,exports){\n'use strict';\n//find contractable, expanded-contractions\n\nvar find = function find(r) {\n  var remain = r.not('#Contraction');\n  var m = remain.match('(#Noun|#QuestionWord) (#Copula|did|do|have|had|could|would|will)');\n  m.concat(remain.match('(they|we|you|i) have'));\n  m.concat(remain.match('i am'));\n  m.concat(remain.match('(#Copula|#Modal|do) not'));\n  m.list.forEach(function (ts) {\n    ts.expanded = true;\n  });\n  return m;\n};\nmodule.exports = find;\n\n},{}],73:[function(_dereq_,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Text = _dereq_('../../index');\nvar Contraction = _dereq_('./contraction');\nvar findPossible = _dereq_('./findPossible');\n\nvar Contractions = function (_Text) {\n  _inherits(Contractions, _Text);\n\n  function Contractions() {\n    _classCallCheck(this, Contractions);\n\n    return _possibleConstructorReturn(this, (Contractions.__proto__ || Object.getPrototypeOf(Contractions)).apply(this, arguments));\n  }\n\n  _createClass(Contractions, [{\n    key: 'data',\n    value: function data() {\n      return this.list.map(function (ts) {\n        return ts.data();\n      });\n    }\n  }, {\n    key: 'contract',\n    value: function contract() {\n      this.list.forEach(function (ts) {\n        return ts.contract();\n      });\n      return this;\n    }\n  }, {\n    key: 'expand',\n    value: function expand() {\n      this.list.forEach(function (ts) {\n        return ts.expand();\n      });\n      return this;\n    }\n  }, {\n    key: 'contracted',\n    value: function contracted() {\n      this.list = this.list.filter(function (ts) {\n        return ts.contracted;\n      });\n      return this;\n    }\n  }, {\n    key: 'expanded',\n    value: function expanded() {\n      this.list = this.list.filter(function (ts) {\n        return !ts.contracted;\n      });\n      return this;\n    }\n  }], [{\n    key: 'find',\n    value: function find(r, n) {\n      //find currently-contracted\n      var found = r.match('#Contraction #Contraction #Contraction?');\n      found.list = found.list.map(function (ts) {\n        var c = new Contraction(ts.terms, ts.lexicon, ts.refText, ts.refTerms);\n        c.contracted = true;\n        return c;\n      });\n      //find currently-expanded\n      var expanded = findPossible(r);\n      expanded.list.forEach(function (ts) {\n        var c = new Contraction(ts.terms, ts.lexicon, ts.refText, ts.refTerms);\n        c.contracted = false;\n        found.list.push(c);\n      });\n      found.sort('chronological');\n      //get nth element\n      if (typeof n === 'number') {\n        found = found.get(n);\n      }\n      return found;\n    }\n  }]);\n\n  return Contractions;\n}(Text);\n\nmodule.exports = Contractions;\n\n},{\"../../index\":44,\"./contraction\":71,\"./findPossible\":72}],74:[function(_dereq_,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Terms = _dereq_('../../paths').Terms;\nvar parsePunt = _dereq_('./parsePunt');\nvar parseSection = _dereq_('./parseSection');\nvar parseRelative = _dereq_('./parseRelative');\nvar parseDate = _dereq_('./parseDate');\n\nvar Date = function (_Terms) {\n  _inherits(Date, _Terms);\n\n  function Date(arr, lexicon, refText, refTerms) {\n    _classCallCheck(this, Date);\n\n    var _this = _possibleConstructorReturn(this, (Date.__proto__ || Object.getPrototypeOf(Date)).call(this, arr, lexicon, refText, refTerms));\n\n    _this.month = _this.match('#Month');\n    return _this;\n  }\n\n  _createClass(Date, [{\n    key: 'data',\n    value: function data() {\n      var obj = {};\n      //parsing order matters..\n      //[two days before] [the start of] [this] [thursday]\n      obj.punt = parsePunt(this); //two days before\n      obj.section = parseSection(this); //the start of\n      obj.relative = parseRelative(this); //this\n      obj.date = parseDate(this); //thursday\n      return obj;\n    }\n  }]);\n\n  return Date;\n}(Terms);\n\nmodule.exports = Date;\n\n},{\"../../paths\":56,\"./parseDate\":78,\"./parsePunt\":79,\"./parseRelative\":80,\"./parseSection\":81}],75:[function(_dereq_,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Text = _dereq_('../../index');\nvar Date = _dereq_('./date');\nvar weekdays = _dereq_('./weekday');\nvar months = _dereq_('./month');\n\nvar Dates = function (_Text) {\n  _inherits(Dates, _Text);\n\n  function Dates() {\n    _classCallCheck(this, Dates);\n\n    return _possibleConstructorReturn(this, (Dates.__proto__ || Object.getPrototypeOf(Dates)).apply(this, arguments));\n  }\n\n  _createClass(Dates, [{\n    key: 'data',\n    value: function data() {\n      return this.list.map(function (ts) {\n        return ts.data();\n      });\n    }\n  }, {\n    key: 'toShortForm',\n    value: function toShortForm() {\n      this.match('#Month').terms().list.forEach(function (ts) {\n        var t = ts.terms[0];\n        months.toShortForm(t);\n      });\n      this.match('#WeekDay').terms().list.forEach(function (ts) {\n        var t = ts.terms[0];\n        weekdays.toShortForm(t);\n      });\n      return this;\n    }\n  }, {\n    key: 'toLongForm',\n    value: function toLongForm() {\n      this.match('#Month').terms().list.forEach(function (ts) {\n        var t = ts.terms[0];\n        months.toLongForm(t);\n      });\n      this.match('#WeekDay').terms().list.forEach(function (ts) {\n        var t = ts.terms[0];\n        weekdays.toLongForm(t);\n      });\n      return this;\n    }\n  }], [{\n    key: 'find',\n    value: function find(r, n) {\n      var dates = r.match('#Date+');\n      if (typeof n === 'number') {\n        dates = dates.get(n);\n      }\n      dates.list = dates.list.map(function (ts) {\n        return new Date(ts.terms, ts.lexicon, ts.refText, ts.refTerms);\n      });\n      return dates;\n    }\n  }]);\n\n  return Dates;\n}(Text);\n\nmodule.exports = Dates;\n\n},{\"../../index\":44,\"./date\":74,\"./month\":77,\"./weekday\":84}],76:[function(_dereq_,module,exports){\n'use strict';\n\n//follow the javascript scheme\n//january is 0\nexports.longMonths = {\n  'january': 0,\n  'february': 1,\n  'march': 2,\n  'april': 3,\n  'may': 4,\n  'june': 5,\n  'july': 6,\n  'august': 7,\n  'september': 8,\n  'october': 9,\n  'november': 10,\n  'december': 11\n};\nexports.shortMonths = {\n  'jan': 0,\n  'feb': 1,\n  'febr': 1,\n  'mar': 2,\n  'apr': 3,\n  'may': 4,\n  'jun': 5,\n  'jul': 6,\n  'aug': 7,\n  'sep': 8,\n  'sept': 8,\n  'oct': 9,\n  'nov': 10,\n  'dec': 11\n};\n\n},{}],77:[function(_dereq_,module,exports){\n'use strict';\n\nvar data = _dereq_('./data');\nvar shortMonths = data.shortMonths;\nvar longMonths = data.longMonths;\n\nmodule.exports = {\n  index: function index(t) {\n    if (t.tag.Month) {\n      if (longMonths[t.normal] !== undefined) {\n        return longMonths[t.normal];\n      }\n      if (shortMonths[t.normal] !== undefined) {\n        return shortMonths[t.normal];\n      }\n    }\n    return null;\n  },\n  toShortForm: function toShortForm(t) {\n    if (t.tag.Month !== undefined) {\n      if (longMonths[t.normal] !== undefined) {\n        var shorten = Object.keys(shortMonths);\n        t.text = shorten[longMonths[t.normal]];\n      }\n    }\n    t.dirty = true;\n    return t;\n  },\n  toLongForm: function toLongForm(t) {\n    if (t.tag.Month !== undefined) {\n      if (shortMonths[t.normal] !== undefined) {\n        var longer = Object.keys(longMonths);\n        t.text = longer[shortMonths[t.normal]];\n      }\n    }\n    t.dirty = true;\n    return t;\n  }\n\n};\n\n},{\"./data\":76}],78:[function(_dereq_,module,exports){\n'use strict';\n\nvar parseTime = _dereq_('./parseTime');\nvar weekdays = _dereq_('./weekday');\nvar months = _dereq_('./month');\n//\nvar isDate = function isDate(num) {\n  if (num && num < 31 && num > 0) {\n    return true;\n  }\n  return false;\n};\n\n//please change in one thousand years\nvar isYear = function isYear(num) {\n  if (num && num > 1000 && num < 3000) {\n    return true;\n  }\n  return false;\n};\n\n//\nvar parseDate = function parseDate(r) {\n  var result = {\n    month: null,\n    date: null,\n    weekday: null,\n    year: null,\n    knownDate: null,\n    timeOfDay: null\n  };\n  var m = r.match('(#Holiday|today|tomorrow|yesterday)');\n  if (m.found) {\n    result.knownDate = m.out('normal');\n  }\n  m = r.match('#Month');\n  if (m.found) {\n    result.month = months.index(m.list[0].terms[0]);\n  }\n  m = r.match('#WeekDay');\n  if (m.found) {\n    result.weekday = weekdays.index(m.list[0].terms[0]);\n  }\n  m = r.match('#Time');\n  if (m.found) {\n    result.timeOfDay = parseTime(r);\n    r.not('#Time'); //unsure\n  }\n\n  //january fifth 1992\n  m = r.match('#Month #Value #Year');\n  if (m.found) {\n    var numbers = m.values().numbers();\n    if (isDate(numbers[0])) {\n      result.date = numbers[0];\n    }\n    var year = parseInt(r.match('#Year').out('normal'), 10);\n    if (isYear(year)) {\n      result.year = year;\n    }\n  }\n  if (!m.found) {\n    //january fifth,  january 1992\n    m = r.match('#Month #Value');\n    if (m.found) {\n      var _numbers = m.values().numbers();\n      var num = _numbers[0];\n      if (isDate(num)) {\n        result.date = num;\n      }\n    }\n    //january 1992\n    m = r.match('#Month #Year');\n    if (m.found) {\n      var _num = parseInt(r.match('#Year').out('normal'), 10);\n      if (isYear(_num)) {\n        result.year = _num;\n      }\n    }\n  }\n\n  //fifth of january\n  m = r.match('#Value of #Month');\n  if (m.found) {\n    var _num2 = m.values().numbers()[0];\n    if (isDate(_num2)) {\n      result.date = _num2;\n    }\n  }\n  return result;\n};\nmodule.exports = parseDate;\n\n},{\"./month\":77,\"./parseTime\":82,\"./weekday\":84}],79:[function(_dereq_,module,exports){\n'use strict';\n//parse '5 days before', 'three weeks after'..\n\nvar durations = {\n  year: true,\n  quarter: true,\n  month: true,\n  week: true,\n  weekend: true,\n  day: true,\n  hour: true\n};\n\nvar parsePunt = function parsePunt(r) {\n  var direction = null;\n  var duration = {};\n  //two days after\n  var m = r.match('#Value #Duration (from|after|following)');\n  if (m.found) {\n    direction = 'forward';\n  } else {\n    //two days before\n    m = r.match('#Value #Duration (before)');\n    if (m.found) {\n      direction = 'backward';\n    }\n  }\n  //interpret 'value + duration'\n  if (m.found) {\n    r.match('#Value #Duration').list.forEach(function (ts) {\n      var num = ts.match('*').values().data()[0] || {};\n      num = num.number;\n      if (num || num === 0) {\n        var str = ts.match('#Duration').nouns().toSingular().out('normal');\n        if (durations[str]) {\n          duration[str] = num;\n        }\n      }\n    });\n  }\n  return {\n    direction: direction,\n    duration: duration\n  };\n};\nmodule.exports = parsePunt;\n\n},{}],80:[function(_dereq_,module,exports){\n'use strict';\n//\n\nvar relatives = {\n  'this': 'this',\n  next: 'next',\n  last: 'last',\n  upcoming: 'next'\n};\nvar parseRelative = function parseRelative(r) {\n  var known = '(' + Object.keys(relatives).join('|') + ')';\n  var m = r.match(known + '+').lastTerm();\n  if (m.found) {\n    var str = m.match(known).out('normal');\n    return relatives[str];\n  }\n  return null;\n};\nmodule.exports = parseRelative;\n\n},{}],81:[function(_dereq_,module,exports){\n'use strict';\n//\n\nvar sections = {\n  start: 'start',\n  end: 'end',\n  middle: 'middle',\n  beginning: 'start',\n  ending: 'end',\n  midpoint: 'middle',\n  midst: 'middle'\n};\nvar parseSection = function parseSection(r) {\n  var known = '(' + Object.keys(sections).join('|') + ')';\n  var m = r.match('the? ' + known + ' of');\n  if (m.found) {\n    var str = m.match(known).out('normal');\n    return sections[str];\n  }\n  return null;\n};\nmodule.exports = parseSection;\n\n},{}],82:[function(_dereq_,module,exports){\n'use strict';\n//\n\nvar isHour = function isHour(num) {\n  if (num && num > 0 && num < 25) {\n    return true;\n  }\n  return false;\n};\nvar isMinute = function isMinute(num) {\n  if (num && num > 0 && num < 60) {\n    return true;\n  }\n  return false;\n};\n\nvar parseTime = function parseTime(r) {\n  var result = {\n    logic: null,\n    hour: null,\n    minute: null,\n    second: null,\n    timezone: null\n  };\n\n  var logic = r.match('(by|before|for|during|at|until|after) #Time').firstTerm();\n  if (logic.found) {\n    result.logic = logic.out('normal');\n  }\n\n  var time = r.match('#Time');\n  time.terms().list.forEach(function (ts) {\n    var t = ts.terms[0];\n    //3pm\n    var m = t.text.match(/([12]?[0-9]) ?(am|pm)/i);\n    if (m) {\n      result.hour = parseInt(m[1], 10);\n      if (m[2] === 'pm') {\n        result.hour += 12;\n      }\n      if (!isHour(result.hour)) {\n        result.hour = null;\n      }\n    }\n    //3:15\n    m = t.text.match(/([12]?[0-9]):([0-9][0-9]) ?(am|pm)?/i);\n    if (m) {\n      result.hour = parseInt(m[1], 10);\n      result.minute = parseInt(m[2], 10);\n      if (!isMinute(result.minute)) {\n        result.minute = null;\n      }\n      if (m[3] === 'pm') {\n        result.hour += 12;\n      }\n      if (!isHour(result.hour)) {\n        result.hour = null;\n      }\n    }\n  });\n  return result;\n};\nmodule.exports = parseTime;\n\n},{}],83:[function(_dereq_,module,exports){\n'use strict';\n\n//follow the javascript scheme\n//sunday is 0\nexports.longDays = {\n  'sunday': 0,\n  'monday': 1,\n  'tuesday': 2,\n  'wednesday': 3,\n  'thursday': 4,\n  'friday': 5,\n  'saturday': 6\n};\nexports.shortDays = {\n  'sun': 0,\n  'mon': 1,\n  'tues': 2,\n  'wed': 3,\n  'thurs': 4,\n  'fri': 5,\n  'sat': 6\n};\n\n},{}],84:[function(_dereq_,module,exports){\n'use strict';\n\nvar data = _dereq_('./data');\nvar shortDays = data.shortDays;\nvar longDays = data.longDays;\n\nmodule.exports = {\n  index: function index(t) {\n    if (t.tag.WeekDay) {\n      if (longDays[t.normal] !== undefined) {\n        return longDays[t.normal];\n      }\n      if (shortDays[t.normal] !== undefined) {\n        return shortDays[t.normal];\n      }\n    }\n    return null;\n  },\n  toShortForm: function toShortForm(t) {\n    if (t.tag.WeekDay) {\n      if (longDays[t.normal] !== undefined) {\n        var shorten = Object.keys(shortDays);\n        t.text = shorten[longDays[t.normal]];\n      }\n    }\n    return t;\n  },\n  toLongForm: function toLongForm(t) {\n    if (t.tag.WeekDay) {\n      if (shortDays[t.normal] !== undefined) {\n        var longer = Object.keys(longDays);\n        t.text = longer[shortDays[t.normal]];\n      }\n    }\n    return t;\n  }\n};\n\n},{\"./data\":83}],85:[function(_dereq_,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Text = _dereq_('../../index');\n\nvar HashTags = function (_Text) {\n  _inherits(HashTags, _Text);\n\n  function HashTags() {\n    _classCallCheck(this, HashTags);\n\n    return _possibleConstructorReturn(this, (HashTags.__proto__ || Object.getPrototypeOf(HashTags)).apply(this, arguments));\n  }\n\n  _createClass(HashTags, [{\n    key: 'data',\n    value: function data() {\n      return this.terms().list.map(function (ts) {\n        var t = ts.terms[0];\n        return {\n          text: t.text\n        };\n      });\n    }\n  }], [{\n    key: 'find',\n    value: function find(r, n) {\n      r = r.match('#HashTag');\n      if (typeof n === 'number') {\n        r = r.get(n);\n      }\n      return r;\n    }\n  }]);\n\n  return HashTags;\n}(Text);\n\nmodule.exports = HashTags;\n\n},{\"../../index\":44}],86:[function(_dereq_,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Ngrams = _dereq_('./index');\nvar getGrams = _dereq_('./getGrams');\n\n//like an n-gram, but only the endings of matches\n\nvar EndGrams = function (_Ngrams) {\n  _inherits(EndGrams, _Ngrams);\n\n  function EndGrams() {\n    _classCallCheck(this, EndGrams);\n\n    return _possibleConstructorReturn(this, (EndGrams.__proto__ || Object.getPrototypeOf(EndGrams)).apply(this, arguments));\n  }\n\n  _createClass(EndGrams, null, [{\n    key: 'find',\n    value: function find(r, n, size) {\n      var opts = {\n        size: [1, 2, 3, 4],\n        edge: 'end'\n      };\n      //only look for bigrams, for example\n      if (size) {\n        opts.size = [size];\n      }\n      //fetch them\n      var arr = getGrams(r, opts);\n      r = new EndGrams(arr);\n      //default sort\n      r.sort();\n      //grab top one, or something\n      if (typeof n === 'number') {\n        r = r.get(n);\n      }\n      return r;\n    }\n  }]);\n\n  return EndGrams;\n}(Ngrams);\n\nmodule.exports = EndGrams;\n\n},{\"./getGrams\":87,\"./index\":89}],87:[function(_dereq_,module,exports){\n'use strict';\n\nvar Gram = _dereq_('./gram');\n\n//do all grams of one size, on one termList\nvar getGrams = function getGrams(fts, n) {\n  var terms = fts.terms;\n  if (terms.length < n) {\n    return [];\n  }\n  var arr = [];\n  for (var i = 0; i < terms.length - n + 1; i++) {\n    var gram = new Gram(terms.slice(i, i + n));\n    arr.push(gram);\n  }\n  return arr;\n};\n\n//left-sided grams\nvar startGram = function startGram(fts, n) {\n  var terms = fts.terms;\n  if (terms.length < n) {\n    return [];\n  }\n  var arr = [new Gram(terms.slice(0, n))];\n  return arr;\n};\n\n//right-sided grams\nvar endGram = function endGram(fts, n) {\n  var terms = fts.terms;\n  if (terms.length < n) {\n    return [];\n  }\n  var arr = [new Gram(terms.slice(terms.length - n, terms.length))];\n  return arr;\n};\n\n//ngrams are consecutive terms of a specific size\nvar buildGrams = function buildGrams(r, options) {\n  options = options || {};\n  options.size = options.size || [1, 2, 3];\n  if (typeof options.size === 'number') {\n    options.size = [options.size];\n  }\n  var obj = {};\n  //collect and count all grams\n  options.size.forEach(function (size) {\n    r.list.forEach(function (ts) {\n      var grams = [];\n      if (options.edge === 'start') {\n        grams = startGram(ts, size);\n      } else if (options.edge === 'end') {\n        grams = endGram(ts, size);\n      } else {\n        grams = getGrams(ts, size);\n      }\n      grams.forEach(function (g) {\n        if (obj[g.key]) {\n          obj[g.key].inc();\n        } else {\n          obj[g.key] = g;\n        }\n      });\n    });\n  });\n\n  //flatten to an array\n  var arr = Object.keys(obj).map(function (k) {\n    return obj[k];\n  });\n  return arr;\n};\n\nmodule.exports = buildGrams;\n\n},{\"./gram\":88}],88:[function(_dereq_,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Terms = _dereq_('../../paths').Terms;\n\n//this is one-or-more terms together, sorted by frequency\n\nvar Gram = function (_Terms) {\n  _inherits(Gram, _Terms);\n\n  function Gram(arr, lexicon, refText, refTerms) {\n    _classCallCheck(this, Gram);\n\n    //string to sort/uniq by\n    var _this = _possibleConstructorReturn(this, (Gram.__proto__ || Object.getPrototypeOf(Gram)).call(this, arr, lexicon, refText, refTerms));\n\n    _this.key = _this.out('normal');\n    //bigram/trigram/etc\n    _this.size = arr.length;\n    //number of occurances\n    _this.count = 1;\n    return _this;\n  }\n\n  _createClass(Gram, [{\n    key: 'inc',\n    value: function inc() {\n      this.count += 1;\n    }\n  }]);\n\n  return Gram;\n}(Terms);\n\nmodule.exports = Gram;\n\n},{\"../../paths\":56}],89:[function(_dereq_,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Text = _dereq_('../../index');\nvar getGrams = _dereq_('./getGrams');\n\nvar Ngrams = function (_Text) {\n  _inherits(Ngrams, _Text);\n\n  function Ngrams() {\n    _classCallCheck(this, Ngrams);\n\n    return _possibleConstructorReturn(this, (Ngrams.__proto__ || Object.getPrototypeOf(Ngrams)).apply(this, arguments));\n  }\n\n  _createClass(Ngrams, [{\n    key: 'data',\n    value: function data() {\n      return this.list.map(function (ts) {\n        return {\n          normal: ts.out('normal'),\n          count: ts.count,\n          size: ts.size\n        };\n      });\n    }\n  }, {\n    key: 'unigrams',\n    value: function unigrams() {\n      this.list = this.list.filter(function (g) {\n        return g.size === 1;\n      });\n      return this;\n    }\n  }, {\n    key: 'bigrams',\n    value: function bigrams() {\n      this.list = this.list.filter(function (g) {\n        return g.size === 2;\n      });\n      return this;\n    }\n  }, {\n    key: 'trigrams',\n    value: function trigrams() {\n      this.list = this.list.filter(function (g) {\n        return g.size === 3;\n      });\n      return this;\n    }\n\n    //default sort the ngrams\n\n  }, {\n    key: 'sort',\n    value: function sort() {\n      this.list = this.list.sort(function (a, b) {\n        if (a.count > b.count) {\n          return -1;\n        }\n        //(tie-braker)\n        if (a.count === b.count && (a.size > b.size || a.key.length > b.key.length)) {\n          return -1;\n        }\n        return 1;\n      });\n      return this;\n    }\n  }], [{\n    key: 'find',\n    value: function find(r, n, size) {\n      var opts = {\n        size: [1, 2, 3, 4]\n      };\n      //only look for bigrams, for example\n      if (size) {\n        opts.size = [size];\n      }\n      //fetch them\n      var arr = getGrams(r, opts);\n      r = new Ngrams(arr);\n      //default sort\n      r.sort();\n      //grab top one, or something\n      if (typeof n === 'number') {\n        r = r.get(n);\n      }\n      return r;\n    }\n  }]);\n\n  return Ngrams;\n}(Text);\n\nmodule.exports = Ngrams;\n\n},{\"../../index\":44,\"./getGrams\":87}],90:[function(_dereq_,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Ngrams = _dereq_('./index');\nvar getGrams = _dereq_('./getGrams');\n\n//like an n-gram, but only the startings of matches\n\nvar StartGrams = function (_Ngrams) {\n  _inherits(StartGrams, _Ngrams);\n\n  function StartGrams() {\n    _classCallCheck(this, StartGrams);\n\n    return _possibleConstructorReturn(this, (StartGrams.__proto__ || Object.getPrototypeOf(StartGrams)).apply(this, arguments));\n  }\n\n  _createClass(StartGrams, null, [{\n    key: 'find',\n    value: function find(r, n, size) {\n      var opts = {\n        size: [1, 2, 3, 4],\n        edge: 'start'\n      };\n      //only look for bigrams, for example\n      if (size) {\n        opts.size = [size];\n      }\n      //fetch them\n      var arr = getGrams(r, opts);\n      r = new StartGrams(arr);\n      //default sort\n      r.sort();\n      //grab top one, or something\n      if (typeof n === 'number') {\n        r = r.get(n);\n      }\n      return r;\n    }\n  }]);\n\n  return StartGrams;\n}(Ngrams);\n\nmodule.exports = StartGrams;\n\n},{\"./getGrams\":87,\"./index\":89}],91:[function(_dereq_,module,exports){\n'use strict';\n\nvar uncountables = _dereq_('../../../data').uncountables;\n\n//certain words can't be plural, like 'peace'\nvar hasPlural = function hasPlural(t) {\n  //end quick\n  if (!t.tag.Noun) {\n    return false;\n  }\n  if (t.tag.Plural) {\n    return true;\n  }\n  //is it potentially plural?\n  var noPlural = ['Pronoun', 'Place', 'Value', 'Person', 'Month', 'WeekDay', 'RelativeDay', 'Holiday'];\n  for (var i = 0; i < noPlural.length; i++) {\n    if (t.tag[noPlural[i]]) {\n      return false;\n    }\n  }\n  //terms known as un-inflectable, like 'peace'\n  for (var _i = 0; _i < uncountables.length; _i++) {\n    if (t.normal === uncountables[_i]) {\n      return false;\n    }\n  }\n  return true;\n};\n\nmodule.exports = hasPlural;\n\n},{\"../../../data\":8}],92:[function(_dereq_,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Text = _dereq_('../../index');\nvar Noun = _dereq_('./noun');\n\nvar Nouns = function (_Text) {\n  _inherits(Nouns, _Text);\n\n  function Nouns() {\n    _classCallCheck(this, Nouns);\n\n    return _possibleConstructorReturn(this, (Nouns.__proto__ || Object.getPrototypeOf(Nouns)).apply(this, arguments));\n  }\n\n  _createClass(Nouns, [{\n    key: 'isPlural',\n    value: function isPlural() {\n      return this.list.map(function (ts) {\n        return ts.isPlural();\n      });\n    }\n  }, {\n    key: 'hasPlural',\n    value: function hasPlural() {\n      return this.list.map(function (ts) {\n        return ts.hasPlural();\n      });\n    }\n  }, {\n    key: 'toPlural',\n    value: function toPlural() {\n      this.list.forEach(function (ts) {\n        return ts.toPlural();\n      });\n      return this;\n    }\n  }, {\n    key: 'toSingular',\n    value: function toSingular() {\n      this.list.forEach(function (ts) {\n        return ts.toSingular();\n      });\n      return this;\n    }\n  }, {\n    key: 'data',\n    value: function data() {\n      return this.list.map(function (ts) {\n        return ts.data();\n      });\n    }\n  }], [{\n    key: 'find',\n    value: function find(r, n) {\n      r = r.clauses();\n      r = r.match('#Noun+');\n      r = r.not('#Pronoun');\n      r = r.not('(#Month|#WeekDay)'); //allow Durations, Holidays\n      if (typeof n === 'number') {\n        r = r.get(n);\n      }\n      r.list = r.list.map(function (ts) {\n        return new Noun(ts.terms, ts.lexicon, ts.refText, ts.refTerms);\n      });\n      return r;\n    }\n  }]);\n\n  return Nouns;\n}(Text);\n\nmodule.exports = Nouns;\n\n},{\"../../index\":44,\"./noun\":100}],93:[function(_dereq_,module,exports){\n'use strict';\n\nvar irregulars = _dereq_('../../../data').irregular_plurals;\nvar rules = _dereq_('./methods/data/indicators');\n\nvar knownPlural = {\n  i: false,\n  he: false,\n  she: false,\n  we: true,\n  they: true\n};\n\n//is it potentially plural?\nvar noPlural = ['Place', 'Value', 'Person', 'Month', 'WeekDay', 'RelativeDay', 'Holiday'];\n//first, try to guess based on existing tags\nvar couldEvenBePlural = function couldEvenBePlural(t) {\n  for (var i = 0; i < noPlural.length; i++) {\n    if (t.tag[noPlural[i]]) {\n      return false;\n    }\n  }\n  return true;\n};\n\nvar isPlural = function isPlural(t) {\n  var str = t.normal;\n\n  //whitelist a few easy ones\n  if (knownPlural[str] !== undefined) {\n    return knownPlural[str];\n  }\n  //inspect the existing tags to see if a plural is valid\n  if (!couldEvenBePlural(t)) {\n    return false;\n  }\n  //handle 'mayors of chicago'\n  var preposition = str.match(/([a-z]*) (of|in|by|for) [a-z]/);\n  if (preposition && preposition[1]) {\n    str = preposition[1];\n  }\n  // if it's a known irregular case\n  if (irregulars.toSingle[str]) {\n    return true;\n  }\n  if (irregulars.toPlural[str]) {\n    return false;\n  }\n  //check the suffix-type rules for indications\n  for (var i = 0; i < rules.plural_indicators.length; i++) {\n    if (str.match(rules.plural_indicators[i])) {\n      return true;\n    }\n  }\n  for (var _i = 0; _i < rules.singular_indicators.length; _i++) {\n    if (str.match(rules.singular_indicators[_i])) {\n      return false;\n    }\n  }\n  // a fallback 'looks check plural' rule..\n  if (str.match(/s$/) && !str.match(/ss$/) && str.length > 3) {\n    //needs some lovin'\n    return true;\n  }\n  return false;\n};\n\n// console.log(is_plural('octopus') === false)\n// console.log(is_plural('octopi') === true)\n// console.log(is_plural('eyebrow') === false)\n// console.log(is_plural('eyebrows') === true)\n// console.log(is_plural('child') === false)\n// console.log(is_plural('children') === true)\n// console.log(is_plural('days') === true)\n\nmodule.exports = isPlural;\n\n},{\"../../../data\":8,\"./methods/data/indicators\":95}],94:[function(_dereq_,module,exports){\n'use strict';\n\n//chooses an indefinite aricle 'a/an' for a word\n\nvar irregulars = {\n  'hour': 'an',\n  'heir': 'an',\n  'heirloom': 'an',\n  'honest': 'an',\n  'honour': 'an',\n  'honor': 'an',\n  'uber': 'an' //german u\n};\n//pronounced letters of acronyms that get a 'an'\nvar an_acronyms = {\n  a: true,\n  e: true,\n  f: true,\n  h: true,\n  i: true,\n  l: true,\n  m: true,\n  n: true,\n  o: true,\n  r: true,\n  s: true,\n  x: true\n};\n//'a' regexes\nvar a_regexs = [/^onc?e/i, //'wu' sound of 'o'\n/^u[bcfhjkqrstn][aeiou]/i, // 'yu' sound for hard 'u'\n/^eul/i];\n\nvar makeArticle = function makeArticle(t) {\n  var str = t.normal;\n\n  //explicit irregular forms\n  if (irregulars.hasOwnProperty(str)) {\n    return irregulars[str];\n  }\n  //spelled-out acronyms\n  var firstLetter = str.substr(0, 1);\n  if (t.isAcronym() && an_acronyms.hasOwnProperty(firstLetter)) {\n    return 'an';\n  }\n  //'a' regexes\n  for (var i = 0; i < a_regexs.length; i++) {\n    if (str.match(a_regexs[i])) {\n      return 'a';\n    }\n  }\n  //basic vowel-startings\n  if (str.match(/^[aeiou]/i)) {\n    return 'an';\n  }\n  return 'a';\n};\n\nmodule.exports = makeArticle;\n\n},{}],95:[function(_dereq_,module,exports){\n'use strict';\n//similar to plural/singularize rules, but not the same\n\nvar plural_indicators = [/(^v)ies$/i, /ises$/i, /ives$/i, /(antenn|formul|nebul|vertebr|vit)ae$/i, /(octop|vir|radi|nucle|fung|cact|stimul)i$/i, /(buffal|tomat|tornad)oes$/i, /(analy|ba|diagno|parenthe|progno|synop|the)ses$/i, /(vert|ind|cort)ices$/i, /(matr|append)ices$/i, /(x|ch|ss|sh|s|z|o)es$/i, /men$/i, /news$/i, /.tia$/i, /(^f)ves$/i, /(lr)ves$/i, /(^aeiouy|qu)ies$/i, /(m|l)ice$/i, /(cris|ax|test)es$/i, /(alias|status)es$/i, /ics$/i];\n\n//similar to plural/singularize rules, but not the same\nvar singular_indicators = [/(ax|test)is$/i, /(octop|vir|radi|nucle|fung|cact|stimul)us$/i, /(octop|vir)i$/i, /(rl)f$/i, /(alias|status)$/i, /(bu)s$/i, /(al|ad|at|er|et|ed|ad)o$/i, /(ti)um$/i, /(ti)a$/i, /sis$/i, /(?:(^f)fe|(lr)f)$/i, /hive$/i, /(^aeiouy|qu)y$/i, /(x|ch|ss|sh|z)$/i, /(matr|vert|ind|cort)(ix|ex)$/i, /(m|l)ouse$/i, /(m|l)ice$/i, /(antenn|formul|nebul|vertebr|vit)a$/i, /.sis$/i, /^(?!talis|.*hu)(.*)man$/i];\nmodule.exports = {\n  singular_indicators: singular_indicators,\n  plural_indicators: plural_indicators\n};\n\n},{}],96:[function(_dereq_,module,exports){\n'use strict';\n\n//patterns for turning 'bus' to 'buses'\nmodule.exports = [[/(ax|test)is$/i, '$1es'], [/(octop|vir|radi|nucle|fung|cact|stimul)us$/i, '$1i'], [/(octop|vir)i$/i, '$1i'], [/(kn|l|w)ife$/i, '$1ives'], [/^((?:ca|e|ha|(?:our|them|your)?se|she|wo)l|lea|loa|shea|thie)f$/i, '$1ves'], [/^(dwar|handkerchie|hoo|scar|whar)f$/i, '$1ves'], [/(alias|status)$/i, '$1es'], [/(bu)s$/i, '$1ses'], [/(al|ad|at|er|et|ed|ad)o$/i, '$1oes'], [/([ti])um$/i, '$1a'], [/([ti])a$/i, '$1a'], [/sis$/i, 'ses'], [/(hive)$/i, '$1s'], [/([^aeiouy]|qu)y$/i, '$1ies'], [/(x|ch|ss|sh|s|z)$/i, '$1es'], [/(matr|vert|ind|cort)(ix|ex)$/i, '$1ices'], [/([m|l])ouse$/i, '$1ice'], [/([m|l])ice$/i, '$1ice'], [/^(ox)$/i, '$1en'], [/^(oxen)$/i, '$1'], [/(quiz)$/i, '$1zes'], [/(antenn|formul|nebul|vertebr|vit)a$/i, '$1ae'], [/(sis)$/i, 'ses'], [/^(?!talis|.*hu)(.*)man$/i, '$1men'], [/(.*)/i, '$1s']].map(function (a) {\n  return {\n    reg: a[0],\n    repl: a[1]\n  };\n});\n\n},{}],97:[function(_dereq_,module,exports){\n'use strict';\n\n//patterns for turning 'dwarves' to 'dwarf'\nmodule.exports = [[/([^v])ies$/i, '$1y'], [/ises$/i, 'isis'], [/(kn|[^o]l|w)ives$/i, '$1ife'], [/^((?:ca|e|ha|(?:our|them|your)?se|she|wo)l|lea|loa|shea|thie)ves$/i, '$1f'], [/^(dwar|handkerchie|hoo|scar|whar)ves$/i, '$1f'], [/(antenn|formul|nebul|vertebr|vit)ae$/i, '$1a'], [/(octop|vir|radi|nucle|fung|cact|stimul)(i)$/i, '$1us'], [/(buffal|tomat|tornad)(oes)$/i, '$1o'], [/((a)naly|(b)a|(d)iagno|(p)arenthe|(p)rogno|(s)ynop|(t)he)ses$/i, '$1sis'], [/(vert|ind|cort)(ices)$/i, '$1ex'], [/(matr|append)(ices)$/i, '$1ix'], [/(x|ch|ss|sh|s|z|o)es$/i, '$1'], [/men$/i, 'man'], [/(n)ews$/i, '$1ews'], [/([ti])a$/i, '$1um'], [/([^aeiouy]|qu)ies$/i, '$1y'], [/(s)eries$/i, '$1eries'], [/(m)ovies$/i, '$1ovie'], [/([m|l])ice$/i, '$1ouse'], [/(cris|ax|test)es$/i, '$1is'], [/(alias|status)es$/i, '$1'], [/(ss)$/i, '$1'], [/(ics)$/i, '$1'], [/s$/i, '']].map(function (a) {\n  return {\n    reg: a[0],\n    repl: a[1]\n  };\n});\n\n},{}],98:[function(_dereq_,module,exports){\n'use strict';\n\nvar irregulars = _dereq_('../../../../data').irregular_plurals.toPlural;\nvar pluralRules = _dereq_('./data/pluralRules');\n\n//turn 'shoe' into 'shoes'\nvar pluralize = function pluralize(str) {\n  //irregular\n  if (irregulars[str]) {\n    return irregulars[str];\n  }\n\n  //inflect first word of preposition-phrase\n  if (str.match(/([a-z]*) (of|in|by|for) [a-z]/)) {\n    var first = (str.match(/^([a-z]*) (of|in|by|for) [a-z]/) || [])[1];\n    if (first) {\n      var better_first = pluralize(first); //recursive\n      return better_first + str.replace(first, '');\n    }\n  }\n\n  //regular rule-based inflector\n  for (var i = 0; i < pluralRules.length; i++) {\n    if (str.match(pluralRules[i].reg)) {\n      return str.replace(pluralRules[i].reg, pluralRules[i].repl);\n    }\n  }\n  return null;\n};\n\nmodule.exports = pluralize;\n\n},{\"../../../../data\":8,\"./data/pluralRules\":96}],99:[function(_dereq_,module,exports){\n'use strict';\n\nvar irregulars = _dereq_('../../../../data').irregular_plurals.toSingle;\nvar singleRules = _dereq_('./data/singleRules');\n\n//turn 'shoes' into 'shoe'\nvar toSingle = function toSingle(str) {\n  //irregular\n  if (irregulars[str]) {\n    return irregulars[str];\n  }\n  //inflect first word of preposition-phrase\n  if (str.match(/([a-z]*) (of|in|by|for) [a-z]/)) {\n    var first = (str.match(/^([a-z]*) (of|in|by|for) [a-z]/) || [])[1];\n    if (first) {\n      var better_first = toSingle(first); //recursive\n      return better_first + str.replace(first, '');\n    }\n  }\n\n  //regular rule-based inflector\n  for (var i = 0; i < singleRules.length; i++) {\n    if (str.match(singleRules[i].reg)) {\n      return str.replace(singleRules[i].reg, singleRules[i].repl);\n    }\n  }\n  return null;\n};\n\n// console.log(toSingle('gases') === 'gas')\nmodule.exports = toSingle;\n// console.log(toSingle('days'))\n\n},{\"../../../../data\":8,\"./data/singleRules\":97}],100:[function(_dereq_,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Terms = _dereq_('../../paths').Terms;\nvar _hasPlural = _dereq_('./hasPlural');\nvar _isPlural = _dereq_('./isPlural');\nvar makeArticle = _dereq_('./makeArticle');\nvar pluralize = _dereq_('./methods/pluralize');\nvar singularize = _dereq_('./methods/singularize');\n\nvar Noun = function (_Terms) {\n  _inherits(Noun, _Terms);\n\n  function Noun(arr, lexicon, refText, refTerms) {\n    _classCallCheck(this, Noun);\n\n    var _this = _possibleConstructorReturn(this, (Noun.__proto__ || Object.getPrototypeOf(Noun)).call(this, arr, lexicon, refText, refTerms));\n\n    _this.t = _this.terms[0];\n    return _this;\n  }\n\n  _createClass(Noun, [{\n    key: 'article',\n    value: function article() {\n      var t = this.t;\n      return makeArticle(t);\n    }\n  }, {\n    key: 'isPlural',\n    value: function isPlural() {\n      var t = this.t;\n      return _isPlural(t);\n    }\n  }, {\n    key: 'hasPlural',\n    value: function hasPlural() {\n      var t = this.t;\n      return _hasPlural(t);\n    }\n  }, {\n    key: 'toPlural',\n    value: function toPlural() {\n      var t = this.t;\n      if (_hasPlural(t) && !_isPlural(t)) {\n        t.text = pluralize(t.text);\n        t.unTag('Plural', 'toPlural');\n        t.tagAs('Singular', 'toPlural');\n      }\n      return this;\n    }\n  }, {\n    key: 'toSingular',\n    value: function toSingular() {\n      var t = this.t;\n      if (_isPlural(t)) {\n        t.text = singularize(t.text);\n        t.unTag('Plural', 'toSingular');\n        t.tagAs('Singular', 'toSingular');\n      }\n      return this;\n    }\n  }, {\n    key: 'data',\n    value: function data() {\n      return {\n        article: this.article(),\n        singular: this.toSingular().out('normal'),\n        plural: this.toPlural().out('normal')\n      };\n    }\n  }]);\n\n  return Noun;\n}(Terms);\n\nmodule.exports = Noun;\n\n},{\"../../paths\":56,\"./hasPlural\":91,\"./isPlural\":93,\"./makeArticle\":94,\"./methods/pluralize\":98,\"./methods/singularize\":99}],101:[function(_dereq_,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Text = _dereq_('../../index');\n\nvar Organizations = function (_Text) {\n  _inherits(Organizations, _Text);\n\n  function Organizations() {\n    _classCallCheck(this, Organizations);\n\n    return _possibleConstructorReturn(this, (Organizations.__proto__ || Object.getPrototypeOf(Organizations)).apply(this, arguments));\n  }\n\n  _createClass(Organizations, [{\n    key: 'data',\n    value: function data() {\n      return this.list.map(function (ts) {\n        return {\n          text: ts.out('text'),\n          normal: ts.out('normal')\n        };\n      });\n    }\n  }], [{\n    key: 'find',\n    value: function find(r, n) {\n      r = r.splitAfter('#Comma');\n      r = r.match('#Organization+');\n      if (typeof n === 'number') {\n        r = r.get(n);\n      }\n      return r;\n    }\n  }]);\n\n  return Organizations;\n}(Text);\n\nmodule.exports = Organizations;\n\n},{\"../../index\":44}],102:[function(_dereq_,module,exports){\n'use strict';\n\nvar log = _dereq_('../../paths').log;\n// make a statistical assumption about the gender of the person based on their given name\n// used for pronoun resolution only.\n// not intended for classification, or discrimination of people.\nvar gender = function gender(firstName) {\n  if (!firstName) {\n    return null;\n  }\n  //statistical guesses\n  if (firstName.match(/.(i|ee|[a|e]y|a)$/i)) {\n    //this is almost-always true\n    log.tell('Female-name suffix');\n    return 'Female';\n  }\n  if (firstName.match(/[ou]$/i)) {\n    //if it ends in a 'oh or uh', male\n    log.tell('Male-name suffix');\n    return 'Male';\n  }\n  if (firstName.match(/(nn|ll|tt)/i)) {\n    //if it has double-consonants, female\n    log.tell('Female-name consonant-doubling');\n    return 'Female';\n  }\n  // name not recognized, or recognized as of indeterminate gender\n  return null;\n};\nmodule.exports = gender;\n\n},{\"../../paths\":56}],103:[function(_dereq_,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Text = _dereq_('../../index');\nvar Person = _dereq_('./person');\n//this is used for pronoun and honorifics, and not intented for more-than grammatical use (see #117)\n\nvar People = function (_Text) {\n  _inherits(People, _Text);\n\n  function People() {\n    _classCallCheck(this, People);\n\n    return _possibleConstructorReturn(this, (People.__proto__ || Object.getPrototypeOf(People)).apply(this, arguments));\n  }\n\n  _createClass(People, [{\n    key: 'data',\n    value: function data() {\n      return this.list.map(function (ts) {\n        return ts.data();\n      });\n    }\n  }, {\n    key: 'pronoun',\n    value: function pronoun() {\n      return this.list.map(function (ts) {\n        return ts.pronoun();\n      });\n    }\n  }], [{\n    key: 'find',\n    value: function find(r, n) {\n      var people = r.clauses();\n      people = people.match('#Person+');\n      if (typeof n === 'number') {\n        people = people.get(n);\n      }\n      people.list = people.list.map(function (ts) {\n        return new Person(ts.terms, ts.lexicon, ts.refText, ts.refTerms);\n      });\n      return people;\n    }\n  }]);\n\n  return People;\n}(Text);\n\nmodule.exports = People;\n\n},{\"../../index\":44,\"./person\":104}],104:[function(_dereq_,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Terms = _dereq_('../../paths').Terms;\nvar _guessGender = _dereq_('./guessGender');\nvar log = _dereq_('../../paths').log;\n\nvar Person = function (_Terms) {\n  _inherits(Person, _Terms);\n\n  _createClass(Person, [{\n    key: 'data',\n    value: function data() {\n      return {\n        text: this.out('text'),\n        normal: this.out('normal'),\n        firstName: this.firstName.out('normal'),\n        middleName: this.middleName.out('normal'),\n        lastName: this.lastName.out('normal'),\n        genderGuess: this.guessGender(),\n        pronoun: this.pronoun(),\n        honorifics: this.honorifics.out('array')\n      };\n    }\n  }]);\n\n  function Person(arr, lexicon, refText, refTerms) {\n    var _ret;\n\n    _classCallCheck(this, Person);\n\n    var _this = _possibleConstructorReturn(this, (Person.__proto__ || Object.getPrototypeOf(Person)).call(this, arr, lexicon, refText, refTerms));\n\n    _this.firstName = _this.match('#FirstName+');\n    _this.middleName = _this.match('#Acronym+');\n    _this.honorifics = _this.match('#Honorific');\n    _this.lastName = _this.match('#LastName+');\n    //assume first-last\n    if (!_this.firstName.found && _this.length > 1) {\n      var m = _this.not('(#Acronym|#Honorific)');\n      _this.firstName = m.first();\n      _this.lastName = m.last();\n    }\n    return _ret = _this, _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(Person, [{\n    key: 'guessGender',\n    value: function guessGender() {\n      //try known honorifics\n      if (this.honorifics.match('(mr|mister|sr|sir|jr)').found) {\n        log.tell('known male honorific');\n        return 'Male';\n      }\n      if (this.honorifics.match('(mrs|miss|ms|misses|mme|mlle)').found) {\n        log.tell('known female honorific');\n        return 'Female';\n      }\n      //try known first-names\n      if (this.firstName.match('#MaleName').found) {\n        log.tell('known male name');\n        return 'Male';\n      }\n      if (this.firstName.match('#FemaleName').found) {\n        log.tell('known female name');\n        return 'Female';\n      }\n      //look-for regex clues\n      var str = this.firstName.out('normal');\n      return _guessGender(str);\n    }\n  }, {\n    key: 'pronoun',\n    value: function pronoun() {\n      var str = this.firstName.out('normal');\n      var g = this.guessGender(str);\n      if (g === 'Male') {\n        return 'he';\n      }\n      if (g === 'Female') {\n        return 'she';\n      }\n      return 'they';\n    }\n  }, {\n    key: 'root',\n    value: function root() {\n      var first = this.firstName.out('root');\n      var last = this.lastName.out('root');\n      if (first && last) {\n        return first + ' ' + last;\n      }\n      return last || first || this.out('root');\n    }\n  }]);\n\n  return Person;\n}(Terms);\n\nmodule.exports = Person;\n\n},{\"../../paths\":56,\"./guessGender\":102}],105:[function(_dereq_,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Text = _dereq_('../../index');\n\nvar PhoneNumbers = function (_Text) {\n  _inherits(PhoneNumbers, _Text);\n\n  function PhoneNumbers() {\n    _classCallCheck(this, PhoneNumbers);\n\n    return _possibleConstructorReturn(this, (PhoneNumbers.__proto__ || Object.getPrototypeOf(PhoneNumbers)).apply(this, arguments));\n  }\n\n  _createClass(PhoneNumbers, [{\n    key: 'data',\n    value: function data() {\n      return this.terms().list.map(function (ts) {\n        var t = ts.terms[0];\n        return {\n          text: t.text\n        };\n      });\n    }\n  }], [{\n    key: 'find',\n    value: function find(r) {\n      r = r.splitAfter('#Comma');\n      r = r.match('#PhoneNumber+');\n      if (typeof n === 'number') {\n        r = r.get(n);\n      }\n      return r;\n    }\n  }]);\n\n  return PhoneNumbers;\n}(Text);\n\nmodule.exports = PhoneNumbers;\n\n},{\"../../index\":44}],106:[function(_dereq_,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Text = _dereq_('../../index');\nvar Place = _dereq_('./place');\n\nvar Places = function (_Text) {\n  _inherits(Places, _Text);\n\n  function Places() {\n    _classCallCheck(this, Places);\n\n    return _possibleConstructorReturn(this, (Places.__proto__ || Object.getPrototypeOf(Places)).apply(this, arguments));\n  }\n\n  _createClass(Places, [{\n    key: 'data',\n    value: function data() {\n      return this.list.map(function (ts) {\n        return {\n          text: ts.out('text'),\n          normal: ts.out('normal')\n        };\n      });\n    }\n  }], [{\n    key: 'find',\n    value: function find(r, n) {\n      r = r.splitAfter('#Comma');\n      r = r.match('#Place+');\n      if (typeof n === 'number') {\n        r = r.get(n);\n      }\n      r.list = r.list.map(function (ts) {\n        return new Place(ts.terms, ts.lexicon, ts.refText, ts.refTerms);\n      });\n      return r;\n    }\n  }]);\n\n  return Places;\n}(Text);\n\nmodule.exports = Places;\n\n},{\"../../index\":44,\"./place\":107}],107:[function(_dereq_,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Terms = _dereq_('../../paths').Terms;\n\nvar Place = function (_Terms) {\n  _inherits(Place, _Terms);\n\n  function Place(arr, lexicon, refText, refTerms) {\n    _classCallCheck(this, Place);\n\n    var _this = _possibleConstructorReturn(this, (Place.__proto__ || Object.getPrototypeOf(Place)).call(this, arr, lexicon, refText, refTerms));\n\n    _this.city = _this.match('#City');\n    _this.country = _this.match('#Country');\n    return _this;\n  }\n\n  _createClass(Place, [{\n    key: 'root',\n    value: function root() {\n      return this.city.out('root');\n    }\n  }, {\n    key: 'isA',\n    get: function get() {\n      return 'Place';\n    }\n  }]);\n\n  return Place;\n}(Terms);\n\nmodule.exports = Place;\n\n},{\"../../paths\":56}],108:[function(_dereq_,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Text = _dereq_('../../index');\n\nvar Quotations = function (_Text) {\n  _inherits(Quotations, _Text);\n\n  function Quotations() {\n    _classCallCheck(this, Quotations);\n\n    return _possibleConstructorReturn(this, (Quotations.__proto__ || Object.getPrototypeOf(Quotations)).apply(this, arguments));\n  }\n\n  _createClass(Quotations, [{\n    key: 'data',\n    value: function data() {\n      return this.list.map(function (t) {\n        return {\n          text: t.out(),\n          normal: t.out('normal')\n        };\n      });\n    }\n  }], [{\n    key: 'find',\n    value: function find(r, n) {\n      r = r.match('#Quotation+');\n      if (typeof n === 'number') {\n        r = r.get(n);\n      }\n      return r;\n    }\n  }]);\n\n  return Quotations;\n}(Text);\n\nmodule.exports = Quotations;\n\n},{\"../../index\":44}],109:[function(_dereq_,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Text = _dereq_('../../index');\nvar Sentence = _dereq_('./sentence');\n\nvar Sentences = function (_Text) {\n  _inherits(Sentences, _Text);\n\n  function Sentences(arr, lexicon, reference) {\n    _classCallCheck(this, Sentences);\n\n    return _possibleConstructorReturn(this, (Sentences.__proto__ || Object.getPrototypeOf(Sentences)).call(this, arr, lexicon, reference));\n  }\n\n  _createClass(Sentences, [{\n    key: 'data',\n    value: function data() {\n      return this.list.map(function (ts) {\n        return ts.data();\n      });\n    }\n    /** conjugate the main/first verb*/\n\n  }, {\n    key: 'toPastTense',\n    value: function toPastTense() {\n      this.list = this.list.map(function (ts) {\n        ts = ts.toPastTense();\n        return new Sentence(ts.terms, ts.lexicon, ts.refText, ts.refTerms);\n      });\n      return this;\n    }\n  }, {\n    key: 'toPresentTense',\n    value: function toPresentTense() {\n      this.list = this.list.map(function (ts) {\n        ts = ts.toPresentTense();\n        return new Sentence(ts.terms, ts.lexicon, ts.refText, ts.refTerms);\n      });\n      return this;\n    }\n  }, {\n    key: 'toFutureTense',\n    value: function toFutureTense() {\n      this.list = this.list.map(function (ts) {\n        ts = ts.toFutureTense();\n        return new Sentence(ts.terms, ts.lexicon, ts.refText, ts.refTerms);\n      });\n      return this;\n    }\n    /** negative/positive */\n\n  }, {\n    key: 'toNegative',\n    value: function toNegative() {\n      this.list = this.list.map(function (ts) {\n        ts = ts.toNegative();\n        return new Sentence(ts.terms, ts.lexicon, ts.refText, ts.refTerms);\n      });\n      return this;\n    }\n  }, {\n    key: 'toPositive',\n    value: function toPositive() {\n      this.list = this.list.map(function (ts) {\n        ts = ts.toPositive();\n        return new Sentence(ts.terms, ts.lexicon, ts.refText, ts.refTerms);\n      });\n      return this;\n    }\n\n    /** look for 'was _ by' patterns */\n\n  }, {\n    key: 'isPassive',\n    value: function isPassive() {\n      this.list = this.list.filter(function (ts) {\n        return ts.isPassive();\n      });\n      return this;\n    }\n    /** add a word to the start */\n\n  }, {\n    key: 'prepend',\n    value: function prepend(str) {\n      this.list = this.list.map(function (ts) {\n        return ts.prepend(str);\n      });\n      return this;\n    }\n    /** add a word to the end */\n\n  }, {\n    key: 'append',\n    value: function append(str) {\n      this.list = this.list.map(function (ts) {\n        return ts.append(str);\n      });\n      return this;\n    }\n\n    /** convert between question/statement/exclamation*/\n\n  }, {\n    key: 'toExclamation',\n    value: function toExclamation() {\n      this.list.forEach(function (ts) {\n        ts.setPunctuation('!');\n      });\n      return this;\n    }\n  }, {\n    key: 'toQuestion',\n    value: function toQuestion() {\n      this.list.forEach(function (ts) {\n        ts.setPunctuation('?');\n      });\n      return this;\n    }\n  }, {\n    key: 'toStatement',\n    value: function toStatement() {\n      this.list.forEach(function (ts) {\n        ts.setPunctuation('.');\n      });\n      return this;\n    }\n  }], [{\n    key: 'find',\n    value: function find(r, n) {\n      r = r.all();\n      if (typeof n === 'number') {\n        r = r.get(n);\n      }\n      r.list = r.list.map(function (ts) {\n        return new Sentence(ts.terms, ts.lexicon, ts.refText, ts.refTerms);\n      });\n      // return new Text(r.list, r.lexicon, r.reference);\n      return r;\n    }\n  }]);\n\n  return Sentences;\n}(Text);\n\nmodule.exports = Sentences;\n\n},{\"../../index\":44,\"./sentence\":111}],110:[function(_dereq_,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Text = _dereq_('../index');\n\nvar Questions = function (_Text) {\n  _inherits(Questions, _Text);\n\n  function Questions() {\n    _classCallCheck(this, Questions);\n\n    return _possibleConstructorReturn(this, (Questions.__proto__ || Object.getPrototypeOf(Questions)).apply(this, arguments));\n  }\n\n  _createClass(Questions, null, [{\n    key: 'find',\n    value: function find(r, n) {\n      r = r.all();\n      if (typeof n === 'number') {\n        r = r.get(n);\n      }\n      var list = r.list.filter(function (ts) {\n        return ts.last().endPunctuation() === '?';\n      });\n      return new Text(list, this.lexicon, this.parent);\n    }\n  }]);\n\n  return Questions;\n}(Text);\n\nmodule.exports = Questions;\n\n},{\"../index\":109}],111:[function(_dereq_,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Terms = _dereq_('../../paths').Terms;\nvar _toNegative = _dereq_('./toNegative');\nvar _toPositive = _dereq_('./toPositive');\nvar Verb = _dereq_('../verbs/verb');\nvar insert = _dereq_('./smartInsert');\n\nvar Sentence = function (_Terms) {\n  _inherits(Sentence, _Terms);\n\n  function Sentence(arr, lexicon, refText, refTerms) {\n    _classCallCheck(this, Sentence);\n\n    return _possibleConstructorReturn(this, (Sentence.__proto__ || Object.getPrototypeOf(Sentence)).call(this, arr, lexicon, refText, refTerms));\n  }\n\n  _createClass(Sentence, [{\n    key: 'data',\n    value: function data() {\n      return {\n        text: this.out('text'),\n        normal: this.out('normal')\n      };\n    }\n    /** inflect the main/first noun*/\n\n  }, {\n    key: 'toSingular',\n    value: function toSingular() {\n      var nouns = this.match('#Noun').match('!#Pronoun').firstTerm();\n      nouns.things().toSingular();\n      return this;\n    }\n  }, {\n    key: 'toPlural',\n    value: function toPlural() {\n      var nouns = this.match('#Noun').match('!#Pronoun').firstTerm();\n      nouns.things().toPlural();\n      return this;\n    }\n\n    /** find the first important verbPhrase. returns a Term object */\n\n  }, {\n    key: 'mainVerb',\n    value: function mainVerb() {\n      var terms = this.match('(#Adverb|#Auxillary|#Verb|#Negative|#Particle)+')['if']('#Verb'); //this should be (much) smarter\n      if (terms.found) {\n        terms = terms.list[0].terms;\n        return new Verb(terms, this.lexicon, this.refText, this.refTerms);\n      }\n      return null;\n    }\n\n    /** sentence tense conversion**/\n\n  }, {\n    key: 'toPastTense',\n    value: function toPastTense() {\n      var verb = this.mainVerb();\n      if (verb) {\n        //this is really ugly..\n        var start = verb.out('normal');\n        verb.toPastTense();\n        // console.log(verb.parentTerms.out() + '!');\n        var end = verb.out('normal');\n        var r = this.parentTerms.replace(start, end);\n        return r;\n      }\n      return this;\n    }\n  }, {\n    key: 'toPresentTense',\n    value: function toPresentTense() {\n      var verb = this.mainVerb();\n      if (verb) {\n        var start = verb.out('normal');\n        verb.toPresentTense();\n        var end = verb.out('normal');\n        return this.parentTerms.replace(start, end);\n      }\n      return this;\n    }\n  }, {\n    key: 'toFutureTense',\n    value: function toFutureTense() {\n      var verb = this.mainVerb();\n      if (verb) {\n        var start = verb.out('normal');\n        verb.toFutureTense();\n        var end = verb.out('normal');\n        return this.parentTerms.replace(start, end);\n      }\n      return this;\n    }\n\n    /** negation **/\n\n  }, {\n    key: 'isNegative',\n    value: function isNegative() {\n      return this.match('#Negative').list.length === 1;\n    }\n  }, {\n    key: 'toNegative',\n    value: function toNegative() {\n      if (this.isNegative()) {\n        return this;\n      }\n      return _toNegative(this);\n    }\n  }, {\n    key: 'toPositive',\n    value: function toPositive() {\n      if (!this.isNegative()) {\n        return this;\n      }\n      return _toPositive(this);\n    }\n\n    /** smarter insert methods*/\n\n  }, {\n    key: 'append',\n    value: function append(str) {\n      return insert.append(this, str);\n    }\n  }, {\n    key: 'prepend',\n    value: function prepend(str) {\n      return insert.prepend(this, str);\n    }\n\n    /** punctuation */\n\n  }, {\n    key: 'setPunctuation',\n    value: function setPunctuation(punct) {\n      var last = this.terms[this.terms.length - 1];\n      last.setPunctuation(punct);\n    }\n  }, {\n    key: 'getPunctuation',\n    value: function getPunctuation() {\n      var last = this.terms[this.terms.length - 1];\n      return last.getPunctuation();\n    }\n    /** look for 'was _ by' patterns */\n\n  }, {\n    key: 'isPassive',\n    value: function isPassive() {\n      return this.match('was #Adverb? #PastTense #Adverb? by').found; //haha\n    }\n  }]);\n\n  return Sentence;\n}(Terms);\n\nmodule.exports = Sentence;\n\n},{\"../../paths\":56,\"../verbs/verb\":152,\"./smartInsert\":112,\"./toNegative\":114,\"./toPositive\":115}],112:[function(_dereq_,module,exports){\n'use strict';\n\n//sticking words at the start sentence-sensitive\n\nvar prepend = function prepend(ts, str) {\n  var firstTerm = ts.terms[0];\n  ts.insertAt(0, str);\n  //handle titlecase of first-word\n  if (firstTerm.text.match(/^[A-Z]/)) {\n    //is it titlecased because it should be?\n    if (firstTerm.needsTitleCase() === false) {\n      firstTerm.toLowerCase();\n    }\n    var newTerm = ts.terms[0];\n    newTerm.toTitleCase();\n  }\n  return ts;\n};\n\n//sticking words on end sentence-sensitive\nvar append = function append(ts, str) {\n  var endTerm = ts.terms[ts.terms.length - 1];\n  //move the sentence punctuation to the end\n  var punct = endTerm.endPunctuation();\n  if (punct) {\n    endTerm.killPunctuation();\n  }\n  ts.insertAt(ts.terms.length, str);\n  var newTerm = ts.terms[ts.terms.length - 1];\n  if (punct) {\n    newTerm.text += punct;\n  }\n  //move over sentence-ending whitespace too\n  if (endTerm.whitespace.after) {\n    newTerm.whitespace.after = endTerm.whitespace.after;\n    endTerm.whitespace.after = '';\n  }\n  return ts;\n};\n\nmodule.exports = {\n  append: append,\n  prepend: prepend\n};\n\n},{}],113:[function(_dereq_,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Text = _dereq_('../index');\n\nvar Statements = function (_Text) {\n  _inherits(Statements, _Text);\n\n  function Statements() {\n    _classCallCheck(this, Statements);\n\n    return _possibleConstructorReturn(this, (Statements.__proto__ || Object.getPrototypeOf(Statements)).apply(this, arguments));\n  }\n\n  _createClass(Statements, null, [{\n    key: 'find',\n    value: function find(r, n) {\n      r = r.all();\n      if (typeof n === 'number') {\n        r = r.get(n);\n      }\n      var list = r.list.filter(function (ts) {\n        return ts.last().endPunctuation() !== '?';\n      });\n      return new Text(list, this.lexicon, this.parent);\n    }\n  }]);\n\n  return Statements;\n}(Text);\n\nmodule.exports = Statements;\n\n},{\"../index\":109}],114:[function(_dereq_,module,exports){\n'use strict';\n\n//these terms are nicer ways to negate a sentence\n//ie. john always walks -> john always doesn't walk\n\nvar logicalNegate = {\n  'everyone': 'no one',\n  'everybody': 'nobody',\n  'someone': 'no one',\n  'somebody': 'nobody',\n  // everything:\"nothing\",\n  'always': 'never'\n};\n\n//different rule for i/we/they/you + infinitive\n//that is, 'i walk' -> 'i don\\'t walk', not 'I not walk'\nvar toNegative = function toNegative(ts) {\n  var lg = ts.match('(everyone|everybody|someone|somebody|always)').first();\n  if (lg.found && logicalNegate[lg.out('normal')]) {\n    var found = lg.out('normal');\n    // ts = ts.replace(found, logicalNegate[found]);\n    ts = ts.match(found).replaceWith(logicalNegate[found]).list[0];\n    return ts.parentTerms;\n  }\n  //negate the main verb of the sentence\n  var vb = ts.mainVerb();\n  if (vb) {\n    vb.toNegative();\n  }\n  return ts;\n};\nmodule.exports = toNegative;\n\n},{}],115:[function(_dereq_,module,exports){\n'use strict';\n\n//ie. john never walks -> john always walks\n//nobody/noone are ambiguous logically (somebody? / everybody?)\n\nvar logical = {\n  'never': 'always',\n  'nothing': 'everything'\n};\n\nvar toPositive = function toPositive(ts) {\n  var m = ts.match('(never|nothing)').first();\n  if (m.found) {\n    var str = m.out('normal');\n    if (logical[str]) {\n      ts = ts.match(str).replaceWith(logical[str]).list[0];\n      return ts.parentTerms;\n    }\n  }\n  //otherwise just remove 'not'\n  ts['delete']('#Negative');\n  return ts;\n};\nmodule.exports = toPositive;\n\n},{}],116:[function(_dereq_,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Text = _dereq_('../../index');\nvar Term = _dereq_('./term');\n\nvar Terms = function (_Text) {\n  _inherits(Terms, _Text);\n\n  function Terms() {\n    _classCallCheck(this, Terms);\n\n    return _possibleConstructorReturn(this, (Terms.__proto__ || Object.getPrototypeOf(Terms)).apply(this, arguments));\n  }\n\n  _createClass(Terms, [{\n    key: 'data',\n    value: function data() {\n      return this.list.map(function (ts) {\n        return ts.data();\n      });\n    }\n  }], [{\n    key: 'find',\n    value: function find(r, n) {\n      r = r.match('.');\n      if (typeof n === 'number') {\n        r = r.get(n);\n      }\n      r.list = r.list.map(function (ts) {\n        return new Term(ts.terms, ts.lexicon, ts.refText, ts.refTerms);\n      });\n      return r;\n    }\n  }]);\n\n  return Terms;\n}(Text);\n\nmodule.exports = Terms;\n\n},{\"../../index\":44,\"./term\":117}],117:[function(_dereq_,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Terms = _dereq_('../../paths').Terms;\nvar tagList = _dereq_('../../paths').tags;\nvar boringTags = {\n  Auxillary: true\n};\n\nvar Term = function (_Terms) {\n  _inherits(Term, _Terms);\n\n  function Term(arr, lexicon, refText, refTerms) {\n    _classCallCheck(this, Term);\n\n    var _this = _possibleConstructorReturn(this, (Term.__proto__ || Object.getPrototypeOf(Term)).call(this, arr, lexicon, refText, refTerms));\n\n    _this.t = _this.terms[0];\n    return _this;\n  }\n\n  _createClass(Term, [{\n    key: 'bestTag',\n    value: function bestTag() {\n      var tags = Object.keys(this.t.tag);\n      tags = tags.sort(); //alphabetical, first\n      //then sort by #of parent tags\n      tags = tags.sort(function (a, b) {\n        //bury the tags we dont want\n        if (boringTags[b] || !tagList[a] || !tagList[b]) {\n          return -1;\n        }\n        if (tagList[a].parents.length > tagList[b].parents.length) {\n          return -1;\n        }\n        return 1;\n      });\n      return tags[0];\n    }\n  }, {\n    key: 'data',\n    value: function data() {\n      var t = this.t;\n      return {\n        spaceBefore: t.whitespace.before,\n        text: t.text,\n        spaceAfter: t.whitespace.after,\n        normal: t.normal,\n        implicit: t.silent_term,\n        bestTag: this.bestTag(),\n        tags: Object.keys(t.tag)\n      };\n    }\n  }]);\n\n  return Term;\n}(Terms);\n\nmodule.exports = Term;\n\n},{\"../../paths\":56}],118:[function(_dereq_,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Text = _dereq_('../../index');\n// const Noun = require('./noun');\n\nvar Things = function (_Text) {\n  _inherits(Things, _Text);\n\n  function Things() {\n    _classCallCheck(this, Things);\n\n    return _possibleConstructorReturn(this, (Things.__proto__ || Object.getPrototypeOf(Things)).apply(this, arguments));\n  }\n\n  _createClass(Things, [{\n    key: 'data',\n    value: function data() {\n      return this.list.map(function (ts) {\n        return ts.data();\n      });\n    }\n  }], [{\n    key: 'find',\n    value: function find(r, n) {\n      r = r.clauses();\n      //find people/places/organizations\n      var yup = r.people();\n      yup.concat(r.places());\n      yup.concat(r.organizations());\n      //return them to normal ordering\n      yup.sort('chronological');\n      // yup.unique() //? not sure\n      if (typeof n === 'number') {\n        yup = yup.get(n);\n      }\n      return yup;\n    }\n  }]);\n\n  return Things;\n}(Text);\n\nmodule.exports = Things;\n\n},{\"../../index\":44}],119:[function(_dereq_,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Text = _dereq_('../../index');\n\nvar Urls = function (_Text) {\n  _inherits(Urls, _Text);\n\n  function Urls() {\n    _classCallCheck(this, Urls);\n\n    return _possibleConstructorReturn(this, (Urls.__proto__ || Object.getPrototypeOf(Urls)).apply(this, arguments));\n  }\n\n  _createClass(Urls, [{\n    key: 'data',\n    value: function data() {\n      return this.terms().list.map(function (ts) {\n        var t = ts.terms[0];\n        return {\n          text: t.text\n        };\n      });\n    }\n  }], [{\n    key: 'find',\n    value: function find(r, n) {\n      r = r.match('#Url');\n      if (typeof n === 'number') {\n        r = r.get(n);\n      }\n      return r;\n    }\n  }]);\n\n  return Urls;\n}(Text);\n\nmodule.exports = Urls;\n\n},{\"../../index\":44}],120:[function(_dereq_,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Text = _dereq_('../../index');\nvar Value = _dereq_('./value');\n\nvar Values = function (_Text) {\n  _inherits(Values, _Text);\n\n  function Values() {\n    _classCallCheck(this, Values);\n\n    return _possibleConstructorReturn(this, (Values.__proto__ || Object.getPrototypeOf(Values)).apply(this, arguments));\n  }\n\n  _createClass(Values, [{\n    key: 'data',\n    value: function data() {\n      return this.list.map(function (ts) {\n        return ts.data();\n      });\n    }\n  }, {\n    key: 'noDates',\n    value: function noDates() {\n      return this.not('#Date');\n    }\n    /** five -> 5 */\n\n  }, {\n    key: 'numbers',\n    value: function numbers() {\n      return this.list.map(function (ts) {\n        return ts.number();\n      });\n    }\n    /** five -> '5' */\n\n  }, {\n    key: 'toNumber',\n    value: function toNumber() {\n      this.list = this.list.map(function (ts) {\n        return ts.toNumber();\n      });\n      return this;\n    }\n    /**5 -> 'five' */\n\n  }, {\n    key: 'toTextValue',\n    value: function toTextValue() {\n      this.list = this.list.map(function (ts) {\n        return ts.toTextValue();\n      });\n      return this;\n    }\n    /**5th -> 5 */\n\n  }, {\n    key: 'toCardinal',\n    value: function toCardinal() {\n      this.list = this.list.map(function (ts) {\n        return ts.toCardinal();\n      });\n      return this;\n    }\n    /**5 -> 5th */\n\n  }, {\n    key: 'toOrdinal',\n    value: function toOrdinal() {\n      this.list = this.list.map(function (ts) {\n        return ts.toOrdinal();\n      });\n      return this;\n    }\n    /**5900 -> 5,900 */\n\n  }, {\n    key: 'toNiceNumber',\n    value: function toNiceNumber() {\n      this.list = this.list.map(function (ts) {\n        return ts.toNiceNumber();\n      });\n      return this;\n    }\n  }], [{\n    key: 'find',\n    value: function find(r, n) {\n      r = r.match('#Value+');\n      // r = r.match('#Value+ #Unit?');\n\n      //june 21st 1992 is two seperate values\n      r.splitOn('#Year');\n      // r.debug();\n      if (typeof n === 'number') {\n        r = r.get(n);\n      }\n      r.list = r.list.map(function (ts) {\n        return new Value(ts.terms, ts.lexicon, ts.refText, ts.refTerms);\n      });\n      return r;\n    }\n  }]);\n\n  return Values;\n}(Text);\n\nValues.prototype.clone = function () {\n  var list = this.list.map(function (ts) {\n    return ts.clone();\n  });\n  return new Values(list, this.lexicon);\n};\nmodule.exports = Values;\n\n},{\"../../index\":44,\"./value\":132}],121:[function(_dereq_,module,exports){\n'use strict';\n\nvar toNumber = _dereq_('../toNumber');\n\n//turn a number like 5 into an ordinal like 5th\nvar numOrdinal = function numOrdinal(ts) {\n  var num = toNumber(ts);\n  if (!num && num !== 0) {\n    return null;\n  }\n  //the teens are all 'th'\n  var tens = num % 100;\n  if (tens > 10 && tens < 20) {\n    return '' + num + 'th';\n  }\n  //the rest of 'em\n  var mapping = {\n    0: 'th',\n    1: 'st',\n    2: 'nd',\n    3: 'rd'\n  };\n  var str = '' + num;\n  var last = str.slice(str.length - 1, str.length);\n  if (mapping[last]) {\n    str += mapping[last];\n  } else {\n    str += 'th';\n  }\n  return str;\n};\n\nmodule.exports = numOrdinal;\n\n},{\"../toNumber\":127}],122:[function(_dereq_,module,exports){\n'use strict';\n\nmodule.exports = _dereq_('../../paths');\n\n},{\"../../paths\":56}],123:[function(_dereq_,module,exports){\n'use strict';\n\nvar toNumber = _dereq_('../toNumber');\nvar toText = _dereq_('../toText');\nvar ordinalWord = _dereq_('../../../paths').data.ordinalMap.toOrdinal;\n//\nvar textOrdinal = function textOrdinal(ts) {\n  var num = toNumber(ts);\n  var words = toText(num);\n  //convert the last number to an ordinal\n  var last = words[words.length - 1];\n  words[words.length - 1] = ordinalWord[last] || last;\n  return words.join(' ');\n};\n\nmodule.exports = textOrdinal;\n\n},{\"../../../paths\":56,\"../toNumber\":127,\"../toText\":131}],124:[function(_dereq_,module,exports){\n'use strict';\n\nvar niceNumber = function niceNumber(num) {\n  if (!num && num !== 0) {\n    return null;\n  }\n  num = '' + num;\n  var x = num.split('.');\n  var x1 = x[0];\n  var x2 = x.length > 1 ? '.' + x[1] : '';\n  var rgx = /(\\d+)(\\d{3})/;\n  while (rgx.test(x1)) {\n    x1 = x1.replace(rgx, '$1' + ',' + '$2');\n  }\n  return x1 + x2;\n};\nmodule.exports = niceNumber;\n\n},{}],125:[function(_dereq_,module,exports){\n'use strict';\n\nvar p = _dereq_('../paths');\nvar numbers = p.data.numbers;\nvar fns = p.fns;\n\n//setup number-word data\nvar ones = fns.extend(numbers.ordinal.ones, numbers.cardinal.ones);\nvar teens = fns.extend(numbers.ordinal.teens, numbers.cardinal.teens);\nvar tens = fns.extend(numbers.ordinal.tens, numbers.cardinal.tens);\nvar multiples = fns.extend(numbers.ordinal.multiples, numbers.cardinal.multiples);\n\nmodule.exports = {\n  ones: ones,\n  teens: teens,\n  tens: tens,\n  multiples: multiples\n};\n\n},{\"../paths\":122}],126:[function(_dereq_,module,exports){\n'use strict';\n\n//support global multipliers, like 'half-million' by doing 'million' then multiplying by 0.5\n\nvar findModifiers = function findModifiers(str) {\n  var mults = [{\n    reg: /^(minus|negative)[\\s\\-]/i,\n    mult: -1\n  }, {\n    reg: /^(a\\s)?half[\\s\\-](of\\s)?/i,\n    mult: 0.5\n  }];\n  for (var i = 0; i < mults.length; i++) {\n    if (str.match(mults[i].reg)) {\n      return {\n        amount: mults[i].mult,\n        str: str.replace(mults[i].reg, '')\n      };\n    }\n  }\n  return {\n    amount: 1,\n    str: str\n  };\n};\n\nmodule.exports = findModifiers;\n\n},{}],127:[function(_dereq_,module,exports){\n'use strict';\n\nvar parseNumeric = _dereq_('./parseNumeric');\nvar findModifiers = _dereq_('./findModifiers');\nvar words = _dereq_('./data');\nvar isValid = _dereq_('./validate');\nvar parseDecimals = _dereq_('./parseDecimals');\nvar log = _dereq_('../paths').log;\nvar path = 'parseNumber';\n\n//some numbers we know\nvar casualForms = {\n  // 'a few': 3,\n  'a couple': 2,\n  'a dozen': 12,\n  'two dozen': 24,\n  'zero': 0\n};\n\n// a 'section' is something like 'fifty-nine thousand'\n// turn a section into something we can add to - like 59000\nvar section_sum = function section_sum(obj) {\n  // console.log(obj);\n  return Object.keys(obj).reduce(function (sum, k) {\n    sum += obj[k];\n    return sum;\n  }, 0);\n};\n\nvar alreadyNumber = function alreadyNumber(ts) {\n  for (var i = 0; i < ts.terms.length; i++) {\n    if (!ts.terms[i].tag.NumericValue) {\n      return false;\n    }\n  }\n  return true;\n};\n\n//turn a string into a number\nvar parse = function parse(ts) {\n  log.here('parseNumber', path);\n  var str = ts.out('normal');\n  //convert some known-numbers\n  if (casualForms[str] !== undefined) {\n    return casualForms[str];\n  }\n  //'a/an' is 1\n  if (str === 'a' || str === 'an') {\n    return 1;\n  }\n  //handle a string of mostly numbers\n  if (alreadyNumber(ts)) {\n    return parseNumeric(ts.out('normal'));\n  }\n  var modifier = findModifiers(str);\n  str = modifier.str;\n  var last_mult = null;\n  var has = {};\n  var sum = 0;\n  var isNegative = false;\n  var terms = str.split(/[ -]/);\n  // console.log(terms);\n  for (var i = 0; i < terms.length; i++) {\n    var w = terms[i];\n    // console.log(i + '  - ' + w);\n    if (!w || w === 'and') {\n      continue;\n    }\n    if (w === '-' || w === 'negative') {\n      isNegative = true;\n      continue;\n    }\n    if (w.startsWith('-')) {\n      isNegative = true;\n      w = w.substr(1);\n    }\n    //decimal mode\n    if (w === 'point') {\n      sum += section_sum(has);\n      sum += parseDecimals(terms.slice(i + 1, terms.length));\n      sum *= modifier.amount;\n      return sum;\n    }\n    //improper fraction\n    var improperFractionMatch = w.match(/^([0-9,\\. ]+)\\/([0-9,\\. ]+)$/);\n    if (improperFractionMatch) {\n      log.here('fractionMath', path);\n      var num = parseFloat(improperFractionMatch[1].replace(/[, ]/g, ''));\n      var denom = parseFloat(improperFractionMatch[2].replace(/[, ]/g, ''));\n      if (denom) {\n        sum += num / denom || 0;\n      }\n      continue;\n    }\n    //prevent mismatched units, like 'seven eleven'\n    if (!isValid(w, has)) {\n      log.tell('invalid state', path);\n      log.tell(has, path);\n      return null;\n    }\n    //buildup section, collect 'has' values\n    if (w.match(/^[0-9\\.]+$/)) {\n      has['ones'] = parseFloat(w, 10); //not technically right\n    } else if (words.ones[w]) {\n      has['ones'] = words.ones[w];\n    } else if (words.teens[w]) {\n      has['teens'] = words.teens[w];\n    } else if (words.tens[w]) {\n      has['tens'] = words.tens[w];\n    } else if (words.multiples[w]) {\n      var mult = words.multiples[w];\n      //something has gone wrong : 'two hundred five hundred'\n      if (mult === last_mult) {\n        log.tell('invalid multiplier', path);\n        return null;\n      }\n      //support 'hundred thousand'\n      //this one is tricky..\n      if (mult === 100 && terms[i + 1]) {\n        // has['hundreds']=\n        var w2 = terms[i + 1];\n        if (words.multiples[w2]) {\n          mult *= words.multiples[w2]; //hundredThousand/hundredMillion\n          i += 1;\n        }\n      }\n      //natural order of things\n      //five thousand, one hundred..\n      if (last_mult === null || mult < last_mult) {\n        sum += (section_sum(has) || 1) * mult;\n        last_mult = mult;\n        has = {};\n      } else {\n        //maybe hundred .. thousand\n        sum += section_sum(has);\n        last_mult = mult;\n        sum = (sum || 1) * mult;\n        has = {};\n      }\n    }\n    // console.log(w + '=-------');\n    // console.log(has);\n  }\n  //dump the remaining has values\n  sum += section_sum(has);\n  //post-process add modifier\n  sum *= modifier.amount;\n  sum *= isNegative ? -1 : 1;\n  //dont return 0, if it went straight-through\n  if (sum === 0) {\n    return null;\n  }\n  return sum;\n};\n\nmodule.exports = parse;\n\n},{\"../paths\":122,\"./data\":125,\"./findModifiers\":126,\"./parseDecimals\":128,\"./parseNumeric\":129,\"./validate\":130}],128:[function(_dereq_,module,exports){\n'use strict';\n\nvar words = _dereq_('./data');\n\n//concatenate into a string with leading '0.'\nvar parseDecimals = function parseDecimals(arr) {\n  var str = '0.';\n  for (var i = 0; i < arr.length; i++) {\n    var w = arr[i];\n    if (words.ones[w]) {\n      str += words.ones[w];\n    } else if (words.teens[w]) {\n      str += words.teens[w];\n    } else if (words.tens[w]) {\n      str += words.tens[w];\n    } else if (w.match(/^[0-9]$/)) {\n      str += w;\n    } else {\n      return 0;\n    }\n  }\n  return parseFloat(str);\n};\n\nmodule.exports = parseDecimals;\n\n},{\"./data\":125}],129:[function(_dereq_,module,exports){\n'use strict';\n//parse a string like \"4,200.1\" into Number 4200.1\n\nvar parseNumeric = function parseNumeric(str) {\n  //remove ordinal - 'th/rd'\n  str = str.replace(/1st$/, '1');\n  str = str.replace(/2nd$/, '2');\n  str = str.replace(/3rd$/, '3');\n  str = str.replace(/([4567890])r?th$/, '$1');\n  //remove prefixes\n  str = str.replace(/^[$€¥£¢]/, '');\n  //remove suffixes\n  str = str.replace(/[%$€¥£¢]$/, '');\n  //remove commas\n  str = str.replace(/,/g, '');\n  //split '5kg' from '5'\n  str = str.replace(/([0-9])([a-z]{1,2})$/, '$1');\n  return parseFloat(str);\n};\n\nmodule.exports = parseNumeric;\n\n},{}],130:[function(_dereq_,module,exports){\n'use strict';\n\nvar words = _dereq_('./data');\n\n//prevent things like 'fifteen ten', and 'five sixty'\nvar isValid = function isValid(w, has) {\n  if (words.ones[w]) {\n    if (has.ones || has.teens) {\n      return false;\n    }\n  } else if (words.teens[w]) {\n    if (has.ones || has.teens || has.tens) {\n      return false;\n    }\n  } else if (words.tens[w]) {\n    if (has.ones || has.teens || has.tens) {\n      return false;\n    }\n  }\n  return true;\n};\nmodule.exports = isValid;\n\n},{\"./data\":125}],131:[function(_dereq_,module,exports){\n'use strict';\n// turns an integer/float into a textual number, like 'fifty-five'\n\n//turn number into an array of magnitudes, like [[5, million], [2, hundred]]\n\nvar breakdown_magnitudes = function breakdown_magnitudes(num) {\n  var working = num;\n  var have = [];\n  var sequence = [[1000000000, 'million'], [100000000, 'hundred million'], [1000000, 'million'], [100000, 'hundred thousand'], [1000, 'thousand'], [100, 'hundred'], [1, 'one']];\n  sequence.forEach(function (a) {\n    if (num > a[0]) {\n      var howmany = Math.floor(working / a[0]);\n      working -= howmany * a[0];\n      if (howmany) {\n        have.push({\n          unit: a[1],\n          count: howmany\n        });\n      }\n    }\n  });\n  return have;\n};\n\n//turn numbers from 100-0 into their text\nvar breakdown_hundred = function breakdown_hundred(num) {\n  var tens_mapping = [['ninety', 90], ['eighty', 80], ['seventy', 70], ['sixty', 60], ['fifty', 50], ['forty', 40], ['thirty', 30], ['twenty', 20]];\n  var ones_mapping = ['', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'ten', 'eleven', 'twelve', 'thirteen', 'fourteen', 'fifteen', 'sixteen', 'seventeen', 'eighteen', 'nineteen'];\n  var arr = [];\n  for (var i = 0; i < tens_mapping.length; i++) {\n    if (num >= tens_mapping[i][1]) {\n      num -= tens_mapping[i][1];\n      arr.push(tens_mapping[i][0]);\n    }\n  }\n  //(hopefully) we should only have 20-0 now\n  if (ones_mapping[num]) {\n    arr.push(ones_mapping[num]);\n  }\n  return arr;\n};\n\n/** print-out 'point eight nine'*/\nvar handle_decimal = function handle_decimal(num) {\n  var names = ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'];\n  var arr = [];\n  //parse it out like a string, because js math is such shit\n  var decimal = ('' + num).match(/\\.([0-9]+)/);\n  if (!decimal || !decimal[0]) {\n    return arr;\n  }\n  arr.push('point');\n  var decimals = decimal[0].split('');\n  for (var i = 0; i < decimals.length; i++) {\n    arr.push(names[decimals[i]]);\n  }\n  return arr;\n};\n\n/** turns an integer into a textual number */\nvar to_text = function to_text(num) {\n  var arr = [];\n  //handle negative numbers\n  if (num < 0) {\n    arr.push('negative');\n    num = Math.abs(num);\n  }\n  //break-down into units, counts\n  var units = breakdown_magnitudes(num);\n  //build-up the string from its components\n  for (var i = 0; i < units.length; i++) {\n    var unit_name = units[i].unit;\n    if (unit_name === 'one') {\n      unit_name = '';\n      //put an 'and' in here\n      if (arr.length > 1) {\n        arr.push('and');\n      }\n    }\n    arr = arr.concat(breakdown_hundred(units[i].count));\n    arr.push(unit_name);\n  }\n  //also support decimals - 'point eight'\n  arr = arr.concat(handle_decimal(num));\n  //remove empties\n  arr = arr.filter(function (s) {\n    return s;\n  });\n  if (arr.length === 0) {\n    arr[0] = 'zero';\n  }\n  return arr;\n};\n\nmodule.exports = to_text;\n\n// console.log(to_text(-1000.8));\n\n},{}],132:[function(_dereq_,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar paths = _dereq_('../../paths');\nvar Terms = paths.Terms;\nvar parse = _dereq_('./toNumber');\nvar toText = _dereq_('./toText');\nvar _toNiceNumber = _dereq_('./toNiceNumber');\nvar numOrdinal = _dereq_('./numOrdinal');\nvar textOrdinal = _dereq_('./textOrdinal');\n\nvar isOrdinal = function isOrdinal(ts) {\n  var t = ts.terms[ts.terms.length - 1];\n  if (!t) {\n    return false;\n  }\n  return t.tag.Ordinal === true;\n};\nvar isText = function isText(ts) {\n  for (var i = 0; i < ts.terms.length; i++) {\n    if (ts.terms[i].tag.TextValue) {\n      return true;\n    }\n  }\n  return false;\n};\nvar isNumber = function isNumber(ts) {\n  for (var i = 0; i < ts.terms.length; i++) {\n    var t = ts.terms[i];\n    if (t.tag.TextValue || t.tag.NiceNumber || !t.tag.NumericValue) {\n      return false;\n    }\n  }\n  return true;\n};\n\nvar Value = function (_Terms) {\n  _inherits(Value, _Terms);\n\n  function Value(arr, lexicon, refText, refTerms) {\n    _classCallCheck(this, Value);\n\n    var _this = _possibleConstructorReturn(this, (Value.__proto__ || Object.getPrototypeOf(Value)).call(this, arr, lexicon, refText, refTerms));\n\n    _this.val = _this.match('#Value+').list[0];\n    _this.unit = _this.match('#Unit$').list[0];\n    return _this;\n  }\n\n  _createClass(Value, [{\n    key: 'number',\n    value: function number() {\n      var num = parse(this.val);\n      return num;\n    }\n    /** five -> '5' */\n\n  }, {\n    key: 'toNumber',\n    value: function toNumber() {\n      var val = this.val;\n      // this.debug();\n      //is already\n      if (isNumber(val)) {\n        return this;\n      }\n      //otherwise,\n      if (isOrdinal(val)) {\n        var num = numOrdinal(val);\n        this.replaceWith(num, 'Value');\n      } else {\n        var _num = parse(val);\n        // console.log(num);\n        if (_num !== null) {\n          this.replaceWith('' + _num, 'Value');\n        }\n      }\n      return this;\n    }\n    /**5 -> 'five' */\n\n  }, {\n    key: 'toTextValue',\n    value: function toTextValue() {\n      var val = this.val;\n      //is already\n      if (isText(val)) {\n        return this;\n      }\n      //otherwise, parse it\n      if (isOrdinal(val)) {\n        var _str = textOrdinal(val);\n        return this.replaceWith(_str, 'Value');\n      }\n      var num = '' + parse(val);\n      var str = toText(num).join(' ');\n      this.replaceWith(str, 'Value');\n      return this;\n    }\n\n    /**5th -> 5 */\n\n  }, {\n    key: 'toCardinal',\n    value: function toCardinal() {\n      var val = this.val;\n      //already\n      if (!isOrdinal(val)) {\n        return this;\n      }\n      //otherwise,\n      if (isText(val)) {\n        var _num2 = '' + parse(val);\n        var str = toText(_num2).join(' ');\n        return this.replaceWith(str, 'Value');\n      }\n      var num = '' + parse(val);\n      return this.replaceWith(num, 'Value');\n    }\n\n    /**5 -> 5th */\n\n  }, {\n    key: 'toOrdinal',\n    value: function toOrdinal() {\n      var val = this.val;\n      //already\n      if (isOrdinal(val)) {\n        return this;\n      }\n      //otherwise,\n      if (isText(val)) {\n        var str = textOrdinal(val);\n        this.replaceWith(str, 'Value');\n      } else {\n        //number-ordinal\n        var _str2 = numOrdinal(val);\n        this.replaceWith(_str2, 'Value');\n      }\n      return this;\n    }\n\n    /**5900 -> 5,900 */\n\n  }, {\n    key: 'toNiceNumber',\n    value: function toNiceNumber() {\n      var num = parse(this);\n      var str = _toNiceNumber(num);\n      this.replaceWith(str, 'Value');\n      return this;\n    }\n  }, {\n    key: 'data',\n    value: function data() {\n      var numV = this.clone().toNumber();\n      var txtV = this.clone().toTextValue();\n      var obj = {\n        NumericValue: {\n          cardinal: numV.toCardinal().out('text'),\n          ordinal: numV.toOrdinal().out('text'),\n          nicenumber: this.toNiceNumber().out('text')\n        },\n        TextValue: {\n          cardinal: txtV.toCardinal().out('text'),\n          ordinal: txtV.toOrdinal().out('text')\n        },\n        unit: ''\n      };\n      if (this.unit) {\n        obj.unit = this.unit.out('text');\n      }\n      obj.number = this.number();\n      return obj;\n    }\n  }]);\n\n  return Value;\n}(Terms);\n\nValue.prototype.clone = function () {\n  var terms = this.terms.map(function (t) {\n    return t.clone();\n  });\n  return new Value(terms, this.lexicon, this.refText, this.refTerms);\n};\nmodule.exports = Value;\n\n},{\"../../paths\":56,\"./numOrdinal\":121,\"./textOrdinal\":123,\"./toNiceNumber\":124,\"./toNumber\":127,\"./toText\":131}],133:[function(_dereq_,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Text = _dereq_('../../index');\nvar Verb = _dereq_('./verb');\n\nvar Verbs = function (_Text) {\n  _inherits(Verbs, _Text);\n\n  function Verbs(arr, lexicon, reference) {\n    _classCallCheck(this, Verbs);\n\n    return _possibleConstructorReturn(this, (Verbs.__proto__ || Object.getPrototypeOf(Verbs)).call(this, arr, lexicon, reference));\n  }\n\n  _createClass(Verbs, [{\n    key: 'data',\n    value: function data() {\n      return this.list.map(function (ts) {\n        return ts.data();\n      });\n    }\n  }, {\n    key: 'conjugation',\n    value: function conjugation(verbose) {\n      return this.list.map(function (ts) {\n        return ts.conjugation(verbose);\n      });\n    }\n  }, {\n    key: 'conjugate',\n    value: function conjugate(verbose) {\n      return this.list.map(function (ts) {\n        return ts.conjugate(verbose);\n      });\n    }\n\n    /** plural/singular **/\n\n  }, {\n    key: 'isPlural',\n    value: function isPlural() {\n      this.list = this.list.filter(function (ts) {\n        return ts.isPlural();\n      });\n      return this;\n    }\n  }, {\n    key: 'isSingular',\n    value: function isSingular() {\n      this.list = this.list.filter(function (ts) {\n        return !ts.isPlural();\n      });\n      return this;\n    }\n\n    /** negation **/\n\n  }, {\n    key: 'isNegative',\n    value: function isNegative() {\n      this.list = this.list.filter(function (ts) {\n        return ts.isNegative();\n      });\n      return this;\n    }\n  }, {\n    key: 'isPositive',\n    value: function isPositive() {\n      this.list = this.list.filter(function (ts) {\n        return !ts.isNegative();\n      });\n      return this;\n    }\n  }, {\n    key: 'toNegative',\n    value: function toNegative() {\n      this.list = this.list.map(function (ts) {\n        return ts.toNegative();\n      });\n      return this;\n    }\n  }, {\n    key: 'toPositive',\n    value: function toPositive() {\n      this.list.forEach(function (ts) {\n        ts.toPositive();\n      });\n      return this;\n    }\n\n    /** tense **/\n\n  }, {\n    key: 'toPastTense',\n    value: function toPastTense() {\n      this.list.forEach(function (ts) {\n        ts.toPastTense();\n      });\n      return this;\n    }\n  }, {\n    key: 'toPresentTense',\n    value: function toPresentTense() {\n      this.list.forEach(function (ts) {\n        ts.toPresentTense();\n      });\n      return this;\n    }\n  }, {\n    key: 'toFutureTense',\n    value: function toFutureTense() {\n      this.list.forEach(function (ts) {\n        ts.toFutureTense();\n      });\n      return this;\n    }\n  }, {\n    key: 'toInfinitive',\n    value: function toInfinitive() {\n      this.list.forEach(function (ts) {\n        ts.toInfinitive();\n      });\n      return this;\n    }\n  }, {\n    key: 'asAdjective',\n    value: function asAdjective() {\n      return this.list.map(function (ts) {\n        return ts.asAdjective();\n      });\n    }\n  }], [{\n    key: 'find',\n    value: function find(r, n) {\n      r = r.match('(#Adverb|#Auxillary|#Verb|#Negative|#Particle)+')['if']('#Verb'); //this should be (much) smarter\n      r = r.splitAfter('#Comma');\n      if (typeof n === 'number') {\n        r = r.get(n);\n      }\n      r.list = r.list.map(function (ts) {\n        return new Verb(ts.terms, ts.lexicon, ts.refText, ts.refTerms);\n      });\n      return new Text(r.list, this.lexicon, this.parent);\n    }\n  }]);\n\n  return Verbs;\n}(Text);\n\nmodule.exports = Verbs;\n\n},{\"../../index\":44,\"./verb\":152}],134:[function(_dereq_,module,exports){\n'use strict';\n\nvar predict = _dereq_('./methods/predict');\n\n//'walking' - aka progressive\nvar isContinuous = function isContinuous(ts) {\n  return ts.match('#Gerund').found;\n};\n\n//will not walk\nvar isNegative = function isNegative(ts) {\n  var negs = ts.match('#Negative').list;\n  if (negs.length === 2) {\n    return false;\n  }\n  if (negs.length === 1) {\n    return true;\n  }\n  return false;\n};\n\n//been walked by..\nvar isPassive = function isPassive(ts) {\n  if (ts.match('is being #PastTense').found) {\n    return true;\n  }\n  if (ts.match('(had|has) been #PastTense').found) {\n    return true;\n  }\n  if (ts.match('will have been #PastTense').found) {\n    return true;\n  }\n  return false;\n};\n\n//had walked\nvar isPerfect = function isPerfect(ts) {\n  if (ts.match('^(had|have) #PastTense')) {\n    return true;\n  }\n  return false;\n};\n\n//should walk, could walk\nvar getModal = function getModal(ts) {\n  var modal = ts.match('#Modal');\n  if (!modal.found) {\n    return null;\n  }\n  return modal.out('normal');\n};\n\n//past/present/future\nvar getTense = function getTense(ts) {\n  //look at the preceding words\n  if (ts.auxillary.found) {\n    //'will'\n    if (ts.match('will have #PastTense').found) {\n      return 'Past';\n    }\n    if (ts.auxillary.match('will').found) {\n      return 'Future';\n    }\n    //'was'\n    if (ts.auxillary.match('was').found) {\n      return 'Past';\n    }\n  }\n  //look at the main verb tense\n  if (ts.verb) {\n    var tenses = {\n      PastTense: 'Past',\n      FutureTense: 'Future',\n      FuturePerfect: 'Future'\n    };\n    var tense = predict(ts.verb); //yikes\n    return tenses[tense] || 'Present';\n  }\n  return 'Present';\n};\n\n// const isImperative = function(ts) {};\n// const isConditional = function(ts) {};\n\n// detect signals in auxillary verbs\n// 'will' -> future, 'have'->perfect, modals, negatives, adverbs\nvar interpret = function interpret(ts) {\n  var isNeg = isNegative(ts);\n  // let aux = ts.auxillary.clone();\n  // aux = aux.not('(#Negative|#Adverb)');\n  var obj = {\n    negative: isNeg,\n    continuous: isContinuous(ts),\n    passive: isPassive(ts),\n    perfect: isPerfect(ts),\n    modal: getModal(ts),\n    tense: getTense(ts)\n  };\n  return obj;\n};\nmodule.exports = interpret;\n\n},{\"./methods/predict\":146}],135:[function(_dereq_,module,exports){\n'use strict';\n\nvar checkIrregulars = _dereq_('./irregulars');\nvar suffixPass = _dereq_('./suffixes');\nvar toActor = _dereq_('./toActor');\nvar toAdjective = _dereq_('./toAdjective');\nvar generic = _dereq_('./generic');\nvar predict = _dereq_('../predict');\nvar toInfinitive = _dereq_('../toInfinitive');\nvar toBe = _dereq_('./toBe');\n\n//turn a verb into all it's forms\nvar conjugate = function conjugate(t, verbose) {\n\n  //handle is/was/will-be specially\n  if (t.normal === 'is' || t.normal === 'was' || t.normal === 'will') {\n    return toBe();\n  }\n\n  //dont conjugate didn't\n  if (t.tag.Contraction) {\n    t.text = t.silent_term;\n  }\n  var all = {\n    PastTense: null,\n    PresentTense: null,\n    // FutureTense: null,\n    Infinitive: null,\n    Gerund: null,\n    Actor: null\n  };\n  //first, get its current form\n  var form = predict(t);\n  if (form) {\n    all[form] = t.normal;\n  }\n  if (form !== 'Infinitive') {\n    all['Infinitive'] = toInfinitive(t, verbose) || '';\n  }\n  //check irregular forms\n  var irregObj = checkIrregulars(all['Infinitive']) || {};\n  Object.keys(irregObj).forEach(function (k) {\n    if (irregObj[k] && !all[k]) {\n      all[k] = irregObj[k];\n    }\n  });\n  //ok, send this infinitive to all conjugators\n  var inf = all['Infinitive'] || t.normal;\n\n  //check suffix rules\n  var suffObj = suffixPass(inf);\n  Object.keys(suffObj).forEach(function (k) {\n    if (suffObj[k] && !all[k]) {\n      all[k] = suffObj[k];\n    }\n  });\n  //ad-hoc each missing form\n  //to Actor\n  if (!all.Actor) {\n    //a phrasal like 'step up' can't be an actor -'step upper'?\n    // if (!t.tag.PhrasalVerb) {\n    all.Actor = toActor(inf);\n    // }\n  }\n  //add adjective, like walk->walkable\n  all.Adjective = toAdjective(all.Infinitive);\n\n  //use fallback, generic transformations\n  Object.keys(all).forEach(function (k) {\n    if (!all[k] && generic[k]) {\n      all[k] = generic[k](all);\n    }\n  });\n\n  return all;\n};\n\nmodule.exports = conjugate;\n\n},{\"../predict\":146,\"../toInfinitive\":149,\"./generic\":138,\"./irregulars\":140,\"./suffixes\":141,\"./toActor\":142,\"./toAdjective\":143,\"./toBe\":144}],136:[function(_dereq_,module,exports){\n'use strict';\n\nmodule.exports = [{\n  reg: /(eave)$/i,\n  repl: {\n    pr: '$1s',\n    pa: '$1d',\n    gr: 'eaving',\n    ar: '$1r'\n  }\n}, {\n  reg: /(ink)$/i,\n  repl: {\n    pr: '$1s',\n    pa: 'unk',\n    gr: '$1ing',\n    ar: '$1er'\n  }\n}, {\n  reg: /(end)$/i,\n  repl: {\n    pr: '$1s',\n    pa: 'ent',\n    gr: '$1ing',\n    ar: '$1er'\n  }\n}, {\n  reg: /(ide)$/i,\n  repl: {\n    pr: '$1s',\n    pa: 'ode',\n    gr: 'iding',\n    ar: 'ider'\n  }\n}, {\n  reg: /(ake)$/i,\n  repl: {\n    pr: '$1s',\n    pa: 'ook',\n    gr: 'aking',\n    ar: '$1r'\n  }\n}, {\n  reg: /(eed)$/i,\n  repl: {\n    pr: '$1s',\n    pa: '$1ed',\n    gr: '$1ing',\n    ar: '$1er'\n  }\n}, {\n  reg: /(e)(ep)$/i,\n  repl: {\n    pr: '$1$2s',\n    pa: '$1pt',\n    gr: '$1$2ing',\n    ar: '$1$2er'\n  }\n}, {\n  reg: /(a[tg]|i[zn]|ur|nc|gl|is)e$/i,\n  repl: {\n    pr: '$1es',\n    pa: '$1ed',\n    gr: '$1ing',\n    prt: '$1en'\n  }\n}, {\n  reg: /([i|f|rr])y$/i,\n  repl: {\n    pr: '$1ies',\n    pa: '$1ied',\n    gr: '$1ying'\n  }\n}, {\n  reg: /([td]er)$/i,\n  repl: {\n    pr: '$1s',\n    pa: '$1ed',\n    gr: '$1ing'\n  }\n}, {\n  reg: /([bd]l)e$/i,\n  repl: {\n    pr: '$1es',\n    pa: '$1ed',\n    gr: '$1ing'\n  }\n}, {\n  reg: /(ish|tch|ess)$/i,\n  repl: {\n    pr: '$1es',\n    pa: '$1ed',\n    gr: '$1ing'\n  }\n}, {\n  reg: /(ion|end|e[nc]t)$/i,\n  repl: {\n    pr: '$1s',\n    pa: '$1ed',\n    gr: '$1ing'\n  }\n}, {\n  reg: /(om)e$/i,\n  repl: {\n    pr: '$1es',\n    pa: 'ame',\n    gr: '$1ing'\n  }\n}, {\n  reg: /([aeiu])([pt])$/i,\n  repl: {\n    pr: '$1$2s',\n    pa: '$1$2',\n    gr: '$1$2$2ing'\n  }\n}, {\n  reg: /(er)$/i,\n  repl: {\n    pr: '$1s',\n    pa: '$1ed',\n    gr: '$1ing'\n  }\n}, {\n  reg: /(en)$/i,\n  repl: {\n    pr: '$1s',\n    pa: '$1ed',\n    gr: '$1ing'\n  }\n}, {\n  reg: /(..)(ow)$/i,\n  repl: {\n    pr: '$1$2s',\n    pa: '$1ew',\n    gr: '$1$2ing',\n    prt: '$1$2n'\n  }\n}, {\n  reg: /(..)([cs]h)$/i,\n  repl: {\n    pr: '$1$2es',\n    pa: '$1$2ed',\n    gr: '$1$2ing'\n  }\n}, {\n  reg: /([^aeiou][ou])(g|d)$/i,\n  repl: {\n    pr: '$1$2s',\n    pa: '$1$2$2ed',\n    gr: '$1$2$2ing'\n  }\n}, {\n  reg: /([^aeiou][aeiou])(b|t|p|m)$/i,\n  repl: {\n    pr: '$1$2s',\n    pa: '$1$2$2ed',\n    gr: '$1$2$2ing'\n  }\n}, {\n  reg: /([aeiou]zz)$/i,\n  repl: {\n    pr: '$1es',\n    pa: '$1ed',\n    gr: '$1ing'\n  }\n}];\n\n},{}],137:[function(_dereq_,module,exports){\n'use strict';\n\nvar checkIrregulars = _dereq_('./irregulars');\nvar suffixPass = _dereq_('./suffixes');\nvar generic = _dereq_('./generic');\n//this method is the same as regular conjugate, but optimised for use in the lexicon during warm-up.\n//it's way faster because it knows input is already infinitive\n\nvar want = ['Gerund', 'PastTense', 'PresentTense'];\n\nvar fasterConjugate = function fasterConjugate(inf) {\n  var all = {\n    Infinitive: inf\n  };\n  var irregObj = checkIrregulars(all['Infinitive']);\n  if (irregObj !== null) {\n    Object.keys(irregObj).forEach(function (k) {\n      if (irregObj[k] && !all[k]) {\n        all[k] = irregObj[k];\n      }\n    });\n  }\n  //check suffix rules\n  var suffObj = suffixPass(inf);\n  Object.keys(suffObj).forEach(function (k) {\n    if (suffObj[k] && !all[k]) {\n      all[k] = suffObj[k];\n    }\n  });\n  for (var i = 0; i < want.length; i++) {\n    if (!all[want[i]]) {\n      all[want[i]] = generic[want[i]](all);\n    }\n  }\n  return all;\n};\nmodule.exports = fasterConjugate;\n// console.log(fasterConjugate('walk'));\n\n},{\"./generic\":138,\"./irregulars\":140,\"./suffixes\":141}],138:[function(_dereq_,module,exports){\n'use strict';\n//non-specifc, 'hail-mary' transforms from infinitive, into other forms\n\nvar fns = _dereq_('../../../../../fns'); //jaja!\n\nvar generic = {\n\n  Gerund: function Gerund(o) {\n    var inf = o.Infinitive;\n    if (fns.endsWith(inf, 'e')) {\n      return inf.replace(/e$/, 'ing');\n    }\n    return inf + 'ing';\n  },\n\n  PresentTense: function PresentTense(o) {\n    var inf = o.Infinitive;\n    if (fns.endsWith(inf, 's')) {\n      return inf + 'es';\n    }\n    if (inf.match(/[bcdfghjklmnpqrstvwxz]y$/)) {\n      return inf.slice(0, -1) + 'ies';\n    }\n    return inf + 's';\n  },\n\n  PastTense: function PastTense(o) {\n    var inf = o.Infinitive;\n    if (fns.endsWith(inf, 'e')) {\n      return inf + 'd';\n    }\n    if (fns.endsWith(inf, 'ed')) {\n      return inf;\n    }\n    if (inf.match(/[bcdfghjklmnpqrstvwxz]y$/)) {\n      return inf.slice(0, -1) + 'ied';\n    }\n    return inf + 'ed';\n  }\n\n};\n\nmodule.exports = generic;\n\n},{\"../../../../../fns\":40}],139:[function(_dereq_,module,exports){\n'use strict';\n\nvar conjugate = _dereq_('./conjugate');\nvar toBe = _dereq_('./toBe');\n\n// const generic = {\n//   FutureTense: (o) => {\n//     return 'will ' + o.Infinitive;\n//   },\n//\n//   PerfectTense: (o) => {\n//     return 'have ' + (o.Participle || o.PastTense);\n//   },\n//\n//   Pluperfect: (o) => {\n//     if (o.PastTense) {\n//       return 'had ' + o.PastTense;\n//     }\n//     return null;\n//   },\n//   FuturePerfect: (o) => {\n//     if (o.PastTense) {\n//       return 'will have ' + o.PastTense;\n//     }\n//     return null;\n//   }\n// };\n\n//conjugation using auxillaries+adverbs and stuff\nvar multiWord = function multiWord(vb, verbose) {\n  var isNegative = vb.negative.found;\n  var isPlural = false;\n  //handle 'to be' verb seperately\n  if (vb.verb.tag.Copula || vb.verb.normal === 'be' && vb.auxillary.match('will').found) {\n    return toBe(isPlural, isNegative);\n  }\n\n  var obj = conjugate(vb.verb, verbose);\n  //apply particles\n  if (vb.particle.found) {\n    Object.keys(obj).forEach(function (k) {\n      obj[k] = obj[k] + vb.particle.out();\n    });\n  }\n  //apply adverbs\n  if (vb.adverbs.found) {\n    Object.keys(obj).forEach(function (k) {\n      obj[k] = obj[k] + vb.adverbs.out();\n    });\n  }\n  //apply negative\n  if (isNegative) {\n    obj.PastTense = 'did not ' + obj.Infinitive;\n    obj.PresentTense = 'does not ' + obj.Infinitive;\n  }\n  //future Tense is pretty straightforward\n  if (!obj.FutureTense) {\n    if (isNegative) {\n      obj.FutureTense = 'will not ' + obj.Infinitive;\n    } else {\n      obj.FutureTense = 'will ' + obj.Infinitive;\n    }\n  }\n  return obj;\n};\nmodule.exports = multiWord;\n\n},{\"./conjugate\":135,\"./toBe\":144}],140:[function(_dereq_,module,exports){\n'use strict';\n\nvar irregulars = _dereq_('../../../../../data').irregular_verbs; //weeee!\nvar fns = _dereq_('../../../../../fns'); //weeee!\nvar infArr = Object.keys(irregulars);\nvar forms = ['Participle', 'Gerund', 'PastTense', 'PresentTense', 'FuturePerfect', 'PerfectTense', 'Actor'];\n\nvar checkIrregulars = function checkIrregulars(str) {\n  //fast infinitive lookup\n  if (irregulars[str] !== undefined) {\n    var obj = fns.copy(irregulars[str]);\n    obj.Infinitive = str;\n    return obj;\n  }\n  //longer check of known-verb forms\n  for (var i = 0; i < infArr.length; i++) {\n    for (var o = 0; o < forms.length; o++) {\n      var irObj = irregulars[infArr[i]];\n      if (irObj[forms[o]] === str) {\n        var _obj = fns.copy(irObj);\n        _obj.Infinitive = infArr[i];\n        return _obj;\n      }\n    }\n  }\n  return {};\n};\n\nmodule.exports = checkIrregulars;\n// console.log(checkIrregulars('bit'));\n\n},{\"../../../../../data\":8,\"../../../../../fns\":40}],141:[function(_dereq_,module,exports){\n'use strict';\n\nvar rules = _dereq_('./data/rules');\nvar mapping = {\n  pr: 'PresentTense',\n  pa: 'PastTense',\n  gr: 'Gerund',\n  prt: 'Participle',\n  ar: 'Actor'\n};\nvar keys = Object.keys(mapping);\n\n//check suffix rules\nvar suffixPass = function suffixPass(inf) {\n  var found = {};\n  for (var i = 0; i < rules.length; i++) {\n    if (inf.match(rules[i].reg)) {\n      var obj = rules[i].repl;\n      for (var o = 0; o < keys.length; o++) {\n        if (obj[keys[o]]) {\n          var key = mapping[keys[o]];\n          found[key] = inf.replace(rules[i].reg, obj[keys[o]]);\n        }\n      }\n      return found;\n    }\n  }\n  return found;\n};\n\nmodule.exports = suffixPass;\n\n},{\"./data/rules\":136}],142:[function(_dereq_,module,exports){\n'use strict';\n//turn 'walk' into 'walker'\n\nvar irregulars = {\n  'tie': 'tier',\n  'dream': 'dreamer',\n  'sail': 'sailer',\n  'run': 'runner',\n  'rub': 'rubber',\n  'begin': 'beginner',\n  'win': 'winner',\n  'claim': 'claimant',\n  'deal': 'dealer',\n  'spin': 'spinner'\n};\nvar dont = {\n  'aid': 1,\n  'fail': 1,\n  'appear': 1,\n  'happen': 1,\n  'seem': 1,\n  'try': 1,\n  'say': 1,\n  'marry': 1,\n  'be': 1,\n  'forbid': 1,\n  'understand': 1,\n  'bet': 1\n};\nvar rules = [{\n  'reg': /e$/i,\n  'repl': 'er'\n}, {\n  'reg': /([aeiou])([mlgp])$/i,\n  'repl': '$1$2$2er'\n}, {\n  'reg': /([rlf])y$/i,\n  'repl': '$1ier'\n}, {\n  'reg': /^(.?.[aeiou])t$/i,\n  'repl': '$1tter'\n}];\n\nvar toActor = function toActor(inf) {\n  //check blacklist\n  if (dont[inf]) {\n    return null;\n  }\n  //check irregulars\n  if (irregulars[inf]) {\n    return irregulars[inf];\n  }\n  //try rules\n  for (var i = 0; i < rules.length; i++) {\n    if (inf.match(rules[i].reg)) {\n      return inf.replace(rules[i].reg, rules[i].repl);\n    }\n  }\n  //yup,\n  return inf + 'er';\n};\n\nmodule.exports = toActor;\n\n},{}],143:[function(_dereq_,module,exports){\n'use strict';\n//turn a infinitiveVerb, like \"walk\" into an adjective like \"walkable\"\n\nvar rules = [[/[^aeiou]y$/, 'i'], //relay - reliable\n[/([aeiou][n])$/, '$1n']];\n\n//convert - 'convertible'\n//http://grammarist.com/usage/able-ible/\n//http://blog.oxforddictionaries.com/2012/10/ibles-and-ables/\nvar ible_suffixes = {\n  collect: true,\n  exhaust: true,\n  convert: true,\n  digest: true,\n  discern: true,\n  dismiss: true,\n  reverse: true,\n  access: true,\n  collapse: true,\n  express: true\n};\n\nvar irregulars = {\n  eat: 'edible',\n  hear: 'audible',\n  see: 'visible',\n  defend: 'defensible',\n  write: 'legible',\n  move: 'movable',\n  divide: 'divisible',\n  perceive: 'perceptible'\n};\n\n//takes an infitive verb, and returns an adjective form\nvar toAdjective = function toAdjective(str) {\n  if (irregulars[str]) {\n    return irregulars[str];\n  }\n  for (var i = 0; i < rules.length; i++) {\n    if (str.match(rules[i][0])) {\n      str = str.replace(rules[i][0], rules[i][1]);\n    }\n  }\n  var adj = str + 'able';\n  if (ible_suffixes[str]) {\n    adj = str + 'ible';\n  }\n  return adj;\n};\n\nmodule.exports = toAdjective;\n// console.log(toAdjective('buy'));\n\n},{}],144:[function(_dereq_,module,exports){\n'use strict';\n//too many special cases for is/was/will be\n\nvar toBe = function toBe(isPlural, isNegative) {\n  var obj = {\n    PastTense: 'was',\n    PresentTense: 'is',\n    FutureTense: 'will be',\n    Infinitive: 'is',\n    Gerund: 'being',\n    Actor: '',\n    PerfectTense: 'been',\n    Pluperfect: 'been'\n  };\n  if (isPlural) {\n    obj.PastTense = 'were';\n    obj.PresentTense = 'are';\n    obj.Infinitive = 'are';\n  }\n  if (isNegative) {\n    obj.PastTense += ' not';\n    obj.PresentTense += ' not';\n    obj.FutureTense = 'will not be';\n    obj.Infinitive += ' not';\n    obj.PerfectTense = 'not ' + obj.PerfectTense;\n    obj.Pluperfect = 'not ' + obj.Pluperfect;\n  }\n  return obj;\n};\nmodule.exports = toBe;\n\n},{}],145:[function(_dereq_,module,exports){\n'use strict';\n//sometimes you can tell if a verb is plural/singular, just by the verb\n// i am / we were\n//othertimes you need its noun 'we walk' vs 'i walk'\n\nvar isPlural = function isPlural(vb) {\n  if (vb.match('(are|were|does)').found) {\n    return true;\n  }\n  if (vb.match('(is|am|do|was)').found) {\n    return false;\n  }\n  //consider its prior noun\n  var noun = vb.getNoun();\n  if (noun && noun.found) {\n    if (noun.match('#Plural').found) {\n      return true;\n    }\n    if (noun.match('#Singular').found) {\n      return false;\n    }\n  }\n  return null;\n};\nmodule.exports = isPlural;\n\n},{}],146:[function(_dereq_,module,exports){\n'use strict';\n\nvar fns = _dereq_('../../../../../fns'); //jaja!\nvar suffix_rules = _dereq_('./suffix_rules');\n\nvar goodTypes = {\n  Infinitive: true,\n  Gerund: true,\n  PastTense: true,\n  PresentTense: true,\n  FutureTense: true,\n  PerfectTense: true,\n  Pluperfect: true,\n  FuturePerfect: true,\n  Participle: true\n};\n\nvar predictForm = function predictForm(term, verbose) {\n  //do we already know the form?\n  var keys = Object.keys(goodTypes);\n  for (var i = 0; i < keys.length; i++) {\n    if (term.tag[keys[i]]) {\n      if (verbose) {\n        console.log('predicted ' + keys[i] + ' from pos', path);\n      }\n      return keys[i];\n    }\n  }\n  //consult our handy suffix rules\n  var arr = Object.keys(suffix_rules);\n  for (var _i = 0; _i < arr.length; _i++) {\n    if (fns.endsWith(term.normal, arr[_i]) && arr[_i].length < term.normal.length) {\n      if (verbose) {\n        var msg = 'predicted ' + suffix_rules[arr[_i]] + ' from suffix ' + arr[_i];\n        console.log(msg, path);\n      }\n      return suffix_rules[arr[_i]];\n    }\n  }\n  return null;\n};\n\nmodule.exports = predictForm;\n\n},{\"../../../../../fns\":40,\"./suffix_rules\":147}],147:[function(_dereq_,module,exports){\n'use strict';\n//suffix signals for verb tense, generated from test data\n\nvar compact = {\n  'Gerund': ['ing'],\n  'Actor': ['erer'],\n  'Infinitive': ['ate', 'ize', 'tion', 'rify', 'then', 'ress', 'ify', 'age', 'nce', 'ect', 'ise', 'ine', 'ish', 'ace', 'ash', 'ure', 'tch', 'end', 'ack', 'and', 'ute', 'ade', 'ock', 'ite', 'ase', 'ose', 'use', 'ive', 'int', 'nge', 'lay', 'est', 'ain', 'ant', 'ent', 'eed', 'er', 'le', 'own', 'unk', 'ung', 'en'],\n  'PastTense': ['ed', 'lt', 'nt', 'pt', 'ew', 'ld'],\n  'PresentTense': ['rks', 'cks', 'nks', 'ngs', 'mps', 'tes', 'zes', 'ers', 'les', 'acks', 'ends', 'ands', 'ocks', 'lays', 'eads', 'lls', 'els', 'ils', 'ows', 'nds', 'ays', 'ams', 'ars', 'ops', 'ffs', 'als', 'urs', 'lds', 'ews', 'ips', 'es', 'ts', 'ns', 's']\n};\nvar suffix_rules = {};\nvar keys = Object.keys(compact);\nvar l = keys.length;\n\nfor (var i = 0; i < l; i++) {\n  var l2 = compact[keys[i]].length;\n  for (var o = 0; o < l2; o++) {\n    suffix_rules[compact[keys[i]][o]] = keys[i];\n  }\n}\nmodule.exports = suffix_rules;\n\n},{}],148:[function(_dereq_,module,exports){\n'use strict';\n//turn a infinitiveVerb, like \"walk\" into an adjective like \"walkable\"\n\nvar rules = [[/y$/, 'i'], //relay - reliable\n[/([aeiou][n])$/, '$1n']];\n\n//convert - 'convertible'\n//http://grammarist.com/usage/able-ible/\n//http://blog.oxforddictionaries.com/2012/10/ibles-and-ables/\nvar ible_suffixes = {\n  collect: true,\n  exhaust: true,\n  convert: true,\n  digest: true,\n  discern: true,\n  dismiss: true,\n  reverse: true,\n  access: true,\n  collapse: true,\n  express: true\n};\n\nvar irregulars = {\n  eat: 'edible',\n  hear: 'audible',\n  see: 'visible',\n  defend: 'defensible',\n  write: 'legible',\n  move: 'movable',\n  divide: 'divisible',\n  perceive: 'perceptible'\n};\n\n//takes an infitive verb, and returns an adjective form\nvar toAdjective = function toAdjective(str) {\n  if (irregulars[str]) {\n    return irregulars[str];\n  }\n  for (var i = 0; i < rules.length; i++) {\n    if (str.match(rules[i][0])) {\n      str = str.replace(rules[i][0], rules[i][1]);\n    }\n  }\n  var adj = str + 'able';\n  if (ible_suffixes[str]) {\n    adj = str + 'ible';\n  }\n  return adj;\n};\n\nmodule.exports = toAdjective;\n\n},{}],149:[function(_dereq_,module,exports){\n'use strict';\n//turn any verb into its infinitive form\n\nvar rules = _dereq_('./rules');\nvar irregulars = _dereq_('../../../../../data').irregular_verbs;\nvar predict = _dereq_('../predict');\n\n//map the irregulars for easy infinitive lookup\n// {bought: 'buy'}\nvar verb_mapping = function verb_mapping() {\n  return Object.keys(irregulars).reduce(function (h, k) {\n    Object.keys(irregulars[k]).forEach(function (pos) {\n      h[irregulars[k][pos]] = k;\n    });\n    return h;\n  }, {});\n};\n\nirregulars = verb_mapping();\n\nvar toInfinitive = function toInfinitive(t) {\n  if (t.tag.Infinitive) {\n    return t.normal;\n  }\n  //check the irregular verb conjugations\n  if (irregulars[t.normal]) {\n    return irregulars[t.normal];\n  }\n  //check the suffix rules\n  var form = predict(t);\n  if (rules[form]) {\n    for (var i = 0; i < rules[form].length; i++) {\n      var rule = rules[form][i];\n      if (t.normal.match(rule.reg)) {\n        return t.normal.replace(rule.reg, rule.to);\n      }\n    }\n  }\n  return t.normal;\n};\n\nmodule.exports = toInfinitive;\n\n},{\"../../../../../data\":8,\"../predict\":146,\"./rules\":150}],150:[function(_dereq_,module,exports){\n'use strict';\n//rules for turning a verb into infinitive form\n\nvar rules = {\n  Participle: [{\n    reg: /own$/i,\n    to: 'ow'\n  }, {\n    reg: /(.)un([g|k])$/i,\n    to: '$1in$2'\n  }],\n  Actor: [{\n    reg: /(er)er$/i,\n    to: '$1'\n  }],\n  PresentTense: [{\n    reg: /(ies)$/i,\n    to: 'y'\n  }, {\n    reg: /(tch|sh)es$/i,\n    to: '$1'\n  }, {\n    reg: /(ss|zz)es$/i,\n    to: '$1'\n  }, {\n    reg: /([tzlshicgrvdnkmu])es$/i,\n    to: '$1e'\n  }, {\n    reg: /(n[dtk]|c[kt]|[eo]n|i[nl]|er|a[ytrl])s$/i,\n    to: '$1'\n  }, {\n    reg: /(ow)s$/i,\n    to: '$1'\n  }, {\n    reg: /(op)s$/i,\n    to: '$1'\n  }, {\n    reg: /([eirs])ts$/i,\n    to: '$1t'\n  }, {\n    reg: /(ll)s$/i,\n    to: '$1'\n  }, {\n    reg: /(el)s$/i,\n    to: '$1'\n  }, {\n    reg: /(ip)es$/i,\n    to: '$1e'\n  }, {\n    reg: /ss$/i,\n    to: 'ss'\n  }, {\n    reg: /s$/i,\n    to: ''\n  }],\n  Gerund: [{\n    reg: /pping$/i,\n    to: 'p'\n  }, {\n    reg: /lling$/i,\n    to: 'll'\n  }, {\n    reg: /tting$/i,\n    to: 't'\n  }, {\n    reg: /ssing$/i,\n    to: 'ss'\n  }, {\n    reg: /gging$/i,\n    to: 'g'\n  }, {\n    reg: /([^aeiou])ying$/i,\n    to: '$1y'\n  }, {\n    reg: /([^ae]i.)ing$/i,\n    to: '$1e'\n  }, {\n    reg: /(ea.)ing$/i,\n    to: '$1'\n  }, {\n    reg: /(u[rtcb]|[bdtpkg]l|n[cg]|a[gdkvtc]|[ua]s|[dr]g|yz|o[rlsp]|cre)ing$/i,\n    to: '$1e'\n  }, {\n    reg: /(ch|sh)ing$/i,\n    to: '$1'\n  }, {\n    reg: /(..)ing$/i,\n    to: '$1'\n  }],\n  PastTense: [{\n    reg: /(ued)$/i,\n    to: 'ue'\n  }, {\n    reg: /([aeiou]zz)ed$/i,\n    to: '$1'\n  }, {\n    reg: /(e|i)lled$/i,\n    to: '$1ll'\n  }, {\n    reg: /(sh|ch)ed$/i,\n    to: '$1'\n  }, {\n    reg: /(tl|gl)ed$/i,\n    to: '$1e'\n  }, {\n    reg: /(um?pt?)ed$/i,\n    to: '$1'\n  }, {\n    reg: /(ss)ed$/i,\n    to: '$1'\n  }, {\n    reg: /pped$/i,\n    to: 'p'\n  }, {\n    reg: /tted$/i,\n    to: 't'\n  }, {\n    reg: /gged$/i,\n    to: 'g'\n  }, {\n    reg: /(h|ion|n[dt]|ai.|[cs]t|pp|all|ss|tt|int|ail|ld|en|oo.|er|k|pp|w|ou.|rt|ght|rm)ed$/i,\n    to: '$1'\n  }, {\n    reg: /(.ut)ed$/i,\n    to: '$1e'\n  }, {\n    reg: /(us)ed$/i,\n    to: '$1e'\n  }, {\n    reg: /(..[^aeiouy])ed$/i,\n    to: '$1e'\n  }, {\n    reg: /ied$/i,\n    to: 'y'\n  }, {\n    reg: /(.o)ed$/i,\n    to: '$1o'\n  }, {\n    reg: /(.i)ed$/i,\n    to: '$1'\n  }, {\n    reg: /(a[^aeiou])ed$/i,\n    to: '$1'\n  }, {\n    reg: /([rl])ew$/i,\n    to: '$1ow'\n  }, {\n    reg: /([pl])t$/i,\n    to: '$1t'\n  }]\n};\nmodule.exports = rules;\n\n},{}],151:[function(_dereq_,module,exports){\n'use strict';\n//turns a verb negative - may not have enough information to do it properly\n// (eg 'did not eat' vs 'does not eat') - needs the noun\n\nvar toInfinitive = _dereq_('./methods/toInfinitive');\n\nvar toNegative = function toNegative(ts) {\n  //would not walk\n  var modal = ts.match('#Auxillary').first(); //.notIf('(is|are|was|will|has|had)').first(); //.first();\n  if (modal.found) {\n    var index = modal.list[0].index();\n    return ts.parentTerms.insertAt(index + 1, 'not', 'Verb');\n  }\n\n  //words that pair easily with a 'not' - 'is not'\n  var copula = ts.match('(#Copula|will|has|had|do)').first();\n  if (copula.found) {\n    var _index = copula.list[0].index();\n    return ts.parentTerms.insertAt(_index + 1, 'not', 'Verb');\n  }\n\n  var isPlural = ts.isPlural();\n\n  //walked -> did not walk\n  var past = ts.match('#PastTense').last();\n  if (past.found) {\n    var _vb = past.list[0];\n    var _index2 = _vb.index();\n    _vb.terms[0].text = toInfinitive(_vb.terms[0]);\n    if (isPlural) {\n      return ts.parentTerms.insertAt(_index2, 'do not', 'Verb');\n    }\n    return ts.parentTerms.insertAt(_index2, 'did not', 'Verb');\n  }\n\n  //walks -> does not walk\n  var pres = ts.match('#PresentTense').first();\n  if (pres.found) {\n    var _vb2 = pres.list[0];\n    var _index3 = _vb2.index();\n    _vb2.terms[0].text = toInfinitive(_vb2.terms[0]);\n    //some things use 'do not', everything else is 'does not'\n    var noun = ts.getNoun();\n    if (noun.match('(i|we|they|you)').found) {\n      return ts.parentTerms.insertAt(_index3, 'do not', 'Verb');\n    }\n    return ts.parentTerms.insertAt(_index3, 'does not', 'Verb');\n  }\n\n  //not walking\n  var gerund = ts.match('#Gerund').last();\n  if (gerund.found) {\n    var _index4 = gerund.list[0].index();\n    return ts.parentTerms.insertAt(_index4, 'not', 'Verb');\n  }\n\n  //walk -> do not walk\n  var vb = ts.match('#Verb').last();\n  if (vb.found) {\n    vb = vb.list[0];\n    var _index5 = vb.index();\n    vb.terms[0].text = toInfinitive(vb.terms[0]);\n    if (isPlural) {\n      return ts.parentTerms.insertAt(_index5, 'does not', 'Verb');\n    }\n    return ts.parentTerms.insertAt(_index5, 'did not', 'Verb');\n  }\n\n  return ts;\n};\nmodule.exports = toNegative;\n\n},{\"./methods/toInfinitive\":149}],152:[function(_dereq_,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Terms = _dereq_('../../paths').Terms;\nvar _conjugate = _dereq_('./methods/conjugate');\nvar toAdjective = _dereq_('./methods/toAdjective');\nvar interpret = _dereq_('./interpret');\nvar _toNegative = _dereq_('./toNegative');\nvar _isPlural = _dereq_('./methods/isPlural');\n\nvar Verb = function (_Terms) {\n  _inherits(Verb, _Terms);\n\n  function Verb(arr, lexicon, refText, refTerms) {\n    _classCallCheck(this, Verb);\n\n    var _this = _possibleConstructorReturn(this, (Verb.__proto__ || Object.getPrototypeOf(Verb)).call(this, arr, lexicon, refText, refTerms));\n\n    _this.parse();\n    return _this;\n  }\n\n  _createClass(Verb, [{\n    key: 'parse',\n    value: function parse() {\n      this.negative = this.match('#Negative');\n      this.adverbs = this.match('#Adverb');\n      var aux = this.clone().not('(#Adverb|#Negative)');\n      this.verb = aux.match('#Verb').not('#Particle').last();\n      this.particle = aux.match('#Particle').last();\n      if (this.verb.found) {\n        this.verb = this.verb.list[0].terms[0];\n      }\n      this.auxillary = aux.match('#Auxillary+');\n    }\n  }, {\n    key: 'data',\n    value: function data(verbose) {\n      return {\n        text: this.out('text'),\n        normal: this.out('normal'),\n        parts: {\n          negative: this.negative.out('normal'),\n          auxillary: this.auxillary.out('normal'),\n          verb: this.verb.out('normal'),\n          adverbs: this.adverbs.out('normal')\n        },\n        interpret: interpret(this, verbose),\n        conjugations: this.conjugate()\n      };\n    }\n  }, {\n    key: 'getNoun',\n    value: function getNoun() {\n      if (!this.refTerms) {\n        return null;\n      }\n      var str = '#Adjective? #Noun+ ' + this.out('normal');\n      return this.refTerms.match(str).match('#Noun+');\n    }\n    //which conjugation is this right now?\n\n  }, {\n    key: 'conjugation',\n    value: function conjugation() {\n      return interpret(this, false).tense;\n    }\n    //blast-out all forms\n\n  }, {\n    key: 'conjugate',\n    value: function conjugate(verbose) {\n      return _conjugate(this, verbose);\n    }\n  }, {\n    key: 'isPlural',\n    value: function isPlural() {\n      return _isPlural(this);\n    }\n    /** negation **/\n\n  }, {\n    key: 'isNegative',\n    value: function isNegative() {\n      return this.match('#Negative').list.length === 1;\n    }\n  }, {\n    key: 'isPerfect',\n    value: function isPerfect() {\n      return this.auxillary.match('(have|had)').found;\n    }\n  }, {\n    key: 'toNegative',\n    value: function toNegative() {\n      if (this.isNegative()) {\n        return this;\n      }\n      return _toNegative(this);\n    }\n  }, {\n    key: 'toPositive',\n    value: function toPositive() {\n      return this.match('#Negative')['delete']();\n    }\n\n    /** conjugation **/\n\n  }, {\n    key: 'toPastTense',\n    value: function toPastTense() {\n      var obj = this.conjugate();\n      return this.replaceWith(obj.PastTense);\n    }\n  }, {\n    key: 'toPresentTense',\n    value: function toPresentTense() {\n      var obj = this.conjugate();\n      return this.replaceWith(obj.PresentTense);\n    }\n  }, {\n    key: 'toFutureTense',\n    value: function toFutureTense() {\n      var obj = this.conjugate();\n      return this.replaceWith(obj.FutureTense);\n    }\n  }, {\n    key: 'toInfinitive',\n    value: function toInfinitive() {\n      var obj = this.conjugate();\n      //NOT GOOD. please fix\n      this.terms[this.terms.length - 1].text = obj.Infinitive;\n      return this;\n    }\n  }, {\n    key: 'asAdjective',\n    value: function asAdjective() {\n      return toAdjective(this.verb.out('normal'));\n    }\n  }]);\n\n  return Verb;\n}(Terms);\n\nmodule.exports = Verb;\n\n},{\"../../paths\":56,\"./interpret\":134,\"./methods/conjugate\":139,\"./methods/isPlural\":145,\"./methods/toAdjective\":148,\"./toNegative\":151}],153:[function(_dereq_,module,exports){\n//(Rule-based sentence boundary segmentation) - chop given text into its proper sentences.\n// Ignore periods/questions/exclamations used in acronyms/abbreviations/numbers, etc.\n// @spencermountain 2015 MIT\n'use strict';\n\nvar fns = _dereq_('./paths').fns;\nvar data = _dereq_('../data/index');\nvar abbreviations = Object.keys(data.abbreviations);\n\nvar naiive_split = function naiive_split(text) {\n  //first, split by newline\n  var splits = text.split(/(\\n+)/);\n  //split by period, question-mark, and exclamation-mark\n  splits = splits.map(function (str) {\n    return str.split(/(\\S.+?[.!?])(?=\\s+|$)/g);\n  });\n  return fns.flatten(splits);\n};\n\nvar sentence_parser = function sentence_parser(text) {\n  var sentences = [];\n  text = fns.ensureString(text);\n  //first do a greedy-split..\n  var chunks = [];\n  //ensure it 'smells like' a sentence\n  if (!text || typeof text !== 'string' || !text.match(/\\S/)) {\n    return sentences;\n  }\n  // This was the splitter regex updated to fix quoted punctuation marks.\n  // let splits = text.split(/(\\S.+?[.\\?!])(?=\\s+|$|\")/g);\n  // todo: look for side effects in this regex replacement:\n  var splits = naiive_split(text);\n  //filter-out the grap ones\n  for (var i = 0; i < splits.length; i++) {\n    var s = splits[i];\n    if (!s || s === '') {\n      continue;\n    }\n    //this is meaningful whitespace\n    if (!s.match(/\\S/)) {\n      //add it to the last one\n      if (chunks[chunks.length - 1]) {\n        chunks[chunks.length - 1] += s;\n        continue;\n      } else if (splits[i + 1]) {\n        //add it to the next one\n        splits[i + 1] = s + splits[i + 1];\n        continue;\n      }\n      //else, only whitespace, no terms, no sentence\n    }\n    chunks.push(s);\n  }\n\n  //detection of non-sentence chunks\n  var abbrev_reg = new RegExp('\\\\b(' + abbreviations.join('|') + ')[.!?] ?$', 'i');\n  var acronym_reg = new RegExp('[ |\\.][A-Z]\\.?( *)?$', 'i');\n  var elipses_reg = new RegExp('\\\\.\\\\.+( +)?$');\n  //loop through these chunks, and join the non-sentence chunks back together..\n  for (var _i = 0; _i < chunks.length; _i++) {\n    //should this chunk be combined with the next one?\n    if (chunks[_i + 1] && (chunks[_i].match(abbrev_reg) || chunks[_i].match(acronym_reg) || chunks[_i].match(elipses_reg))) {\n      chunks[_i + 1] = chunks[_i] + (chunks[_i + 1] || '');\n    } else if (chunks[_i] && chunks[_i].length > 0) {\n      //this chunk is a proper sentence..\n      sentences.push(chunks[_i]);\n      chunks[_i] = '';\n    }\n  }\n  //if we never got a sentence, return the given text\n  if (sentences.length === 0) {\n    return [text];\n  }\n  return sentences;\n};\n\nmodule.exports = sentence_parser;\n// console.log(sentence_parser('john f. kennedy'));\n\n},{\"../data/index\":8,\"./paths\":56}],154:[function(_dereq_,module,exports){\n'use strict';\n\n//used for pretty-printing on the server-side\nvar colors = {\n  blue: ['Noun', 'Plural', 'Singular', 'Pronoun', 'Possessive', 'Place', 'Person', 'City'],\n  red: ['Value', 'Ordinal', 'Cardinal', 'TextValue', 'NumericValue'],\n  green: ['Verb', 'Auxillary', 'Negative', 'PastTense', 'PresentTense', 'FutureTense', 'Modal', 'Infinitive', 'Gerund', 'Copula', 'Participle'],\n  cyan: ['Preposition', 'Conjunction', 'Determiner'],\n  black: ['Adjective', 'Adverb']\n};\nmodule.exports = Object.keys(colors).reduce(function (h, c) {\n  colors[c].forEach(function (str) {\n    h[str] = c;\n  });\n  return h;\n}, {});\n\n},{}],155:[function(_dereq_,module,exports){\n'use strict';\n\n//list of inconsistent parts-of-speech\n\nvar conflicts = [\n//top-level pos are all inconsistent\n['Noun', 'Verb', 'Adjective', 'Adverb', 'Determiner', 'Conjunction', 'Preposition', 'QuestionWord', 'Expression', 'Url', 'PhoneNumber', 'Email', 'Emoji'],\n//exlusive-nouns\n['Person', 'Organization', 'Value', 'Place', 'Actor', 'Demonym', 'Pronoun'],\n//things that can't be plural\n['Plural', 'Singular'],\n// ['Plural', 'Pronoun'],\n['Plural', 'Person'], ['Plural', 'Organization'], ['Plural', 'Currency'], ['Plural', 'Ordinal'],\n//exlusive-people\n['MaleName', 'FemaleName'], ['FirstName', 'LastName', 'Honorific'],\n//adjectives\n['Comparative', 'Superlative'],\n//values\n['Value', 'Verb', 'Adjective'],\n// ['Value', 'Year'],\n['Ordinal', 'Cardinal'], ['TextValue', 'NumericValue'], ['NiceNumber', 'TextValue'], ['Ordinal', 'Currency'], //$5.50th\n//verbs\n['PastTense', 'PerfectTense', 'Pluperfect', 'FuturePerfect', 'Copula', 'Modal', 'Participle', 'Infinitive', 'Gerund'],\n//date\n['Month', 'WeekDay', 'Year', 'Duration'], ['Particle', 'Conjunction', 'Adverb', 'Preposition'], ['Date', 'Verb', 'Adjective', 'Person'],\n//phrases\n['NounPhrase', 'VerbPhrase', 'AdjectivePhrase', 'ConditionalPhrase'],\n//a/an -> 1\n['Value', 'Determiner'], ['Verb', 'NounPhrase'], ['Noun', 'VerbPhrase'],\n//roman numerals\n['RomanNumeral', 'Fraction', 'NiceNumber'], ['RomanNumeral', 'Money'],\n//cases\n['UpperCase', 'TitleCase', 'CamelCase']];\n\nvar find = function find(tag) {\n  var arr = [];\n  for (var i = 0; i < conflicts.length; i++) {\n    if (conflicts[i].indexOf(tag) !== -1) {\n      arr = arr.concat(conflicts[i]);\n    }\n  }\n  return arr.filter(function (t) {\n    return t !== tag;\n  });\n};\n\nmodule.exports = find;\n\n// console.log(find('Person'));\n\n},{}],156:[function(_dereq_,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar conflicts = _dereq_('./conflicts');\nvar tree = _dereq_('./tree');\n\nvar extra = {\n  Month: 'Singular',\n  // Year: 'Noun',\n  Time: 'Noun',\n  WeekDay: 'Noun',\n  Duration: 'Noun',\n  NumberRange: 'Contraction'\n};\n\nvar all_children = function all_children(obj) {\n  if (obj === true) {\n    return [];\n  }\n  var children = Object.keys(obj || {});\n  //two levels deep\n  children.forEach(function (str) {\n    if (_typeof(obj[str]) === 'object') {\n      var kids = Object.keys(obj[str]);\n      kids.forEach(function (gc) {\n        if (_typeof(obj[str][gc]) === 'object') {\n          var grandkids = Object.keys(obj[str][gc]);\n          children = children.concat(grandkids);\n        }\n      });\n      children = children.concat(kids);\n    }\n  });\n  return children;\n};\n\nvar build = function build() {\n  //make tags\n  var all = {};\n  //recursively add them\n  var add_tags = function add_tags(obj, is) {\n    Object.keys(obj).forEach(function (k) {\n      is = is.slice(0); //clone it\n      all[k] = {\n        parents: is,\n        children: all_children(obj[k])\n      };\n      if (obj[k] !== true) {\n        add_tags(obj[k], is.concat([k])); //recursive\n      }\n    });\n  };\n  add_tags(tree, []);\n\n  //add extras\n  Object.keys(all).forEach(function (tag) {\n    if (extra[tag]) {\n      all[tag].parents.push(extra[tag]);\n    }\n  });\n\n  //add conflicts\n  Object.keys(all).forEach(function (tag) {\n    all[tag].not = conflicts(tag);\n    var parents = all[tag].parents;\n    for (var i = 0; i < parents.length; i++) {\n      var alsoNot = conflicts(parents[i]);\n      all[tag].not = all[tag].not.concat(alsoNot);\n    }\n  });\n\n  return all;\n};\n\nmodule.exports = build();\n\n},{\"./conflicts\":155,\"./tree\":157}],157:[function(_dereq_,module,exports){\n\"use strict\";\n\n//the POS tags we use, according to their dependencies\n//(dont make it too deep, cause fns aren't properly clever-enough)\nmodule.exports = {\n  Noun: {\n    Singular: {\n      Person: {\n        FirstName: {\n          MaleName: true,\n          FemaleName: true\n        },\n        LastName: true,\n        Honorific: true\n      },\n      Place: {\n        Country: true,\n        City: true,\n        Address: true\n      },\n      Organization: {\n        SportsTeam: true,\n        Company: true,\n        School: true\n      }\n    },\n    Plural: true,\n    Pronoun: true,\n    Actor: true,\n    Unit: true,\n    Demonym: true,\n    Possessive: true\n  },\n  Date: { //not a noun, but usually is\n    Month: true,\n    WeekDay: true,\n    RelativeDay: true,\n    Year: true,\n    Duration: true,\n    Time: true,\n    Holiday: true\n  },\n  Verb: {\n    PresentTense: {\n      Infinitive: true,\n      Gerund: true\n    },\n    PastTense: true,\n    PerfectTense: true,\n    FuturePerfect: true,\n    Pluperfect: true,\n    Copula: true,\n    Modal: true,\n    Participle: true,\n    Particle: true\n  },\n  Adjective: {\n    Comparative: true,\n    Superlative: true\n  },\n  Adverb: true,\n  Value: {\n    Ordinal: true,\n    Cardinal: {\n      RomanNumeral: true\n    },\n    Fraction: true,\n    TextValue: true,\n    NumericValue: true,\n    NiceNumber: true,\n    Money: true,\n    NumberRange: true\n  },\n  Currency: true,\n  //glue\n  Determiner: true,\n  Conjunction: true,\n  Preposition: true,\n  QuestionWord: true,\n  Expression: true,\n  Url: true,\n  PhoneNumber: true,\n  HashTag: true,\n  Emoji: true,\n  Email: true,\n\n  //non-exclusive\n  Condition: true,\n  Auxillary: true,\n  Negative: true,\n  Contraction: true,\n\n  TitleCase: true,\n  CamelCase: true,\n  UpperCase: true,\n  Hyphenated: true,\n  Acronym: true,\n  ClauseEnd: true,\n  //phrases\n  Quotation: true\n};\n\n},{}],158:[function(_dereq_,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar fns = _dereq_('./paths').fns;\nvar build_whitespace = _dereq_('./whitespace');\nvar makeUID = _dereq_('./makeUID');\n\nvar Term = function () {\n  function Term(str) {\n    _classCallCheck(this, Term);\n\n    this._text = fns.ensureString(str);\n    this.tag = {};\n    //seperate whitespace from the text\n    var parsed = build_whitespace(this._text);\n    this.whitespace = parsed.whitespace;\n    this._text = parsed.text;\n    // console.log(this.whitespace, this._text);\n    this.parent = null;\n    this.silent_term = '';\n    //has this term been modified\n    this.dirty = false;\n    this.normalize();\n    //make a unique id for this term\n    this.uid = makeUID(this.normal);\n  }\n\n  _createClass(Term, [{\n    key: 'index',\n\n    /** where in the sentence is it? zero-based. */\n    value: function index() {\n      var ts = this.parentTerms;\n      if (!ts) {\n        return null;\n      }\n      return ts.terms.indexOf(this);\n    }\n    /** make a copy with no references to the original  */\n\n  }, {\n    key: 'clone',\n    value: function clone() {\n      var term = new Term(this._text, null);\n      term.tag = fns.copy(this.tag);\n      term.whitespace = fns.copy(this.whitespace);\n      term.silent_term = this.silent_term;\n      return term;\n    }\n  }, {\n    key: 'text',\n    set: function set(str) {\n      str = str || '';\n      this._text = str.trim();\n      this.dirty = true;\n      if (this._text !== str) {\n        this.whitespace = build_whitespace(str);\n      }\n      this.normalize();\n    },\n    get: function get() {\n      return this._text;\n    }\n  }, {\n    key: 'isA',\n    get: function get() {\n      return 'Term';\n    }\n  }]);\n\n  return Term;\n}();\n\nTerm = _dereq_('./methods/normalize')(Term);\nTerm = _dereq_('./methods/isA')(Term);\nTerm = _dereq_('./methods/out')(Term);\nTerm = _dereq_('./methods/tag')(Term);\nTerm = _dereq_('./methods/case')(Term);\nTerm = _dereq_('./methods/punctuation')(Term);\n\nmodule.exports = Term;\n\n},{\"./makeUID\":159,\"./methods/case\":160,\"./methods/isA\":161,\"./methods/normalize\":162,\"./methods/out\":166,\"./methods/punctuation\":168,\"./methods/tag\":169,\"./paths\":173,\"./whitespace\":174}],159:[function(_dereq_,module,exports){\n'use strict';\n//this is a not-well-thought-out way to reduce our dependence on `object===object` reference stuff\n//generates a unique id for this term\n//may need to change when the term really-transforms? not sure.\n\nvar uid = function uid(str) {\n  var nums = '';\n  for (var i = 0; i < 5; i++) {\n    nums += parseInt(Math.random() * 9, 10);\n  }\n  return str + '-' + nums;\n};\nmodule.exports = uid;\n\n},{}],160:[function(_dereq_,module,exports){\n'use strict';\n\nvar addMethods = function addMethods(Term) {\n\n  var methods = {\n    toUpperCase: function toUpperCase() {\n      this.text = this.text.toUpperCase();\n      this.tagAs('#UpperCase', 'toUpperCase');\n      return this;\n    },\n    toLowerCase: function toLowerCase() {\n      this.text = this.text.toLowerCase();\n      this.unTag('#TitleCase');\n      this.unTag('#UpperCase');\n      return this;\n    },\n    toTitleCase: function toTitleCase() {\n      this.text = this.text.replace(/^[a-z]/, function (x) {\n        return x.toUpperCase();\n      });\n      this.tagAs('#TitleCase', 'toTitleCase');\n      return this;\n    },\n    //(camelCase() is handled in `./terms` )\n\n    /** is it titlecased because it deserves it? Like a person's name? */\n    needsTitleCase: function needsTitleCase() {\n      var titleCases = ['Person', 'Place', 'Organization', 'Acronym', 'UpperCase', 'Currency', 'RomanNumeral', 'Month', 'WeekDay', 'Holiday', 'Demonym'];\n      for (var i = 0; i < titleCases.length; i++) {\n        if (this.tag[titleCases[i]]) {\n          return true;\n        }\n      }\n      //specific words that keep their titlecase\n      //https://en.wikipedia.org/wiki/Capitonym\n      var irregulars = ['i', 'god', 'allah'];\n      for (var _i = 0; _i < irregulars.length; _i++) {\n        if (this.normal === irregulars[_i]) {\n          return true;\n        }\n      }\n      return false;\n    }\n  };\n  //hook them into result.proto\n  Object.keys(methods).forEach(function (k) {\n    Term.prototype[k] = methods[k];\n  });\n  return Term;\n};\n\nmodule.exports = addMethods;\n\n},{}],161:[function(_dereq_,module,exports){\n'use strict';\n\nvar addMethods = function addMethods(Term) {\n\n  var methods = {\n    /** does it appear to be an acronym, like FBI or M.L.B. */\n    isAcronym: function isAcronym() {\n      //like N.D.A\n      if (this.text.match(/([A-Z]\\.)+[A-Z]?$/)) {\n        return true;\n      }\n      //like 'F.'\n      if (this.text.match(/^[A-Z]\\.$/)) {\n        return true;\n      }\n      //like NDA\n      if (this.text.match(/[A-Z]{3}$/)) {\n        return true;\n      }\n      return false;\n    },\n\n    /** check if it is word-like in english */\n    isWord: function isWord() {\n      var t = this;\n      //assume a contraction produces a word-word\n      if (t.silent_term) {\n        return true;\n      }\n      //no letters or numbers\n      if (!t.text.match(/[a-z|0-9]/i)) {\n        return false;\n      }\n      //has letters, but with no vowels\n      if (t.normal.match(/[a-z]/) && t.normal.length > 1 && !t.normal.match(/[aeiouy]/i)) {\n        return false;\n      }\n      //has numbers but not a 'value'\n      if (t.normal.match(/[0-9]/)) {\n        //s4e\n        if (t.normal.match(/[a-z][0-9][a-z]/)) {\n          return false;\n        }\n        //ensure it looks like a 'value' eg '-$4,231.00'\n        if (!t.normal.match(/^([$-])*?([0-9,\\.])*?([s\\$%])*?$/)) {\n          return false;\n        }\n      }\n      return true;\n    }\n  };\n  //hook them into result.proto\n  Object.keys(methods).forEach(function (k) {\n    Term.prototype[k] = methods[k];\n  });\n  return Term;\n};\n\nmodule.exports = addMethods;\n\n},{}],162:[function(_dereq_,module,exports){\n'use strict';\n\nvar addNormal = _dereq_('./normalize').addNormal;\nvar addRoot = _dereq_('./root');\n\nvar addMethods = function addMethods(Term) {\n\n  var methods = {\n    normalize: function normalize() {\n      addNormal(this);\n      addRoot(this);\n      return this;\n    }\n  };\n  //hook them into result.proto\n  Object.keys(methods).forEach(function (k) {\n    Term.prototype[k] = methods[k];\n  });\n  return Term;\n};\n\nmodule.exports = addMethods;\n\n},{\"./normalize\":163,\"./root\":164}],163:[function(_dereq_,module,exports){\n'use strict';\n\nvar killUnicode = _dereq_('./unicode');\n\n//some basic operations on a string to reduce noise\nexports.normalize = function (str) {\n  str = str || '';\n  str = str.toLowerCase();\n  str = str.trim();\n  //(very) rough asci transliteration -  bjŏrk -> bjork\n  str = killUnicode(str);\n  //hashtags, atmentions\n  str = str.replace(/^[#@]/, '');\n  // coerce single curly quotes\n  str = str.replace(/[\\u2018\\u2019\\u201A\\u201B\\u2032\\u2035]+/g, '\\'');\n  // coerce double curly quotes\n  str = str.replace(/[\\u201C\\u201D\\u201E\\u201F\\u2033\\u2036\"]+/g, '');\n  //coerce unicode elipses\n  str = str.replace(/\\u2026/g, '...');\n\n  //strip leading & trailing grammatical punctuation\n  if (!str.match(/^[:;]/)) {\n    str = str.replace(/\\.{3,}$/g, '');\n    str = str.replace(/['\",\\.!:;\\?\\)]$/g, '');\n    str = str.replace(/^['\"\\(]/g, '');\n  }\n  return str;\n};\n\nexports.addNormal = function (term) {\n  var str = term._text || '';\n  str = exports.normalize(str);\n  //compact acronyms\n  if (term.isAcronym()) {\n    str = str.replace(/\\./g, '');\n  }\n  //nice-numbers\n  str = str.replace(/([0-9]),([0-9])/g, '$1$2');\n  term.normal = str;\n};\n\n// console.log(normalize('Dr. V Cooper'));\n\n},{\"./unicode\":165}],164:[function(_dereq_,module,exports){\n'use strict';\n//\n\nvar rootForm = function rootForm(term) {\n  var str = term.normal || term.silent_term || '';\n  //plural\n  // if (term.tag.Plural) {\n  // str = term.nouns().toSingular().normal || str;\n  // }\n  str = str.replace(/'s\\b/, '');\n  str = str.replace(/'\\b/, '');\n  term.root = str;\n};\n\nmodule.exports = rootForm;\n\n},{}],165:[function(_dereq_,module,exports){\n'use strict';\n//a hugely-ignorant, and widely subjective transliteration of latin, cryllic, greek unicode characters to english ascii.\n//approximate visual (not semantic or phonetic) relationship between unicode and ascii characters\n//http://en.wikipedia.org/wiki/List_of_Unicode_characters\n//https://docs.google.com/spreadsheet/ccc?key=0Ah46z755j7cVdFRDM1A2YVpwa1ZYWlpJM2pQZ003M0E\n\nvar compact = {\n  '!': '¡',\n  '?': '¿Ɂ',\n  'a': 'ªÀÁÂÃÄÅàáâãäåĀāĂăĄąǍǎǞǟǠǡǺǻȀȁȂȃȦȧȺΆΑΔΛάαλАДадѦѧӐӑӒӓƛɅæ',\n  'b': 'ßþƀƁƂƃƄƅɃΒβϐϦБВЪЬбвъьѢѣҌҍҔҕƥƾ',\n  'c': '¢©ÇçĆćĈĉĊċČčƆƇƈȻȼͻͼͽϲϹϽϾϿЄСсєҀҁҪҫ',\n  'd': 'ÐĎďĐđƉƊȡƋƌǷ',\n  'e': 'ÈÉÊËèéêëĒēĔĕĖėĘęĚěƎƏƐǝȄȅȆȇȨȩɆɇΈΕΞΣέεξϱϵ϶ЀЁЕЭеѐёҼҽҾҿӖӗӘәӚӛӬӭ',\n  'f': 'ƑƒϜϝӺӻҒғӶӷſ',\n  'g': 'ĜĝĞğĠġĢģƓǤǥǦǧǴǵ',\n  'h': 'ĤĥĦħƕǶȞȟΉΗЂЊЋНнђћҢңҤҥҺһӉӊ',\n  'I': 'ÌÍÎÏ',\n  'i': 'ìíîïĨĩĪīĬĭĮįİıƖƗȈȉȊȋΊΐΪίιϊІЇії',\n  'j': 'ĴĵǰȷɈɉϳЈј',\n  'k': 'ĶķĸƘƙǨǩΚκЌЖКжкќҚқҜҝҞҟҠҡ',\n  'l': 'ĹĺĻļĽľĿŀŁłƚƪǀǏǐȴȽΙӀӏ',\n  'm': 'ΜϺϻМмӍӎ',\n  'n': 'ÑñŃńŅņŇňŉŊŋƝƞǸǹȠȵΝΠήηϞЍИЙЛПийлпѝҊҋӅӆӢӣӤӥπ',\n  'o': 'ÒÓÔÕÖØðòóôõöøŌōŎŏŐőƟƠơǑǒǪǫǬǭǾǿȌȍȎȏȪȫȬȭȮȯȰȱΌΘΟθοσόϕϘϙϬϭϴОФоѲѳӦӧӨөӪӫ¤ƍΏ',\n  'p': 'ƤƿΡρϷϸϼРрҎҏÞ',\n  'q': 'Ɋɋ',\n  'r': 'ŔŕŖŗŘřƦȐȑȒȓɌɍЃГЯгяѓҐґ',\n  's': 'ŚśŜŝŞşŠšƧƨȘșȿςϚϛϟϨϩЅѕ',\n  't': 'ŢţŤťŦŧƫƬƭƮȚțȶȾΓΤτϮϯТт҂Ҭҭ',\n  'u': 'µÙÚÛÜùúûüŨũŪūŬŭŮůŰűŲųƯưƱƲǓǔǕǖǗǘǙǚǛǜȔȕȖȗɄΰμυϋύϑЏЦЧцџҴҵҶҷӋӌӇӈ',\n  'v': 'νѴѵѶѷ',\n  'w': 'ŴŵƜωώϖϢϣШЩшщѡѿ',\n  'x': '×ΧχϗϰХхҲҳӼӽӾӿ',\n  'y': 'ÝýÿŶŷŸƳƴȲȳɎɏΎΥΫγψϒϓϔЎУучўѰѱҮүҰұӮӯӰӱӲӳ',\n  'z': 'ŹźŻżŽžƩƵƶȤȥɀΖζ'\n};\n//decompress data into two hashes\nvar unicode = {};\nObject.keys(compact).forEach(function (k) {\n  compact[k].split('').forEach(function (s) {\n    unicode[s] = k;\n  });\n});\n\nvar killUnicode = function killUnicode(str) {\n  var chars = str.split('');\n  chars.forEach(function (s, i) {\n    if (unicode[s]) {\n      chars[i] = unicode[s];\n    }\n  });\n  return chars.join('');\n};\nmodule.exports = killUnicode;\n// console.log(fixUnicode('bjŏȒk'));\n\n},{}],166:[function(_dereq_,module,exports){\n'use strict';\n\nvar renderHtml = _dereq_('./renderHtml');\nvar fns = _dereq_('../../paths').fns;\n\nvar methods = {\n  /** a pixel-perfect reproduction of the input, with whitespace preserved */\n  text: function text(r) {\n    return r.whitespace.before + r._text + r.whitespace.after;\n  },\n  /** a lowercased, punctuation-cleaned, whitespace-trimmed version of the word */\n  normal: function normal(r) {\n    return r.normal;\n  },\n  /** even-more normalized than normal */\n  root: function root(r) {\n    return r.root || r.normal;\n  },\n  /** the &encoded term in a span element, with POS as classNames */\n  html: function html(r) {\n    return renderHtml(r);\n  },\n  /** a simplified response for Part-of-Speech tagging*/\n  tags: function tags(r) {\n    return {\n      text: r.text,\n      normal: r.normal,\n      tags: Object.keys(r.tag)\n    };\n  },\n  /** check-print information for the console */\n  debug: function debug(r) {\n    var tags = Object.keys(r.tag).map(function (tag) {\n      return fns.printTag(tag);\n    }).join(', ');\n    var word = r.text;\n    // word = r.whitespace.before + word + r.whitespace.after;\n    word = '\\'' + fns.yellow(word || '-') + '\\'';\n    if (r.dirty) {\n      // word += fns.red('*');\n    }\n    var silent = '';\n    if (r.silent_term) {\n      silent = '[' + r.silent_term + ']';\n    }\n    word = fns.leftPad(word, 25);\n    word += fns.leftPad(silent, 5);\n    console.log('   ' + word + '   ' + '     - ' + tags);\n  }\n};\n\nvar addMethods = function addMethods(Term) {\n  //hook them into result.proto\n  Term.prototype.out = function (fn) {\n    if (!methods[fn]) {\n      fn = 'text';\n    }\n    return methods[fn](this);\n  };\n  return Term;\n};\n\nmodule.exports = addMethods;\n\n},{\"../../paths\":173,\"./renderHtml\":167}],167:[function(_dereq_,module,exports){\n'use strict';\n//turn xml special characters into apersand-encoding.\n//i'm not sure this is perfectly safe.\n\nvar escapeHtml = function escapeHtml(s) {\n  var HTML_CHAR_MAP = {\n    '<': '&lt;',\n    '>': '&gt;',\n    '&': '&amp;',\n    '\"': '&quot;',\n    '\\'': '&#39;',\n    ' ': '&nbsp;'\n  };\n  return s.replace(/[<>&\"' ]/g, function (ch) {\n    return HTML_CHAR_MAP[ch];\n  });\n};\n\n//remove html elements already in the text\n//not tested!\n//http://stackoverflow.com/questions/295566/sanitize-rewrite-html-on-the-client-side\nvar sanitize = function sanitize(html) {\n  var tagBody = '(?:[^\"\\'>]|\"[^\"]*\"|\\'[^\\']*\\')*';\n  var tagOrComment = new RegExp('<(?:'\n  // Comment body.\n  + '!--(?:(?:-*[^->])*--+|-?)'\n  // Special \"raw text\" elements whose content should be elided.\n  + '|script\\\\b' + tagBody + '>[\\\\s\\\\S]*?</script\\\\s*' + '|style\\\\b' + tagBody + '>[\\\\s\\\\S]*?</style\\\\s*'\n  // Regular name\n  + '|/?[a-z]' + tagBody + ')>', 'gi');\n  var oldHtml = void 0;\n  do {\n    oldHtml = html;\n    html = html.replace(tagOrComment, '');\n  } while (html !== oldHtml);\n  return html.replace(/</g, '&lt;');\n};\n\n//turn the term into ~properly~ formatted html\nvar renderHtml = function renderHtml(t) {\n  var classes = Object.keys(t.tag).filter(function (tag) {\n    return tag !== 'Term';\n  });\n  classes = classes.map(function (c) {\n    return 'nl-' + c;\n  });\n  classes = classes.join(' ');\n  var text = sanitize(t.text);\n  text = escapeHtml(text);\n  var el = '<span class=\"' + classes + '\">' + text + '</span>';\n  return escapeHtml(t.whitespace.before) + el + escapeHtml(t.whitespace.after);\n};\n\nmodule.exports = renderHtml;\n\n},{}],168:[function(_dereq_,module,exports){\n'use strict';\n\nvar addMethods = function addMethods(Term) {\n\n  var methods = {\n    /** the punctuation at the end of this term*/\n    endPunctuation: function endPunctuation() {\n      var m = this.text.match(/[a-z]([,:;\\/.(\\.\\.\\.)\\!\\?]+)$/i);\n      if (m) {\n        var allowed = {\n          ',': 'comma',\n          ':': 'colon',\n          ';': 'semicolon',\n          '.': 'period',\n          '...': 'elipses',\n          '!': 'exclamation',\n          '?': 'question'\n        };\n        if (allowed[m[1]]) {\n          return m[1];\n        }\n      }\n      return null;\n    },\n    setPunctuation: function setPunctuation(punct) {\n      this.text = this.text.replace(/[a-z]([,:;\\/.(\\.\\.\\.)\\!\\?]+)$/i, '');\n      this.text += punct;\n      return this;\n    },\n\n    /** check if the term ends with a comma */\n    hasComma: function hasComma() {\n      if (this.endPunctuation() === 'comma') {\n        return true;\n      }\n      return false;\n    },\n\n    killPunctuation: function killPunctuation() {\n      this.text = this._text.replace(/([,:;\\/.(\\.\\.\\.)\\!\\?]+)$/, '');\n      return this;\n    }\n  };\n  //hook them into result.proto\n  Object.keys(methods).forEach(function (k) {\n    Term.prototype[k] = methods[k];\n  });\n  return Term;\n};\n\nmodule.exports = addMethods;\n\n},{}],169:[function(_dereq_,module,exports){\n'use strict';\n\nvar setTag = _dereq_('./setTag');\nvar _unTag = _dereq_('./unTag');\nvar tagset = _dereq_('./paths').tags;\n\nvar addMethods = function addMethods(Term) {\n\n  var methods = {\n    /** set the term as this part-of-speech */\n    tagAs: function tagAs(tag, reason) {\n      setTag(this, tag, reason);\n    },\n    /** remove this part-of-speech from the term*/\n    unTag: function unTag(tag, reason) {\n      _unTag(this, tag, reason);\n    },\n\n    /** is this tag compatible with this word */\n    canBe: function canBe(tag) {\n      tag = tag || '';\n      tag = tag.replace(/^#/, '');\n      var not = tagset[tag].not || [];\n      for (var i = 0; i < not.length; i++) {\n        if (this.tag[not[i]]) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n  };\n\n  //hook them into term.prototype\n  Object.keys(methods).forEach(function (k) {\n    Term.prototype[k] = methods[k];\n  });\n  return Term;\n};\n\nmodule.exports = addMethods;\n\n},{\"./paths\":170,\"./setTag\":171,\"./unTag\":172}],170:[function(_dereq_,module,exports){\narguments[4][122][0].apply(exports,arguments)\n},{\"../../paths\":173,\"dup\":122}],171:[function(_dereq_,module,exports){\n'use strict';\n//set a term as a particular Part-of-speech\n\nvar path = _dereq_('./paths');\nvar log = path.log;\nvar tagset = path.tags;\nvar unTag = _dereq_('./unTag');\n\nvar makeCompatible = function makeCompatible(term, tag, reason) {\n  if (!tagset[tag]) {\n    return;\n  }\n  //find incompatible tags\n  var not = tagset[tag].not || [];\n  for (var i = 0; i < not.length; i++) {\n    unTag(term, not[i], reason);\n  }\n};\n\nvar tag_one = function tag_one(term, tag, reason) {\n  //ignore if already tagged\n  if (term.tag[tag]) {\n    return;\n  }\n  reason = reason || '';\n  //clean first\n  makeCompatible(term, tag, reason);\n  // unTag(term, tag, reason);\n  log.tagAs(term, tag, reason);\n  term.tag[tag] = true;\n};\n\nvar tagAll = function tagAll(term, tag, reason) {\n  if (!term || !tag || typeof tag !== 'string') {\n    // console.log(tag)\n    return;\n  }\n  tag = tag || '';\n  tag = tag.replace(/^#/, '');\n  tag_one(term, tag, reason);\n  //find assumed-tags\n  if (tagset[tag]) {\n    var tags = tagset[tag].parents || [];\n    for (var i = 0; i < tags.length; i++) {\n      tag_one(term, tags[i], '-');\n    }\n  }\n};\n\nmodule.exports = tagAll;\n// console.log(tagset['Person']);\n\n},{\"./paths\":170,\"./unTag\":172}],172:[function(_dereq_,module,exports){\n'use strict';\n//set a term as a particular Part-of-speech\n\nvar path = _dereq_('./paths');\nvar log = path.log;\nvar tagset = path.tags;\n\n//remove a tag from a term\nvar unTagOne = function unTagOne(term, tag, reason) {\n  if (term.tag[tag]) {\n    log.tell('   --' + tag + ' ' + (reason || ''));\n    delete term.tag[tag];\n  }\n};\n\nvar unTagAll = function unTagAll(term, tag, reason) {\n  if (!term || !tag) {\n    return;\n  }\n  unTagOne(term, tag, reason);\n  if (tagset[tag]) {\n    //pull-out their children (dependants) too\n    //this should probably be recursive, instead of just 2-deep\n    var killAlso = tagset[tag].children || [];\n    for (var o = 0; o < killAlso.length; o++) {\n      //kill its child\n      unTagOne(term, killAlso[o], reason);\n      //kill grandchildren too\n      var kill2 = tagset[killAlso[o]].children || [];\n      for (var i2 = 0; i2 < kill2.length; i2++) {\n        unTagOne(term, kill2[i2], reason);\n      }\n    }\n  }\n  return;\n};\nmodule.exports = unTagAll;\n\n},{\"./paths\":170}],173:[function(_dereq_,module,exports){\n'use strict';\n\nmodule.exports = {\n  fns: _dereq_('../fns'),\n  log: _dereq_('../log'),\n  data: _dereq_('../data'),\n  tags: _dereq_('../tags')\n};\n\n},{\"../data\":8,\"../fns\":40,\"../log\":42,\"../tags\":156}],174:[function(_dereq_,module,exports){\n'use strict';\n//seperate the 'meat' from the trailing/leading whitespace.\n//works in concert with ./src/result/tokenize.js\n\nvar build_whitespace = function build_whitespace(str) {\n  var whitespace = {\n    before: '',\n    after: ''\n  };\n  //get before punctuation/whitespace\n  var m = str.match(/^(\\s|-+|\\.\\.+)+/);\n  if (m) {\n    whitespace.before = m[0];\n    str = str.replace(/^(\\s|-+|\\.\\.+)+/, '');\n  }\n  //get after punctuation/whitespace\n  m = str.match(/(\\s+|-+|\\.\\.+)$/);\n  if (m) {\n    str = str.replace(/(\\s+|-+|\\.\\.+)$/, '');\n    whitespace.after = m[0];\n  }\n  return {\n    whitespace: whitespace,\n    text: str\n  };\n};\nmodule.exports = build_whitespace;\n\n},{}],175:[function(_dereq_,module,exports){\n'use strict';\n\nvar Term = _dereq_('../term');\n\nvar notWord = {\n  '-': true,\n  '--': true,\n  '...': true\n};\n\n//turn a string into an array of terms (naiive for now, lumped later)\nvar fromString = function fromString(str) {\n  var all = [];\n  //start with a naiive split\n  str = str || '';\n  if (typeof str === 'number') {\n    str = '' + str;\n  }\n  var firstSplit = str.split(/(\\S+)/);\n  var arr = [];\n  for (var i = 0; i < firstSplit.length; i++) {\n    var word = firstSplit[i];\n    var hasHyphen = word.match(/^([a-z]+)(-)([a-z0-9].*)/i);\n    if (hasHyphen) {\n      //support multiple-hyphenated-terms\n      var hyphens = word.split('-');\n      for (var o = 0; o < hyphens.length; o++) {\n        if (o === hyphens.length - 1) {\n          arr.push(hyphens[o]);\n        } else {\n          arr.push(hyphens[o] + '-');\n        }\n      }\n    } else {\n      arr.push(word);\n    }\n  }\n  //greedy merge whitespace+arr to the right\n  var carry = '';\n  for (var _i = 0; _i < arr.length; _i++) {\n    //if it's more than a whitespace\n    if (arr[_i].match(/\\S/) && !notWord[arr[_i]]) {\n      all.push(carry + arr[_i]);\n      carry = '';\n    } else {\n      carry += arr[_i];\n    }\n  }\n  //handle last one\n  if (carry && all.length > 0) {\n    all[all.length - 1] += carry; //put it on the end\n  }\n  return all.map(function (t) {\n    return new Term(t);\n  });\n};\nmodule.exports = fromString;\n\n},{\"../term\":158}],176:[function(_dereq_,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar tagger = _dereq_('./tagger');\nvar build = _dereq_('./build');\n\nvar Terms = function () {\n  function Terms(arr, lexicon, refText, refTerms) {\n    var _this = this;\n\n    _classCallCheck(this, Terms);\n\n    this.terms = arr;\n    this.lexicon = lexicon;\n    this.refText = refText;\n    this._refTerms = refTerms;\n    this.count = undefined;\n    this.get = function (n) {\n      return _this.terms[n];\n    };\n  }\n\n  _createClass(Terms, [{\n    key: 'posTag',\n    value: function posTag() {\n      tagger(this);\n      return this;\n    }\n  }, {\n    key: 'firstTerm',\n    value: function firstTerm() {\n      return this.terms[0];\n    }\n  }, {\n    key: 'lastTerm',\n    value: function lastTerm() {\n      return this.terms[this.terms.length - 1];\n    }\n  }, {\n    key: 'all',\n    value: function all() {\n      return this.parent;\n    }\n  }, {\n    key: 'data',\n    value: function data() {\n      return {\n        text: this.out('text'),\n        normal: this.out('normal')\n      };\n    }\n  }, {\n    key: 'found',\n    get: function get() {\n      return this.terms.length > 0;\n    }\n  }, {\n    key: 'length',\n    get: function get() {\n      return this.terms.length;\n    }\n  }, {\n    key: 'isA',\n    get: function get() {\n      return 'Terms';\n    }\n  }, {\n    key: 'refTerms',\n    get: function get() {\n      return this._refTerms || this;\n    },\n    set: function set(ts) {\n      this._refTerms = ts;\n      return this;\n    }\n  }, {\n    key: 'dirty',\n    set: function set(dirt) {\n      this.terms.forEach(function (t) {\n        t.dirty = dirt;\n      });\n    }\n  }, {\n    key: 'parent',\n    get: function get() {\n      return this.refText || this;\n    },\n    set: function set(r) {\n      this.refText = r;\n      return this;\n    }\n  }, {\n    key: 'parentTerms',\n    get: function get() {\n      return this.refTerms || this;\n    },\n    set: function set(r) {\n      this.refTerms = r;\n      return this;\n    }\n  }, {\n    key: 'whitespace',\n    get: function get() {\n      var _this2 = this;\n\n      return {\n        before: function before(str) {\n          _this2.firstTerm().whitespace.before = str;\n          return _this2;\n        },\n        after: function after(str) {\n          _this2.lastTerm().whitespace.after = str;\n          return _this2;\n        }\n      };\n    }\n  }], [{\n    key: 'fromString',\n    value: function fromString(str, lexicon) {\n      var termArr = build(str);\n      var ts = new Terms(termArr, lexicon, null);\n      //give each term a reference to this ts\n      ts.terms.forEach(function (t) {\n        t.parentTerms = ts;\n      });\n      ts.posTag();\n      return ts;\n    }\n  }]);\n\n  return Terms;\n}();\n\nTerms = _dereq_('./match')(Terms);\nTerms = _dereq_('./match/not')(Terms);\nTerms = _dereq_('./methods/tag')(Terms);\nTerms = _dereq_('./methods/loops')(Terms);\nTerms = _dereq_('./methods/delete')(Terms);\nTerms = _dereq_('./methods/insert')(Terms);\nTerms = _dereq_('./methods/misc')(Terms);\nTerms = _dereq_('./methods/out')(Terms);\nTerms = _dereq_('./methods/replace')(Terms);\nTerms = _dereq_('./methods/split')(Terms);\nTerms = _dereq_('./methods/transform')(Terms);\nmodule.exports = Terms;\n\n},{\"./build\":175,\"./match\":177,\"./match/not\":183,\"./methods/delete\":184,\"./methods/insert\":185,\"./methods/loops\":186,\"./methods/misc\":187,\"./methods/out\":188,\"./methods/replace\":189,\"./methods/split\":190,\"./methods/tag\":191,\"./methods/transform\":192,\"./tagger\":204}],177:[function(_dereq_,module,exports){\n'use strict';\n//\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar syntax = _dereq_('./lib/syntax');\nvar startHere = _dereq_('./lib/startHere');\nvar Text = _dereq_('../../result/index');\n// const diff = require('./diff');\n\n\nvar matchMethods = function matchMethods(Terms) {\n\n  //support {word:true} whitelist\n  var matchObj = function matchObj(ts, obj) {\n    var matches = ts.terms.filter(function (t) {\n      return obj[t.normal];\n    });\n    matches = matches.map(function (a) {\n      return new Terms([a], ts.lexicon, ts.refText, ts.refTerms);\n    });\n    return new Text(matches, ts.lexicon, ts.parent);\n  };\n\n  //support [word, word] whitelist\n  var matchArr = function matchArr(r, arr) {\n    //its faster this way\n    var obj = arr.reduce(function (h, a) {\n      h[a] = true;\n      return h;\n    }, {});\n    return matchObj(r, obj);\n  };\n\n  //support regex-like whitelist-match\n  var matchString = function matchString(r, str, verbose) {\n    var matches = [];\n    var regs = syntax(str);\n    for (var t = 0; t < r.terms.length; t++) {\n      //don't loop through if '^'\n      if (regs[0] && regs[0].starting && t > 0) {\n        break;\n      }\n      var m = startHere(r, t, regs, verbose);\n      if (m) {\n        matches.push(m);\n        //ok, don't try to match these again.\n        var skip = m.length - 1;\n        t += skip; //this could use some work\n      }\n    }\n    matches = matches.map(function (a) {\n      return new Terms(a, r.lexicon, r.refText, r.refTerms);\n    });\n    return new Text(matches, r.lexicon, r.parent);\n  };\n\n  var methods = {\n\n    /**match all */\n    match: function match(want, verbose) {\n      //support regex-like whitelist-match\n      if (typeof want === 'string') {\n        return matchString(this, want, verbose);\n      }\n      if ((typeof want === 'undefined' ? 'undefined' : _typeof(want)) === 'object') {\n        var type = Object.prototype.toString.call(want);\n        //support [word, word] whitelist\n        if (type === '[object Array]') {\n          return matchArr(this, want, verbose);\n        }\n        //support {word:true} whitelist\n        if (type === '[object Object]') {\n          return matchObj(this, want, verbose);\n        }\n      }\n      return this;\n    },\n\n    /**return first match */\n    matchOne: function matchOne(str) {\n      var regs = syntax(str);\n      for (var t = 0; t < this.terms.length; t++) {\n        //don't loop through if '^'\n        if (regs[0] && regs[0].starting && t > 0) {\n          break;\n        }\n        var m = startHere(this, t, regs);\n        if (m) {\n          return m;\n        }\n      }\n      return null;\n    },\n\n    /**return first match */\n    has: function has(str) {\n      var m = this.matchOne(str);\n      return !!m;\n    }\n\n  };\n\n  //hook them into result.proto\n  Object.keys(methods).forEach(function (k) {\n    Terms.prototype[k] = methods[k];\n  });\n  return Terms;\n};\n\nmodule.exports = matchMethods;\n\n},{\"../../result/index\":44,\"./lib/startHere\":181,\"./lib/syntax\":182}],178:[function(_dereq_,module,exports){\n'use strict';\n\nvar fns = _dereq_('./paths').fns;\n\n//compare 1 term to one reg\nvar perfectMatch = function perfectMatch(term, reg) {\n  if (!term || !reg) {\n    return false;\n  }\n  //support '.' - any\n  if (reg.anyOne) {\n    return true;\n  }\n  //pos-match\n  if (reg.tag) {\n    for (var i = 0; i < reg.tag.length; i++) {\n      var tag = reg.tag[i];\n      if (term.tag[tag]) {\n        return true;\n      }\n    }\n    return false;\n  }\n  //one-of term-match\n  if (reg.oneOf) {\n    for (var _i = 0; _i < reg.oneOf.length; _i++) {\n      var str = reg.oneOf[_i];\n      //try a tag match\n      if (str.match(/^#/)) {\n        var _tag = str.replace(/^#/, '');\n        _tag = fns.titleCase(_tag);\n        if (term.tag[_tag]) {\n          return true;\n        }\n        //try a string-match\n      } else if (term.normal === str || term.text === str) {\n        return true;\n      }\n    }\n    return false;\n  }\n  //text-match\n  if (reg.normal) {\n    if (term.normal === reg.normal || term.text === reg.normal || term.root === reg.normal) {\n      return true;\n    }\n    //try contraction match too\n    if (term.silent_term === reg.normal) {\n      return true;\n    }\n  }\n  return false;\n};\n\n//wrap above method, to support '!' negation\nvar isMatch = function isMatch(term, reg, verbose) {\n  var found = perfectMatch(term, reg, verbose);\n  if (reg.negative) {\n    found = !!!found;\n  }\n  return found;\n};\nmodule.exports = isMatch;\n\n},{\"./paths\":180}],179:[function(_dereq_,module,exports){\n'use strict';\n\nvar fns = _dereq_('./paths').fns;\n\nvar almostMatch = function almostMatch(reg_str, term) {\n  return fns.startsWith(term.normal, reg_str);\n};\n\n// match ['john', 'smith'] regs, when the term is lumped\nvar lumpMatch = function lumpMatch(term, regs, reg_i) {\n  var reg_str = regs[reg_i].normal;\n  //is this a partial match? 'tony'& 'tony hawk'\n  if (almostMatch(reg_str, term)) {\n    //try to grow it\n    for (reg_i = reg_i + 1; reg_i < regs.length; reg_i++) {\n      reg_str += ' ' + regs[reg_i].normal;\n      //is it now perfect?\n      if (reg_str === term.normal) {\n        return reg_i;\n      }\n      //is it still almost?\n      if (almostMatch(reg_str, term)) {\n        continue;\n      }\n      return null;\n    }\n  }\n  return null;\n};\n\nmodule.exports = lumpMatch;\n\n},{\"./paths\":180}],180:[function(_dereq_,module,exports){\n'use strict';\n\nmodule.exports = {\n  fns: _dereq_('../../../fns'),\n  log: _dereq_('../../../log')\n};\n\n},{\"../../../fns\":40,\"../../../log\":42}],181:[function(_dereq_,module,exports){\n'use strict';\n\nvar lumpMatch = _dereq_('./lumpMatch');\nvar isMatch = _dereq_('./isMatch');\n\n// match everything until this point - '*'\nvar greedyUntil = function greedyUntil(ts, i, reg) {\n  for (i = i; i < ts.length; i++) {\n    var t = ts.terms[i];\n    if (isMatch(t, reg)) {\n      return i;\n    }\n  }\n  return null;\n};\n\n//keep matching this reg as long as possible\nvar greedyOf = function greedyOf(ts, i, reg, until) {\n  for (i = i; i < ts.length; i++) {\n    var t = ts.terms[i];\n    //found next reg ('until')\n    if (until && isMatch(t, until)) {\n      return i;\n    }\n    //die here\n    if (!isMatch(t, reg)) {\n      return i;\n    }\n  }\n  return i;\n};\n\n//try and match all regs, starting at this term\nvar startHere = function startHere(ts, startAt, regs, verbose) {\n  var term_i = startAt;\n  //check each regex-thing\n  for (var reg_i = 0; reg_i < regs.length; reg_i++) {\n    var term = ts.terms[term_i];\n    var reg = regs[reg_i];\n    var next_reg = regs[reg_i + 1];\n\n    if (!term) {\n      //we didn't need it anyways\n      if (reg.optional) {\n        continue;\n      }\n      return null;\n    }\n\n    //catch '^' errors\n    if (reg.starting && term_i > 0) {\n      return null;\n    }\n\n    //catch '$' errors\n    if (reg.ending && term_i !== ts.length - 1 && !reg.minMax) {\n      return null;\n    }\n\n    //support '*'\n    if (regs[reg_i].astrix) {\n      //just grab until the end..\n      if (!next_reg) {\n        return ts.terms.slice(startAt, ts.length);\n      }\n      var foundAt = greedyUntil(ts, term_i, regs[reg_i + 1]);\n      if (!foundAt) {\n        return null;\n      }\n      term_i = foundAt + 1;\n      reg_i += 1;\n      continue;\n    }\n\n    //support '{x,y}'\n    if (regs[reg_i].minMax) {\n      //on last reg?\n      if (!next_reg) {\n        var len = ts.length;\n        var max = regs[reg_i].minMax.max + startAt;\n        //if it must go to the end, but can't\n        if (regs[reg_i].ending && max < len) {\n          return null;\n        }\n        //dont grab past the end\n        if (max < len) {\n          len = max;\n        }\n        return ts.terms.slice(startAt, len);\n      }\n      //otherwise, match until this next thing\n      var _foundAt = greedyUntil(ts, term_i, next_reg);\n      if (!_foundAt) {\n        return null;\n      }\n      //if it's too close/far..\n      var minMax = regs[reg_i].minMax;\n      if (_foundAt < minMax.min || _foundAt > minMax.max) {\n        return null;\n      }\n      term_i = _foundAt + 1;\n      reg_i += 1;\n      continue;\n    }\n\n    //if optional, check next one\n    if (reg.optional) {\n      var until = regs[reg_i + 1];\n      term_i = greedyOf(ts, term_i, reg, until);\n      continue;\n    }\n\n    //check a perfect match\n    if (isMatch(term, reg, verbose)) {\n      term_i += 1;\n      //try to greedy-match '+'\n      if (reg.consecutive) {\n        var _until = regs[reg_i + 1];\n        term_i = greedyOf(ts, term_i, reg, _until);\n      }\n      continue;\n    }\n\n    if (term.silent_term && !term.normal) {\n      //skip over silent contraction terms\n      //we will continue on it, but not start on it\n      if (reg_i === 0) {\n        return null;\n      }\n      //try the next term, but with this regex again\n      term_i += 1;\n      reg_i -= 1;\n      continue;\n    }\n\n    //handle partial-matches of lumped terms\n    var lumpUntil = lumpMatch(term, regs, reg_i);\n    if (lumpUntil) {\n      reg_i = lumpUntil;\n      term_i += 1;\n      continue;\n    }\n\n    //was it optional anways?\n    if (reg.optional) {\n      continue;\n    }\n    return null;\n  }\n  return ts.terms.slice(startAt, term_i);\n};\n\nmodule.exports = startHere;\n\n},{\"./isMatch\":178,\"./lumpMatch\":179}],182:[function(_dereq_,module,exports){\n'use strict';\n// parse a search lookup term find the regex-like syntax in this term\n\nvar fns = _dereq_('./paths').fns;\n\n//turn 'regex-like' search string into parsed json\nvar parse_term = function parse_term(term) {\n  term = term || '';\n  term = term.trim();\n  var reg = {\n    optional: false\n  };\n  //order matters..\n\n  //negation ! flag\n  if (fns.startsWith(term, '!')) {\n    term = term.substr(1, term.length);\n    reg.negative = true;\n  }\n  //leading ^ flag\n  if (fns.startsWith(term, '^')) {\n    term = term.substr(1, term.length);\n    reg.starting = true;\n  }\n  //trailing $ flag means ending\n  if (fns.endsWith(term, '$')) {\n    term = term.replace(/\\$$/, '');\n    reg.ending = true;\n  }\n  //optional flag\n  if (fns.endsWith(term, '?')) {\n    term = term.replace(/\\?$/, '');\n    reg.optional = true;\n  }\n  //atleast-one-but-greedy flag\n  if (fns.endsWith(term, '+')) {\n    term = term.replace(/\\+$/, '');\n    reg.consecutive = true;\n  }\n  //pos flag\n  if (fns.startsWith(term, '#')) {\n    term = term.replace(/^\\#/, '');\n    reg.tag = [fns.titleCase(term)];\n    term = null;\n  }\n  //one_of options flag\n  if (fns.startsWith(term, '(') && fns.endsWith(term, ')')) {\n    term = term.replace(/\\)$/, '');\n    term = term.replace(/^\\(/, '');\n    reg.oneOf = term.split(/\\|/g);\n    term = null;\n  }\n  //min/max any '{1,3}'\n  if (fns.startsWith(term, '{') && fns.endsWith(term, '}')) {\n    var m = term.match(/\\{([0-9]+), ?([0-9]+)\\}/);\n    reg.minMax = {\n      min: parseInt(m[1], 10),\n      max: parseInt(m[2], 10)\n    };\n    term = null;\n  }\n  //a period means any one term\n  if (term === '.') {\n    reg.anyOne = true;\n    term = null;\n  }\n  //a * means anything until sentence end\n  if (term === '*') {\n    reg.astrix = true;\n    term = null;\n  }\n  reg.normal = term;\n  if (reg.normal) {\n    reg.normal = reg.normal.toLowerCase();\n  }\n  return reg;\n};\n\n//turn a match string into an array of objects\nvar parse_all = function parse_all(reg) {\n  reg = reg || '';\n  reg = reg.split(/ +/);\n  return reg.map(parse_term);\n};\n// console.log(parse_all(''));\n\nmodule.exports = parse_all;\n\n},{\"./paths\":180}],183:[function(_dereq_,module,exports){\n'use strict';\n//\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar syntax = _dereq_('./lib/syntax');\nvar startHere = _dereq_('./lib/startHere');\nvar Text = _dereq_('../../result/index');\n// const diff = require('./diff');\n\nvar addfns = function addfns(Terms) {\n\n  var fns = {\n    //blacklist from a {word:true} object\n    notObj: function notObj(r, obj) {\n      var matches = [];\n      var current = [];\n      r.terms.forEach(function (t) {\n        //TODO: support multi-word blacklists\n        //we should blacklist this term\n        if (obj.hasOwnProperty(t.normal)) {\n          if (current.length) {\n            matches.push(current);\n          }\n          current = [];\n        } else {\n          current.push(t);\n        }\n      });\n      //add remainder\n      if (current.length) {\n        matches.push(current);\n      }\n      matches = matches.map(function (a) {\n        return new Terms(a, r.lexicon, r.refText, r.refTerms);\n      });\n      return new Text(matches, r.lexicon, r.parent);\n    },\n\n    //blacklist from a match string\n    notString: function notString(r, want, verbose) {\n      var matches = [];\n      var regs = syntax(want);\n      var terms = [];\n      //try the match starting from each term\n      for (var i = 0; i < r.terms.length; i++) {\n        var bad = startHere(r, i, regs, verbose);\n        if (bad) {\n          //reset matches\n          if (terms.length > 0) {\n            matches.push(terms);\n            terms = [];\n          }\n          //skip these terms now\n          i += bad.length - 1;\n          continue;\n        }\n        terms.push(r.terms[i]);\n      }\n      //remaining ones\n      if (terms.length > 0) {\n        matches.push(terms);\n      }\n      matches = matches.map(function (a) {\n        return new Terms(a, r.lexicon, r.refText, r.refTerms);\n      });\n      // return matches\n      return new Text(matches, r.lexicon, r.parent);\n    }\n  };\n  //blacklist from a [word, word] array\n  fns.notArray = function (r, arr) {\n    var obj = arr.reduce(function (h, a) {\n      h[a] = true;\n      return h;\n    }, {});\n    return fns.notObj(r, obj);\n  };\n\n  /**return everything but these matches*/\n  Terms.prototype.not = function (want, verbose) {\n    //support [word, word] blacklist\n    if ((typeof want === 'undefined' ? 'undefined' : _typeof(want)) === 'object') {\n      var type = Object.prototype.toString.call(want);\n      if (type === '[object Array]') {\n        return fns.notArray(this, want, verbose);\n      }\n      if (type === '[object Object]') {\n        return fns.notObj(this, want, verbose);\n      }\n    }\n    if (typeof want === 'string') {\n      return fns.notString(this, want, verbose);\n    }\n    return this;\n  };\n  return Terms;\n};\n\nmodule.exports = addfns;\n\n},{\"../../result/index\":44,\"./lib/startHere\":181,\"./lib/syntax\":182}],184:[function(_dereq_,module,exports){\n'use strict';\n\nvar mutate = _dereq_('../mutate');\n\nvar deleteMethods = function deleteMethods(Terms) {\n\n  var methods = {\n\n    'delete': function _delete(reg) {\n      //don't touch parent if empty\n      if (!this.found) {\n        return this;\n      }\n      //remove all selected\n      if (!reg) {\n        this.parentTerms = mutate.deleteThese(this.parentTerms, this);\n        return this;\n      }\n      //only remove a portion of this\n      var found = this.match(reg);\n      if (found.found) {\n        var r = mutate.deleteThese(this, found);\n        return r;\n      }\n      return this.parentTerms;\n    }\n\n  };\n\n  //hook them into result.proto\n  Object.keys(methods).forEach(function (k) {\n    Terms.prototype[k] = methods[k];\n  });\n  return Terms;\n};\n\nmodule.exports = deleteMethods;\n\n},{\"../mutate\":193}],185:[function(_dereq_,module,exports){\n'use strict';\n\nvar mutate = _dereq_('../mutate');\n\n//whitespace\nvar addSpaceAt = function addSpaceAt(ts, i) {\n  if (!ts.terms.length || !ts.terms[i]) {\n    return ts;\n  }\n  ts.terms[i].whitespace.before = ' ';\n  return ts;\n};\n\nvar insertMethods = function insertMethods(Terms) {\n\n  //accept any sorta thing\n  var ensureTerms = function ensureTerms(input) {\n    if (input.isA === 'Terms') {\n      return input;\n    }\n    if (input.isA === 'Term') {\n      return new Terms([input]);\n    }\n    return Terms.fromString(input);\n  };\n\n  var methods = {\n\n    insertBefore: function insertBefore(input, tag) {\n      var original_l = this.terms.length;\n      var ts = ensureTerms(input);\n      if (tag) {\n        ts.tagAs(tag);\n      }\n      var index = this.index();\n      //pad a space on parent\n      addSpaceAt(this.parentTerms, index);\n      if (index > 0) {\n        addSpaceAt(ts, 0); //if in middle of sentence\n      }\n      this.parentTerms.terms = mutate.insertAt(this.parentTerms.terms, index, ts);\n      //also copy them to current selection\n      if (this.terms.length === original_l) {\n        this.terms = ts.terms.concat(this.terms);\n      }\n      return this;\n    },\n\n    insertAfter: function insertAfter(input, tag) {\n      var original_l = this.terms.length;\n      var ts = ensureTerms(input);\n      if (tag) {\n        ts.tagAs(tag);\n      }\n      var index = this.terms[this.terms.length - 1].index();\n      //beginning whitespace to ts\n      addSpaceAt(ts, 0);\n      this.parentTerms.terms = mutate.insertAt(this.parentTerms.terms, index + 1, ts);\n      //also copy them to current selection\n      if (this.terms.length === original_l) {\n        this.terms = this.terms.concat(ts.terms);\n      }\n      return this;\n    },\n\n    insertAt: function insertAt(index, input, tag) {\n      if (index < 0) {\n        index = 0;\n      }\n      var original_l = this.terms.length;\n      var ts = ensureTerms(input);\n      //tag that thing too\n      if (tag) {\n        ts.tagAs(tag);\n      }\n      if (index > 0) {\n        addSpaceAt(ts, 0); //if in middle of sentence\n      }\n      this.parentTerms.terms = mutate.insertAt(this.parentTerms.terms, index, ts);\n      //also copy them to current selection\n      if (this.terms.length === original_l) {\n        //splice the new terms into this (yikes!)\n        Array.prototype.splice.apply(this.terms, [index, 0].concat(ts.terms));\n      }\n      //beginning whitespace to ts\n      if (index === 0) {\n        this.terms[0].whitespace.before = '';\n        ts.terms[ts.terms.length - 1].whitespace.after = ' ';\n      }\n      return this;\n    }\n\n  };\n\n  //hook them into result.proto\n  Object.keys(methods).forEach(function (k) {\n    Terms.prototype[k] = methods[k];\n  });\n  return Terms;\n};\n\nmodule.exports = insertMethods;\n\n},{\"../mutate\":193}],186:[function(_dereq_,module,exports){\n'use strict';\n//these methods are simply term-methods called in a loop\n\nvar addMethods = function addMethods(Terms) {\n\n  var foreach = [\n  // ['tagAs'],\n  // ['unTag'],\n  // ['canBe'],\n  ['toUpperCase', 'UpperCase'], ['toLowerCase'], ['toTitleCase', 'TitleCase']];\n\n  foreach.forEach(function (arr) {\n    var k = arr[0];\n    var tag = arr[1];\n    var myFn = function myFn() {\n      var args = arguments;\n      this.terms.forEach(function (t) {\n        t[k].apply(t, args);\n      });\n      if (tag) {\n        this.tagAs(tag, k);\n      }\n      return this;\n    };\n    Terms.prototype[k] = myFn;\n  });\n  return Terms;\n};\n\nmodule.exports = addMethods;\n\n},{}],187:[function(_dereq_,module,exports){\n'use strict';\n\nvar miscMethods = function miscMethods(Terms) {\n\n  var methods = {\n    term: function term(n) {\n      return this.terms[n];\n    },\n    first: function first() {\n      var t = this.terms[0];\n      return new Terms([t], this.lexicon, this.refText, this.refTerms);\n    },\n    last: function last() {\n      var t = this.terms[this.terms.length - 1];\n      return new Terms([t], this.lexicon, this.refText, this.refTerms);\n    },\n    slice: function slice(start, end) {\n      var terms = this.terms.slice(start, end);\n      return new Terms(terms, this.lexicon, this.refText, this.refTerms);\n    },\n    endPunctuation: function endPunctuation() {\n      return this.last().terms[0].endPunctuation();\n    },\n    canBe: function canBe(tag) {\n      tag = tag || '';\n      tag = tag.replace(/^#/, '');\n      //atleast one of these\n      for (var i = 0; i < this.terms.length; i++) {\n        if (!this.terms[i].canBe(tag)) {\n          return false;\n        }\n      }\n      return true;\n    },\n    index: function index() {\n      var parent = this.parentTerms;\n      var first = this.terms[0];\n      if (!parent || !first) {\n        return null; //maybe..\n      }\n      for (var i = 0; i < parent.terms.length; i++) {\n        if (first === parent.terms[i]) {\n          return i;\n        }\n      }\n      return null;\n    },\n    termIndex: function termIndex() {\n      var first = this.terms[0];\n      var ref = this.refText || this;\n      if (!ref || !first) {\n        return null; //maybe..\n      }\n      // console.log(ref);\n      var n = 0;\n      for (var i = 0; i < ref.list.length; i++) {\n        var ts = ref.list[i];\n        for (var o = 0; o < ts.terms.length; o++) {\n          if (ts.terms[o] === first) {\n            return n;\n          }\n          n += 1;\n        }\n      }\n      return n;\n    },\n    //number of characters in this match\n    chars: function chars() {\n      return this.terms.reduce(function (i, t) {\n        i += t.whitespace.before.length;\n        i += t.text.length;\n        i += t.whitespace.after.length;\n        return i;\n      }, 0);\n    },\n\n    //just .length\n    wordCount: function wordCount() {\n      return this.terms.length;\n    },\n\n\n    //this has term-order logic, so has to be here\n    toCamelCase: function toCamelCase() {\n      this.toTitleCase();\n      this.terms.forEach(function (t, i) {\n        if (i !== 0) {\n          t.whitespace.before = '';\n        }\n        t.whitespace.after = '';\n      });\n      this.tagAs('#CamelCase', 'toCamelCase');\n      return this;\n    }\n  };\n\n  //hook them into result.proto\n  Object.keys(methods).forEach(function (k) {\n    Terms.prototype[k] = methods[k];\n  });\n  return Terms;\n};\n\nmodule.exports = miscMethods;\n\n},{}],188:[function(_dereq_,module,exports){\n'use strict';\n\nvar fns = _dereq_('../paths').fns;\n\nvar methods = {\n  text: function text(ts) {\n    return ts.terms.reduce(function (str, t) {\n      str += t.out('text');\n      return str;\n    }, '');\n  },\n\n  normal: function normal(ts) {\n    var terms = ts.terms.filter(function (t) {\n      return t.text;\n    });\n    terms = terms.map(function (t) {\n      return t.normal; //+ punct;\n    });\n    return terms.join(' ');\n  },\n\n  grid: function grid(ts) {\n    var str = '  ';\n    str += ts.terms.reduce(function (s, t) {\n      s += fns.leftPad(t.text, 11);\n      return s;\n    }, '');\n    return str + '\\n\\n';\n  },\n\n  color: function color(ts) {\n    return ts.terms.reduce(function (s, t) {\n      s += fns.printTerm(t);\n      return s;\n    }, '');\n  },\n  /** no punctuation, fancy business **/\n  root: function root(ts) {\n    return ts.terms.filter(function (t) {\n      return t.text;\n    }).map(function (t) {\n      return t.root;\n    }).join(' ').toLowerCase();\n  },\n\n  html: function html(ts) {\n    return ts.terms.map(function (t) {\n      return t.render.html();\n    }).join(' ');\n  },\n  debug: function debug(ts) {\n    ts.terms.forEach(function (t) {\n      t.out('debug');\n    });\n  }\n};\nmethods.plaintext = methods.text;\nmethods.normalize = methods.normal;\nmethods.normalized = methods.normal;\nmethods.colors = methods.color;\nmethods.tags = methods.terms;\n\nvar renderMethods = function renderMethods(Terms) {\n  Terms.prototype.out = function (str) {\n    if (methods[str]) {\n      return methods[str](this);\n    }\n    return methods.text(this);\n  };\n  //check method\n  Terms.prototype.debug = function () {\n    return methods.debug(this);\n  };\n  return Terms;\n};\n\nmodule.exports = renderMethods;\n\n},{\"../paths\":194}],189:[function(_dereq_,module,exports){\n'use strict';\n\nvar mutate = _dereq_('../mutate');\n\nvar replaceMethods = function replaceMethods(Terms) {\n  var methods = {\n\n    /**swap this for that */\n    replace: function replace(str1, str2) {\n      //in this form, we 'replaceWith'\n      if (str2 === undefined) {\n        return this.replaceWith(str1);\n      }\n      this.match(str1).replaceWith(str2);\n      return this;\n    },\n\n    /**swap this for that */\n    replaceWith: function replaceWith(str, tag) {\n      var toAdd = Terms.fromString(str);\n      if (tag) {\n        toAdd.tagAs(tag, 'user-given');\n      }\n      var index = this.index();\n      this.parentTerms = mutate.deleteThese(this.parentTerms, this);\n      this.parentTerms.terms = mutate.insertAt(this.parentTerms.terms, index, toAdd);\n      this.terms = toAdd.terms;\n      return this;\n    }\n\n  };\n\n  //hook them into result.proto\n  Object.keys(methods).forEach(function (k) {\n    Terms.prototype[k] = methods[k];\n  });\n  return Terms;\n};\n\nmodule.exports = replaceMethods;\n\n},{\"../mutate\":193}],190:[function(_dereq_,module,exports){\n'use strict';\n\n//break apart a termlist into (before, match after)\n\nvar breakUpHere = function breakUpHere(terms, ts) {\n  var firstTerm = ts.terms[0];\n  var len = ts.terms.length;\n  for (var i = 0; i < terms.length; i++) {\n    if (terms[i] === firstTerm) {\n      return {\n        before: terms.slice(0, i),\n        match: terms.slice(i, i + len),\n        after: terms.slice(i + len, terms.length)\n      };\n    }\n  }\n  return {\n    after: terms\n  };\n};\n\nvar splitMethods = function splitMethods(Terms) {\n\n  var methods = {\n\n    /** at the end of the match, split the terms **/\n    splitAfter: function splitAfter(reg, verbose) {\n      var _this = this;\n\n      var ms = this.match(reg, verbose); //Array[ts]\n      var termArr = this.terms;\n      var all = [];\n      ms.list.forEach(function (lookFor) {\n        var section = breakUpHere(termArr, lookFor);\n        if (section.before && section.match) {\n          all.push(section.before.concat(section.match));\n        }\n        termArr = section.after;\n      });\n      //add the remaining\n      if (termArr.length) {\n        all.push(termArr);\n      }\n      //make them termlists\n      all = all.map(function (ts) {\n        var parent = _this.refText; //|| this;\n        return new Terms(ts, _this.lexicon, parent, _this.refTerms);\n      });\n      return all;\n    },\n\n    /** return only before & after  the match**/\n    splitOn: function splitOn(reg, verbose) {\n      var _this2 = this;\n\n      var ms = this.match(reg, verbose); //Array[ts]\n      var termArr = this.terms;\n      var all = [];\n      ms.list.forEach(function (lookFor) {\n        var section = breakUpHere(termArr, lookFor);\n        if (section.before) {\n          all.push(section.before);\n        }\n        if (section.match) {\n          all.push(section.match);\n        }\n        termArr = section.after;\n      });\n      //add the remaining\n      if (termArr.length) {\n        all.push(termArr);\n      }\n      //make them termlists\n      all = all.filter(function (a) {\n        return a && a.length;\n      });\n      all = all.map(function (ts) {\n        return new Terms(ts, ts.lexicon, ts.refText, _this2.refTerms);\n      });\n      return all;\n    },\n\n    /** at the start of the match, split the terms**/\n    splitBefore: function splitBefore(reg, verbose) {\n      var _this3 = this;\n\n      var ms = this.match(reg, verbose); //Array[ts]\n      var termArr = this.terms;\n      var all = [];\n      ms.list.forEach(function (lookFor) {\n        var section = breakUpHere(termArr, lookFor);\n        if (section.before) {\n          all.push(section.before);\n        }\n        if (section.match) {\n          all.push(section.match);\n        }\n        termArr = section.after;\n      });\n      //add the remaining\n      if (termArr.length) {\n        all.push(termArr);\n      }\n      //cleanup-step: merge all (middle) matches with the next one\n      for (var i = 0; i < all.length; i++) {\n        for (var o = 0; o < ms.length; o++) {\n          if (ms.list[o].terms[0] === all[i][0]) {\n            if (all[i + 1]) {\n              all[i] = all[i].concat(all[i + 1]);\n              all[i + 1] = [];\n            }\n          }\n        }\n      }\n      //make them termlists\n      all = all.filter(function (a) {\n        return a && a.length;\n      });\n      all = all.map(function (ts) {\n        return new Terms(ts, ts.lexicon, ts.refText, _this3.refTerms);\n      });\n      return all;\n    }\n\n  };\n\n  //hook them into result.proto\n  Object.keys(methods).forEach(function (k) {\n    Terms.prototype[k] = methods[k];\n  });\n  return Terms;\n};\n\nmodule.exports = splitMethods;\nexports = splitMethods;\n\n},{}],191:[function(_dereq_,module,exports){\n'use strict';\n\nvar addMethods = function addMethods(Terms) {\n\n  var methods = {\n    tagAs: function tagAs(tag, reason) {\n      this.terms.forEach(function (t) {\n        t.tagAs(tag, reason);\n      });\n    },\n    unTag: function unTag(tag, reason) {\n      this.terms.forEach(function (t) {\n        t.unTag(tag, reason);\n      });\n    },\n    canBe: function canBe(tag, reason) {\n      this.terms.forEach(function (t) {\n        t.canBe(tag, reason);\n      });\n    }\n  };\n\n  //hook them into result.proto\n  Object.keys(methods).forEach(function (k) {\n    Terms.prototype[k] = methods[k];\n  });\n  return Terms;\n};\n\nmodule.exports = addMethods;\n\n},{}],192:[function(_dereq_,module,exports){\n'use strict';\n\nvar transforms = function transforms(Terms) {\n\n  var methods = {\n\n    clone: function clone() {\n      var terms = this.terms.map(function (t) {\n        return t.clone();\n      });\n      return new Terms(terms, this.lexicon, this.refText, null); //, this.refTerms\n    },\n    hyphenate: function hyphenate() {\n      var _this = this;\n\n      this.terms.forEach(function (t, i) {\n        if (i !== _this.terms.length - 1) {\n          t.whitespace.after = '-';\n        }\n        if (i !== 0) {\n          t.whitespace.before = '';\n        }\n      });\n      return this;\n    },\n    dehyphenate: function dehyphenate() {\n      this.terms.forEach(function (t) {\n        if (t.whitespace.after === '-') {\n          t.whitespace.after = ' ';\n        }\n      });\n      return this;\n    }\n  };\n\n  //hook them into result.proto\n  Object.keys(methods).forEach(function (k) {\n    Terms.prototype[k] = methods[k];\n  });\n  return Terms;\n};\n\nmodule.exports = transforms;\n\n},{}],193:[function(_dereq_,module,exports){\n'use strict';\n//\n\nvar getTerms = function getTerms(needle) {\n  var arr = [];\n  if (needle.isA === 'Terms') {\n    arr = needle.terms;\n  } else if (needle.isA === 'Text') {\n    arr = needle.flatten().list[0].terms;\n  } else if (needle.isA === 'Term') {\n    arr = [needle];\n  }\n  return arr;\n};\n\n//remove them\nexports.deleteThese = function (source, needle) {\n  var arr = getTerms(needle);\n  source.terms = source.terms.filter(function (t) {\n    for (var i = 0; i < arr.length; i++) {\n      if (t === arr[i]) {\n        return false;\n      }\n    }\n    return true;\n  });\n  return source;\n};\n\n//add them\nexports.insertAt = function (terms, i, needle) {\n  needle.dirty = true;\n  var arr = getTerms(needle);\n  //handle whitespace\n  if (i > 0 && arr[0]) {\n    arr[0].whitespace.before = ' ';\n  }\n  //gnarly splice\n  //-( basically  - terms.splice(i+1, 0, arr) )\n  Array.prototype.splice.apply(terms, [i, 0].concat(arr));\n  return terms;\n};\n\n},{}],194:[function(_dereq_,module,exports){\n'use strict';\n\nmodule.exports = {\n  data: _dereq_('../data/index'),\n  lexicon: _dereq_('../data/lexicon'),\n  fns: _dereq_('../fns'),\n  log: _dereq_('../log'),\n  Term: _dereq_('../term')\n};\n\n},{\"../data/index\":8,\"../data/lexicon\":9,\"../fns\":40,\"../log\":42,\"../term\":158}],195:[function(_dereq_,module,exports){\n'use strict';\n\nvar fixContraction = _dereq_('./fix');\n\nvar irregulars = {\n  'wanna': ['want', 'to'],\n  'gonna': ['going', 'to'],\n  'im': ['i', 'am'],\n  'alot': ['a', 'lot'],\n\n  'dont': ['do', 'not'],\n  'dun': ['do', 'not'],\n\n  'ive': ['i', 'have'],\n\n  'won\\'t': ['will', 'not'],\n  'wont': ['will', 'not'],\n\n  'can\\'t': ['can', 'not'],\n  'cant': ['can', 'not'],\n  'cannot': ['can', 'not'],\n\n  'aint': ['is', 'not'], //or 'are'\n  'ain\\'t': ['is', 'not'],\n  'shan\\'t': ['should', 'not'],\n  'imma': ['I', 'will'],\n\n  'where\\'d': ['where', 'did'],\n  'whered': ['where', 'did'],\n  'when\\'d': ['when', 'did'],\n  'whend': ['when', 'did'],\n  'how\\'d': ['how', 'did'],\n  'howd': ['how', 'did'],\n  'what\\'d': ['what', 'did'],\n  'whatd': ['what', 'did'],\n  'let\\'s': ['let', 'us'],\n\n  //multiple word contractions\n  'dunno': ['do', 'not', 'know'],\n  'brb': ['be', 'right', 'back'],\n  'gtg': ['got', 'to', 'go'],\n  'irl': ['in', 'real', 'life'],\n  'tbh': ['to', 'be', 'honest'],\n  'imo': ['in', 'my', 'opinion'],\n  'til': ['today', 'i', 'learned'],\n  'rn': ['right', 'now']\n};\n\n//check irregulars\nvar checkIrregulars = function checkIrregulars(ts) {\n  var irreg = Object.keys(irregulars);\n  for (var i = 0; i < irreg.length; i++) {\n    for (var t = 0; t < ts.terms.length; t++) {\n      if (ts.terms[t].normal === irreg[i]) {\n        var fix = irregulars[irreg[i]];\n        ts = fixContraction(ts, fix, t);\n        break;\n      }\n    }\n  }\n  return ts;\n};\nmodule.exports = checkIrregulars;\n\n},{\"./fix\":199}],196:[function(_dereq_,module,exports){\n'use strict';\n\nvar fixContraction = _dereq_('./fix');\nvar splitContraction = _dereq_('./split');\n\n//these are always contractions\n// const blacklist = {\n//   'it\\'s': true,\n//   'that\\'s': true\n// };\n\n// //rocket's red glare\n// if (nextWord.tag['Adjective'] && terms.get(x + 2) && terms.get(x + 2).tag['Noun']) {\n//   return true;\n// }\n// //next word is an adjective\n// if (nextWord.tag['Adjective'] || nextWord.tag['Verb'] || nextWord.tag['Adverb']) {\n//   return false;\n// }\n\n\n// \"'s\" may be a contraction or a possessive\n// 'spencer's house' vs 'spencer's good'\nvar isPossessive = function isPossessive(ts, i) {\n  var t = ts.terms[i];\n  var next_t = ts.terms[i + 1];\n  //a pronoun can't be possessive - \"he's house\"\n  if (t.tag.Pronoun || t.tag.QuestionWord) {\n    return false;\n  }\n  //if end of sentence, it is possessive - \"was spencer's\"\n  if (!next_t) {\n    return true;\n  }\n  //a gerund suggests 'is walking'\n  if (next_t.tag.VerbPhrase) {\n    return false;\n  }\n  //spencer's house\n  if (next_t.tag.Noun) {\n    return true;\n  }\n  //rocket's red glare\n  if (next_t.tag.Adjective && ts.terms[i + 2] && ts.terms[i + 2].tag.Noun) {\n    return true;\n  }\n  //an adjective suggests 'is good'\n  if (next_t.tag.Adjective || next_t.tag.Adverb || next_t.tag.Verb) {\n    return false;\n  }\n  return false;\n};\n\n//handle ambigous contraction \"'s\"\nvar hardOne = function hardOne(ts) {\n  for (var i = 0; i < ts.terms.length; i++) {\n    //skip existing\n    if (ts.terms[i].silent_term) {\n      continue;\n    }\n    var parts = splitContraction(ts.terms[i]);\n    if (parts) {\n      //have we found a hard one\n      if (parts.end === 's') {\n        //spencer's house\n        if (isPossessive(ts, i)) {\n          ts.terms[i].tagAs('#Possessive', 'hard-contraction');\n          // console.log('==possessive==');\n          continue;\n        }\n        //is vs was\n        var arr = [parts.start, 'is'];\n        ts = fixContraction(ts, arr, i);\n        i += 1;\n      }\n    }\n  }\n  return ts;\n};\n\nmodule.exports = hardOne;\n\n},{\"./fix\":199,\"./split\":201}],197:[function(_dereq_,module,exports){\n'use strict';\n\nvar fixContraction = _dereq_('./fix');\nvar split = _dereq_('./split');\n\n//the formulaic contraction types:\nvar easy_ends = {\n  'll': 'will',\n  'd': 'would',\n  've': 'have',\n  're': 'are',\n  'm': 'am',\n  'n\\'t': 'not'\n  //these ones are a bit tricksier:\n  // 't': 'not',\n  // 's': 'is' //or was\n};\n\n//unambiguous contractions, like \"'ll\"\nvar easyOnes = function easyOnes(ts) {\n  for (var i = 0; i < ts.terms.length; i++) {\n    //skip existing\n    if (ts.terms[i].silent_term) {\n      continue;\n    }\n    var parts = split(ts.terms[i]);\n    if (parts) {\n      //make sure its an easy one\n      if (easy_ends[parts.end]) {\n        var arr = [parts.start, easy_ends[parts.end]];\n        ts = fixContraction(ts, arr, i);\n        i += 1;\n      }\n    }\n  }\n  return ts;\n};\nmodule.exports = easyOnes;\n\n},{\"./fix\":199,\"./split\":201}],198:[function(_dereq_,module,exports){\n'use strict';\n\nvar fixContraction = _dereq_('./fix');\nvar Term = _dereq_('../../../term');\n\nvar numberRange = function numberRange(ts) {\n  for (var i = 0; i < ts.terms.length; i++) {\n    var t = ts.terms[i];\n    //skip existing\n    if (t.silent_term) {\n      continue;\n    }\n    //hyphens found in whitespace - '5 - 7'\n    if (t.tag.Value && i > 0 && t.whitespace.before === ' - ') {\n      var to = new Term('');\n      to.silent_term = 'to';\n      ts.insertAt(i, to);\n      ts.terms[i - 1].tagAs('NumberRange');\n      ts.terms[i].tagAs('NumberRange');\n      ts.terms[i].whitespace.before = '';\n      ts.terms[i].whitespace.after = '';\n      ts.terms[i + 1].tagAs('NumberRange');\n      return ts;\n    }\n    if (t.tag.NumberRange) {\n      var arr = t.text.split(/(-)/);\n      arr[1] = 'to';\n      ts = fixContraction(ts, arr, i);\n      ts.terms[i].tagAs('NumberRange');\n      ts.terms[i + 1].tagAs('NumberRange');\n      ts.terms[i + 2].tagAs('NumberRange');\n      i += 2;\n    }\n  }\n  return ts;\n};\nmodule.exports = numberRange;\n\n},{\"../../../term\":158,\"./fix\":199}],199:[function(_dereq_,module,exports){\n'use strict';\n\nvar Term = _dereq_('../../../term');\n\nvar tags = {\n  'not': 'Negative',\n  'will': 'Verb',\n  'would': 'Modal',\n  'have': 'Verb',\n  'are': 'Copula',\n  'is': 'Copula',\n  'am': 'Verb'\n};\n//make sure the newly created term gets the easy tags\nvar easyTag = function easyTag(t) {\n  if (tags[t.silent_term]) {\n    t.tagAs(tags[t.silent_term]);\n  }\n};\n\n//add a silent term\nvar fixContraction = function fixContraction(ts, parts, i) {\n  //add the interpretation to the contracted term\n  var one = ts.terms[i];\n  one.silent_term = parts[0];\n  //tag it as a contraction\n  one.tagAs('Contraction', 'tagger-contraction');\n\n  //add a new empty term\n  var two = new Term('');\n  two.silent_term = parts[1];\n  two.tagAs('Contraction', 'tagger-contraction');\n  ts.insertAt(i + 1, two);\n  //ensure new term has no auto-whitspace\n  two.whitespace.before = '';\n  two.whitespace.after = '';\n  easyTag(two);\n\n  //potentially it's three-contracted-terms, like 'dunno'\n  if (parts[2]) {\n    var three = new Term('');\n    three.silent_term = parts[2];\n    // ts.terms.push(three);\n    ts.insertAt(i + 2, three);\n    three.tagAs('Contraction', 'tagger-contraction');\n    easyTag(three);\n  }\n\n  return ts;\n};\n\nmodule.exports = fixContraction;\n\n},{\"../../../term\":158}],200:[function(_dereq_,module,exports){\n'use strict';\n\nvar irregulars = _dereq_('./01-irregulars');\nvar hardOne = _dereq_('./02-hardOne');\nvar easyOnes = _dereq_('./03-easyOnes');\nvar numberRange = _dereq_('./04-numberRange');\n\n//find and pull-apart contractions\nvar interpret = function interpret(ts) {\n  //check irregulars\n  ts = irregulars(ts);\n  //guess-at ambiguous \"'s\" one\n  ts = hardOne(ts);\n  //check easy ones\n  ts = easyOnes(ts);\n  //5-7\n  ts = numberRange(ts);\n  return ts;\n};\n\nmodule.exports = interpret;\n\n},{\"./01-irregulars\":195,\"./02-hardOne\":196,\"./03-easyOnes\":197,\"./04-numberRange\":198}],201:[function(_dereq_,module,exports){\n'use strict';\n\nvar allowed = {\n  're': true,\n  've': true,\n  'll': true,\n  't': true,\n  's': true,\n  'd': true,\n  'm': true\n};\n/** interpret a terms' contraction */\nvar splitContraction = function splitContraction(t) {\n  var parts = t.text.match(/^([a-z]+)'([a-z][a-z]?)$/i);\n  if (parts && parts[1] && allowed[parts[2]]) {\n    //handle n't\n    if (parts[2] === 't' && parts[1].match(/[a-z]n$/)) {\n      parts[1] = parts[1].replace(/n$/, '');\n      parts[2] = 'n\\'t'; //dunno..\n    }\n    //fix titlecase\n    if (t.tag.TitleCase) {\n      parts[1] = parts[1].replace(/^[a-z]/, function (x) {\n        return x.toUpperCase();\n      });\n    }\n    return {\n      start: parts[1],\n      end: parts[2]\n    };\n  }\n  // \"flanders' house\"\n  parts = t.text.match(/[a-z]s'$/i);\n  if (parts) {\n    return {\n      start: t.normal.replace(/s'?$/, ''),\n      end: ''\n    };\n  }\n  return null;\n};\nmodule.exports = splitContraction;\n\n},{}],202:[function(_dereq_,module,exports){\n'use strict';\n\nvar log = _dereq_('../paths').log;\nvar path = 'correction';\nvar verb_corrections = _dereq_('./verb_corrections');\n\n//mostly pos-corections here\nvar corrections = function corrections(r) {\n  log.here(path);\n  //ambig prepositions/conjunctions\n  //so funny\n  r.match('so #Adjective').match('so').tag('Adverb', 'so-adv');\n  //so the\n  r.match('so #Noun').match('so').tag('Conjunction', 'so-conj');\n  //do so\n  r.match('do so').match('so').tag('Noun', 'so-noun');\n  //still good\n  r.match('still #Adjective').match('still').tag('Adverb', 'still-advb');\n  //'more' is not always an adverb\n  r.match('more #Noun').tag('Noun', 'more-noun');\n  //still make\n  r.match('still #Verb').term(0).tag('Adverb', 'still-verb');\n  //the word 'second'\n  r.match('second #Noun').term(0).unTag('Unit').tag('Ordinal', 'second-noun');\n  //foot/feet\n  r.match('(foot|feet)').tag('Noun', 'foot-noun');\n  r.match('#Value (foot|feet)').match('(foot|feet)').tag('Unit', 'foot-unit');\n  //the word 'how'\n  r.match('how (#Copula|#Modal|#PastTense)').term(0).tag('QuestionWord', 'how-question');\n  //will secure our\n  r.match('will #Adjective').term(1).tag('Verb', 'will-adj');\n  //'u' as pronoun\n  r.match('u #Verb').term(0).tag('Pronoun', 'u-pronoun-1');\n  r.match('#Conjunction u').term(1).tag('Pronoun', 'u-pronoun-2');\n  //is no walk\n  r.match('is no #Verb').term(2).tag('Noun', 'is-no-verb');\n\n  //Determiner-signals\n  //the wait to vote\n  r.match('the #Verb #Preposition .').match('#Verb').tag('Noun', 'correction-determiner1');\n  //the swim\n  r.match('the #Verb').match('#Verb').tag('Noun', 'correction-determiner2');\n  //the nice swim\n  r.match('the #Adjective #Verb').match('#Verb').tag('Noun', 'correction-determiner3');\n  //the truly nice swim\n  r.match('the #Adverb #Adjective #Verb').match('#Verb').tag('Noun', 'correction-determiner4');\n\n  //organization\n  r.match('#Organization of the? #TitleCase').tag('Organization', 'org-of-place');\n  r.match('#Organization #Country').tag('Organization', 'org-country');\n  r.match('(world|global|international|national|#Demonym) #Organization').tag('Organization', 'global-org');\n  r.match('#TitleCase (ltd|co|inc|dept|assn|bros)').tag('Organization', 'org-abbrv');\n\n  //a sense of\n  r.match('#Determiner #Verb of').term(1).tag('Noun', 'the-verb-of');\n  //he quickly foo\n  r.match('#Noun #Adverb #Noun').term(2).tag('Verb', 'correction');\n  //is eager to go\n  r.match('#Copula #Adjective to #Verb').match('#Adjective to').tag('Verb', 'correction');\n  //different views than\n  r.match('#Verb than').term(0).tag('Noun', 'correction');\n  //her polling\n  r.match('#Possessive #Verb').term(1).tag('Noun', 'correction-possessive');\n\n  //like\n  r.match('just like').term(1).tag('Preposition', 'like-preposition');\n  //folks like her\n  r.match('#Noun like #Noun').term(1).tag('Preposition', 'noun-like');\n  //look like\n  r.match('#Verb like').term(1).tag('Adverb', 'verb-like');\n  //exactly like\n  r.match('#Adverb like').term(1).tag('Adverb', 'adverb-like');\n\n  //the threat of force\n  r.match('#Determiner #Noun of #Verb').match('#Verb').tag('Noun', 'noun-of-noun');\n  //big dreams, critical thinking\n  r.match('#Adjective #PresentTense').term(1).tag('Noun', 'adj-presentTense');\n  //my buddy\n  r.match('#Possessive #FirstName').term(1).unTag('Person', 'possessive-name');\n  //'a/an' can mean 1\n  r.match('(a|an) (#Duration|#Value)').ifNo('#Plural').term(0).tag('Value', 'a-is-one');\n  //half a million\n  r.match('half a? #Value').tag('Value', 'half-a-value'); //quarter not ready\n  r.match('#Value and a (half|quarter)').tag('Value', 'value-and-a-half');\n  //all values are either ordinal or cardinal\n  r.match('#Value').match('!#Ordinal').tag('#Cardinal', 'not-ordinal');\n\n  //money\n  r.match('#Value+ #Currency').tag('Money', 'value-currency');\n  r.match('#Money and #Money #Currency?').tag('Money', 'money-and-money');\n\n  //swear-words as non-expression POS\n  //nsfw\n  r.match('holy (shit|fuck|hell)').tag('Expression', 'swears-expression');\n  r.match('#Determiner (shit|damn|hell)').term(1).tag('Noun', 'swears-noun');\n  r.match('(shit|damn|fuck) (#Determiner|#Possessive|them)').term(0).tag('Verb', 'swears-verb');\n  r.match('#Copula fucked up?').not('#Copula').tag('Adjective', 'swears-adjective');\n\n  //more-detailed corrections\n  r = verb_corrections(r);\n\n  return r;\n};\n\nmodule.exports = corrections;\n\n},{\"../paths\":209,\"./verb_corrections\":203}],203:[function(_dereq_,module,exports){\n'use strict';\n\nvar corrections = function corrections(r) {\n  //support a splattering of auxillaries before a verb\n  var advb = '(#Adverb|not)+?';\n  //had walked\n  r.match('(has|had) ' + advb + ' #PastTense').not('#Verb$').tag('Auxillary', 'had-walked');\n  //was walking\n  r.match('#Copula ' + advb + ' #Gerund').not('#Verb$').tag('Auxillary', 'copula-walking');\n  //been walking\n  r.match('(be|been) ' + advb + ' #Gerund').not('#Verb$').tag('Auxillary', 'be-walking');\n  //would walk\n  r.match('(#Modal|did) ' + advb + ' #Verb').not('#Verb$').tag('Auxillary', 'modal-verb');\n  //would have had\n  r.match('#Modal ' + advb + ' have ' + advb + ' had ' + advb + ' #Verb').not('#Verb$').tag('Auxillary', 'would-have');\n  //would be walking\n  r.match('(#Modal) ' + advb + ' be ' + advb + ' #Verb').not('#Verb$').tag('Auxillary', 'would-be');\n  //would been walking\n  r.match('(#Modal|had|has) ' + advb + ' been ' + advb + ' #Verb').not('#Verb$').tag('Auxillary', 'would-be');\n  //infinitive verbs suggest plural nouns - 'XYZ walk to the store'\n  // r.match(`#Singular+ #Infinitive`).match('#Singular+').tag('Plural', 'infinitive-make-plural');\n  return r;\n};\nmodule.exports = corrections;\n\n},{}],204:[function(_dereq_,module,exports){\n'use strict';\n//the steps and processes of pos-tagging\n\nvar contraction = {\n  interpret: _dereq_('./contraction')\n};\nvar lumper = {\n  lexicon_lump: _dereq_('./lumper/lexicon_lump'),\n  lump_two: _dereq_('./lumper/lump_two'),\n  lump_three: _dereq_('./lumper/lump_three')\n};\nvar step = {\n  punctuation_step: _dereq_('./steps/01-punctuation_step'),\n  lexicon_step: _dereq_('./steps/02-lexicon_step'),\n  capital_step: _dereq_('./steps/03-capital_step'),\n  web_step: _dereq_('./steps/04-web_step'),\n  suffix_step: _dereq_('./steps/05-suffix_step'),\n  neighbour_step: _dereq_('./steps/06-neighbour_step'),\n  noun_fallback: _dereq_('./steps/07-noun_fallback'),\n  date_step: _dereq_('./steps/08-date_step'),\n  auxillary_step: _dereq_('./steps/09-auxillary_step'),\n  negation_step: _dereq_('./steps/10-negation_step'),\n  phrasal_step: _dereq_('./steps/12-phrasal_step'),\n  comma_step: _dereq_('./steps/13-comma_step'),\n  possessive_step: _dereq_('./steps/14-possessive_step'),\n  value_step: _dereq_('./steps/15-value_step'),\n  acronym_step: _dereq_('./steps/16-acronym_step'),\n  emoji_step: _dereq_('./steps/17-emoji_step'),\n  person_step: _dereq_('./steps/18-person_step'),\n  quotation_step: _dereq_('./steps/19-quotation_step'),\n  organization_step: _dereq_('./steps/20-organization_step'),\n  plural_step: _dereq_('./steps/21-plural_step')\n};\nvar corrections = _dereq_('./corrections');\nvar tagPhrase = _dereq_('./phrase');\n\nvar tagger = function tagger(ts) {\n  ts = step.punctuation_step(ts);\n  ts = step.emoji_step(ts);\n  ts = lumper.lexicon_lump(ts);\n  ts = step.lexicon_step(ts);\n  ts = step.web_step(ts);\n  ts = step.suffix_step(ts);\n  ts = step.neighbour_step(ts);\n  ts = step.capital_step(ts);\n  ts = step.noun_fallback(ts);\n  ts = contraction.interpret(ts);\n  ts = step.date_step(ts);\n  ts = step.auxillary_step(ts);\n  ts = step.negation_step(ts);\n  ts = step.phrasal_step(ts);\n  ts = step.comma_step(ts);\n  ts = step.possessive_step(ts);\n  ts = step.value_step(ts);\n  ts = step.acronym_step(ts);\n  ts = step.person_step(ts);\n  ts = step.quotation_step(ts);\n  ts = step.organization_step(ts);\n  ts = step.plural_step(ts);\n  //lump a couple times, for long ones\n  for (var i = 0; i < 3; i++) {\n    ts = lumper.lump_three(ts);\n    ts = lumper.lump_two(ts);\n  }\n  ts = corrections(ts);\n  ts = tagPhrase(ts);\n  return ts;\n};\n\nmodule.exports = tagger;\n\n},{\"./contraction\":200,\"./corrections\":202,\"./lumper/lexicon_lump\":206,\"./lumper/lump_three\":207,\"./lumper/lump_two\":208,\"./phrase\":211,\"./steps/01-punctuation_step\":212,\"./steps/02-lexicon_step\":213,\"./steps/03-capital_step\":214,\"./steps/04-web_step\":215,\"./steps/05-suffix_step\":216,\"./steps/06-neighbour_step\":217,\"./steps/07-noun_fallback\":218,\"./steps/08-date_step\":219,\"./steps/09-auxillary_step\":220,\"./steps/10-negation_step\":221,\"./steps/12-phrasal_step\":222,\"./steps/13-comma_step\":223,\"./steps/14-possessive_step\":224,\"./steps/15-value_step\":225,\"./steps/16-acronym_step\":226,\"./steps/17-emoji_step\":227,\"./steps/18-person_step\":228,\"./steps/19-quotation_step\":229,\"./steps/20-organization_step\":230,\"./steps/21-plural_step\":231}],205:[function(_dereq_,module,exports){\n'use strict';\n\nvar paths = _dereq_('../paths');\nvar Term = paths.Term;\nvar log = paths.log;\nvar path = 'tagger/combine';\n//merge two term objects.. carefully\n\nvar makeText = function makeText(a, b) {\n  var text = a.whitespace.before + a.text + a.whitespace.after;\n  text += b.whitespace.before + b.text + b.whitespace.after;\n  return text;\n};\n\nvar combine = function combine(s, i) {\n  var a = s.terms[i];\n  var b = s.terms[i + 1];\n  if (!b) {\n    return;\n  }\n  log.tell('--combining: \"' + a.normal + '\"+\"' + b.normal + '\"', path);\n  var text = makeText(a, b);\n  s.terms[i] = new Term(text, a.context);\n  s.terms[i].normal = a.normal + ' ' + b.normal;\n  s.terms[i + 1] = null;\n  s.terms = s.terms.filter(function (t) {\n    return t !== null;\n  });\n  return;\n};\n\nmodule.exports = combine;\n\n},{\"../paths\":209}],206:[function(_dereq_,module,exports){\n'use strict';\n//check for \"united\" + \"kingdom\" in lexicon, and combine + tag it\n\nvar combine = _dereq_('./combine');\nvar p = _dereq_('../paths');\nvar log = p.log;\nvar lexicon = p.lexicon;\nvar fns = p.fns;\nvar path = 'tagger/multiple';\n\nvar combineMany = function combineMany(ts, i, count) {\n  for (var n = 0; n < count; n++) {\n    combine(ts, i);\n  }\n};\n\n//try to concatenate multiple-words to get this term\nvar tryStringFrom = function tryStringFrom(want, start, ts) {\n  var text = '';\n  var normal = '';\n  var simple = '';\n  for (var i = start; i < ts.terms.length; i++) {\n    if (i === start) {\n      text = ts.terms[i].text;\n      normal = ts.terms[i].normal;\n      simple = ts.terms[i].root;\n    } else {\n      text += ' ' + ts.terms[i].text;\n      normal += ' ' + ts.terms[i].normal;\n      simple += ' ' + ts.terms[i].root;\n    }\n    //we've gone too far\n    if (text === want || normal === want || simple === want) {\n      var count = i - start;\n      combineMany(ts, start, count);\n      return true;\n    }\n    if (normal.length > want.length) {\n      return false;\n    }\n  }\n  return false;\n};\n\nvar lexicon_lump = function lexicon_lump(ts) {\n  log.here(path);\n  var uLexicon = ts.lexicon || {};\n\n  //try the simpler, known lexicon\n  for (var i = 0; i < ts.terms.length - 1; i++) {\n    //try 'A'+'B'\n    var normal = ts.terms[i].normal + ' ' + ts.terms[i + 1].normal;\n    var text = ts.terms[i].text + ' ' + ts.terms[i + 1].text;\n    var pos = lexicon[normal] || lexicon[text];\n    if (pos) {\n      combine(ts, i);\n      ts.terms[i].tagAs(pos, 'multiples-lexicon');\n    }\n  }\n\n  //try the user's lexicon\n  Object.keys(uLexicon).forEach(function (str) {\n    for (var _i = 0; _i < ts.terms.length; _i++) {\n      if (fns.startsWith(str, ts.terms[_i].normal) || fns.startsWith(str, ts.terms[_i].text)) {\n        if (tryStringFrom(str, _i, ts)) {\n          ts.terms[_i].tagAs(uLexicon[str], 'user-lexicon-lump');\n        }\n      }\n    }\n  });\n  return ts;\n};\n\nmodule.exports = lexicon_lump;\n\n},{\"../paths\":209,\"./combine\":205}],207:[function(_dereq_,module,exports){\n'use strict';\n\nvar log = _dereq_('../paths').log;\nvar path = 'lumper/lump_three';\nvar combine = _dereq_('./combine');\n\n//rules for combining three terms into one\nvar do_three = [{\n  //John & Joe's\n  condition: function condition(a, b, c) {\n    return a.tag.Noun && (b.text === '&' || b.normal === 'n') && c.tag.Noun;\n  },\n  result: 'Organization',\n  reason: 'Noun-&-Noun'\n}, {\n  //1 800 PhoneNumber\n  condition: function condition(a, b, c) {\n    return a.tag.Value && b.tag.Value && c.tag.PhoneNumber && b.normal.length === 3 && a.normal.length < 3;\n  },\n  result: 'PhoneNumber',\n  reason: '1-800-PhoneNumber'\n}];\n\nvar lump_three = function lump_three(s) {\n  log.here(path);\n  for (var o = 0; o < do_three.length; o++) {\n    for (var i = 0; i < s.terms.length - 2; i++) {\n      var a = s.terms[i];\n      var b = s.terms[i + 1];\n      var c = s.terms[i + 2];\n      if (do_three[o].condition(a, b, c)) {\n        //merge terms A+B\n        combine(s, i);\n        //merge A+C\n        combine(s, i);\n        //tag it as POS\n        s.terms[i].tagAs(do_three[o].result, 'lump-three (' + do_three[o].reason + ')');\n      }\n    }\n  }\n  return s;\n};\n\nmodule.exports = lump_three;\n\n},{\"../paths\":209,\"./combine\":205}],208:[function(_dereq_,module,exports){\n'use strict';\n\nvar log = _dereq_('../paths').log;\nvar path = 'lumper/lump_two';\nvar combine = _dereq_('./combine');\n\nvar timezones = {\n  standard: true,\n  daylight: true,\n  summer: true,\n  eastern: true,\n  pacific: true,\n  central: true,\n  mountain: true\n};\n\n//rules that combine two words\nvar do_two = [{\n  //6 am\n  condition: function condition(a, b) {\n    return a.tag.Holiday && (b.normal === 'day' || b.normal === 'eve');\n  },\n  result: 'Holiday',\n  reason: 'holiday-day'\n}, {\n  //Aircraft designer\n  condition: function condition(a, b) {\n    return a.tag.Noun && b.tag.Actor;\n  },\n  result: 'Actor',\n  reason: 'thing-doer'\n}, {\n  //timezones\n  condition: function condition(a, b) {\n    return timezones[a.normal] && (b.normal === 'standard time' || b.normal === 'time');\n  },\n  result: 'Time',\n  reason: 'timezone'\n}, {\n  //canadian dollar, Brazilian pesos\n  condition: function condition(a, b) {\n    return a.tag.Demonym && b.tag.Currency;\n  },\n  result: 'Currency',\n  reason: 'demonym-currency'\n}, {\n  //(454) 232-9873\n  condition: function condition(a, b) {\n    return a.tag.NumericValue && b.tag.PhoneNumber && a.normal.length <= 3;\n  },\n  result: 'PhoneNumber',\n  reason: '(800) PhoneNumber'\n}];\n\nvar lump_two = function lump_two(s) {\n  log.here(path);\n  for (var o = 0; o < do_two.length; o++) {\n    for (var i = 0; i < s.terms.length - 1; i++) {\n      var a = s.terms[i];\n      var b = s.terms[i + 1];\n      if (do_two[o].condition(a, b)) {\n        //merge terms\n        combine(s, i);\n        //tag it as POS\n        s.terms[i].tagAs(do_two[o].result, 'lump-two (' + do_two[o].reason + ')');\n      }\n    }\n  }\n  return s;\n};\n\nmodule.exports = lump_two;\n\n},{\"../paths\":209,\"./combine\":205}],209:[function(_dereq_,module,exports){\n'use strict';\n\nmodule.exports = _dereq_('../paths');\n\n},{\"../paths\":194}],210:[function(_dereq_,module,exports){\n'use strict';\n\n//\n\nvar conditionPass = function conditionPass(r) {\n  //'if it really goes, I will..'\n  var m = r.match('#Condition {1,7} #ClauseEnd');\n  //make sure it ends on a comma\n  if (m.found && m.match('#Comma$')) {\n    m.tag('ConditionPhrase');\n  }\n  //'go a bit further, if it then has a pronoun\n  m = r.match('#Condition {1,13} #ClauseEnd #Pronoun');\n  if (m.found && m.match('#Comma$')) {\n    m.not('#Pronoun$').tag('ConditionPhrase', 'end-pronoun');\n  }\n  //if it goes then ..\n  m = r.match('#Condition {1,7} then');\n  if (m.found) {\n    m.not('then$').tag('ConditionPhrase', 'cond-then');\n  }\n  //at the end of a sentence:\n  //'..., if it really goes.'\n  m = r.match('#Comma #Condition {1,7} .$');\n  if (m.found) {\n    m.not('^#Comma').tag('ConditionPhrase', 'comma-7-end');\n  }\n  // '... if so.'\n  m = r.match('#Condition {1,4}$');\n  if (m.found) {\n    m.tag('ConditionPhrase', 'cond-4-end');\n  }\n  return r;\n};\n\nmodule.exports = conditionPass;\n\n},{}],211:[function(_dereq_,module,exports){\n'use strict';\n\nvar conditionPass = _dereq_('./00-conditionPass');\n// const verbPhrase = require('./01-verbPhrase');\n// const nounPhrase = require('./02-nounPhrase');\n// const AdjectivePhrase = require('./03-adjectivePhrase');\n//\nvar phraseTag = function phraseTag(Text) {\n  Text = conditionPass(Text);\n  // Text = verbPhrase(Text);\n  // Text = nounPhrase(Text);\n  // Text = AdjectivePhrase(Text);\n  return Text;\n};\n\nmodule.exports = phraseTag;\n\n},{\"./00-conditionPass\":210}],212:[function(_dereq_,module,exports){\n'use strict';\n\nvar log = _dereq_('../paths').log;\nvar rules = _dereq_('./data/punct_rules');\nvar path = 'tagger/punctuation';\n\n//not so smart (right now)\nvar isRomanNumeral = function isRomanNumeral(t) {\n  if (!t.canBe('RomanNumeral')) {\n    return false;\n  }\n  var str = t.text;\n  if (str.length > 1 && str.match(/^[IVXCM]+$/)) {\n    return true;\n  }\n  return false;\n};\n\nvar oneLetters = {\n  a: true,\n  i: true,\n  //internet-slang\n  u: true,\n  r: true,\n  c: true,\n  k: true\n};\n\nvar punctuation_step = function punctuation_step(ts) {\n  log.here(path);\n  ts.terms.forEach(function (t) {\n    var str = t.text;\n    //anything can be titlecase\n    if (str.match(/^[A-Z][a-z']/)) {\n      t.tagAs('TitleCase', 'punct-rule');\n    }\n    //ok, normalise it a little,\n    str = str.replace(/[,\\.\\?]$/, '');\n    //do punctuation rules (on t.text)\n    for (var i = 0; i < rules.length; i++) {\n      var r = rules[i];\n      if (str.match(r.reg)) {\n        //don't over-write any other known tags\n        if (t.canBe(r.tag)) {\n          t.tagAs(r.tag, 'punctuation-rule- \"' + r.str + '\"');\n        }\n        return;\n      }\n    }\n    //terms like 'e'\n    if (str.length === 1 && !oneLetters[str.toLowerCase()]) {\n      t.tagAs('Acronym', 'one-letter-acronym');\n    }\n    //roman numerals (weak rn)\n    if (isRomanNumeral(t)) {\n      t.tagAs('RomanNumeral', 'is-roman-numeral');\n    }\n  });\n  return ts;\n};\n\nmodule.exports = punctuation_step;\n\n},{\"../paths\":209,\"./data/punct_rules\":236}],213:[function(_dereq_,module,exports){\n'use strict';\n\nvar p = _dereq_('../paths');\nvar split = _dereq_('../contraction/split');\n\nvar lexicon = p.lexicon;\nvar log = p.log;\nvar path = 'tagger/lexicon';\n\nvar check_lexicon = function check_lexicon(str, sentence) {\n  //check a user's custom lexicon\n  var custom = sentence.lexicon || {};\n  if (custom[str]) {\n    return custom[str];\n  }\n  if (lexicon[str]) {\n    return lexicon[str];\n  }\n  return null;\n};\n\nvar lexicon_pass = function lexicon_pass(ts) {\n  log.here(path);\n  var found = void 0;\n  //loop through each term\n  for (var i = 0; i < ts.terms.length; i++) {\n    var t = ts.terms[i];\n    //basic term lookup\n    found = check_lexicon(t.normal, ts);\n    if (found) {\n      t.tagAs(found, 'lexicon-match');\n      continue;\n    }\n    found = check_lexicon(t.text, ts);\n    if (found) {\n      t.tagAs(found, 'lexicon-match-text');\n      continue;\n    }\n    //support contractions (manually)\n    var parts = split(t);\n    if (parts && parts.start) {\n      found = check_lexicon(parts.start.toLowerCase(), ts);\n      if (found) {\n        t.tagAs(found, 'contraction-lexicon');\n        continue;\n      }\n    }\n    //support silent_term matches\n    found = check_lexicon(t.silent_term, ts);\n    if (t.silent_term && found) {\n      t.tagAs(found, 'silent_term-lexicon');\n      continue;\n    }\n    //multiple-words / hyphenation\n    var words = t.normal.split(/[ -]/);\n    if (words.length > 1) {\n      found = check_lexicon(words[words.length - 1], ts);\n      if (found) {\n        t.tagAs(found, 'multiword-lexicon');\n        continue;\n      }\n    }\n  }\n  return ts;\n};\n\nmodule.exports = lexicon_pass;\n\n},{\"../contraction/split\":201,\"../paths\":209}],214:[function(_dereq_,module,exports){\n'use strict';\n//titlecase is a signal for a noun\n\nvar log = _dereq_('../paths').log;\nvar path = 'tagger/capital';\n\nvar capital_logic = function capital_logic(s) {\n  log.here(path);\n  //(ignore first word)\n  for (var i = 1; i < s.terms.length; i++) {\n    var _t = s.terms[i];\n    //has a capital, but isn't too weird.\n    if (_t.tag.TitleCase && _t.isWord()) {\n      _t.tagAs('Noun', 'capital-step');\n      _t.tagAs('TitleCase', 'capital-step');\n    }\n  }\n  //support first-word of sentence as proper titlecase\n  var t = s.terms[0];\n  if (t && t.tag.TitleCase) {\n    if (t.tag.Person || t.tag.Organization || t.tag.Place) {\n      t.tagAs('TitleCase', 'first-term-capital');\n    }\n  }\n  return s;\n};\n\nmodule.exports = capital_logic;\n\n},{\"../paths\":209}],215:[function(_dereq_,module,exports){\n'use strict';\n//identify urls, hashtags, @mentions, emails\n\nvar log = _dereq_('../paths').log;\nvar path = 'tagger/web_step';\n// 'Email': Noun,\n// 'Url': Noun,\n// 'AtMention': Noun,\n// 'HashTag': Noun,\n\nvar is_email = function is_email(str) {\n  if (str.match(/^\\w+@\\w+\\.[a-z]{2,3}$/)) {\n    //not fancy\n    return true;\n  }\n  return false;\n};\n\nvar is_hashtag = function is_hashtag(str) {\n  if (str.match(/^#[a-z0-9_]{2,}$/)) {\n    return true;\n  }\n  return false;\n};\n\nvar is_atmention = function is_atmention(str) {\n  if (str.match(/^@\\w{2,}$/)) {\n    return true;\n  }\n  return false;\n};\n\nvar is_url = function is_url(str) {\n  //with http/www\n  if (str.match(/^(https?:\\/\\/|www\\.)\\w+\\.[a-z]{2,3}/)) {\n    //not fancy\n    return true;\n  }\n  // 'boo.com'\n  //http://mostpopularwebsites.net/top-level-domain\n  if (str.match(/^[\\w\\.\\/]+\\.(com|net|gov|org|ly|edu|info|biz|ru|jp|de|in|uk|br)/)) {\n    return true;\n  }\n  return false;\n};\n\nvar web_pass = function web_pass(terms) {\n  log.here(path);\n  for (var i = 0; i < terms.length; i++) {\n    var t = terms.get(i);\n    var str = t.text.trim().toLowerCase();\n    if (is_email(str)) {\n      t.tagAs('Email', 'web_pass');\n    }\n    if (is_hashtag(str)) {\n      t.tagAs('HashTag', 'web_pass');\n    }\n    if (is_atmention(str)) {\n      t.tagAs('AtMention', 'web_pass');\n    }\n    if (is_url(str)) {\n      t.tagAs('Url', 'web_pass');\n    }\n  }\n  return terms;\n};\n\nmodule.exports = web_pass;\n\n},{\"../paths\":209}],216:[function(_dereq_,module,exports){\n'use strict';\n\nvar log = _dereq_('../paths').log;\nvar rules = _dereq_('./data/word_rules');\nvar path = 'tagger/suffix';\n\nvar suffix_step = function suffix_step(s) {\n  log.here(path);\n  s.terms.forEach(function (t) {\n    //do normalized rules (on t.normal)\n    for (var o = 0; o < rules.length; o++) {\n      var r = rules[o];\n      if (t.normal.match(r.reg)) {\n        //don't over-write any other known tags\n        if (t.canBe(r.tag)) {\n          t.tagAs(r.tag, 'word-rule- \"' + r.str + '\"');\n        }\n        return;\n      }\n    }\n  });\n  return s;\n};\n\nmodule.exports = suffix_step;\n\n},{\"../paths\":209,\"./data/word_rules\":237}],217:[function(_dereq_,module,exports){\n'use strict';\n\nvar markov = _dereq_('./data/neighbours');\nvar afterThisWord = markov.afterThisWord;\nvar beforeThisWord = markov.beforeThisWord;\nvar beforeThisPos = markov.beforeThisPos;\nvar afterThisPos = markov.afterThisPos;\nvar log = _dereq_('../paths').log;\nvar path = 'tagger/neighbours';\n\n//basically a last-ditch effort before everything falls back to a noun\n//for unknown terms, look left + right first, and hit-up the markov-chain for clues\nvar neighbour_step = function neighbour_step(ts) {\n  log.here(path);\n  ts.terms.forEach(function (t, n) {\n    //is it still unknown?\n    var termTags = Object.keys(t.tag);\n    if (termTags.length === 0) {\n      var lastTerm = ts.terms[n - 1];\n      var nextTerm = ts.terms[n + 1];\n      //look at last word for clues\n      if (lastTerm && afterThisWord[lastTerm.normal]) {\n        t.tagAs(afterThisWord[lastTerm.normal], 'neighbour-after-\"' + lastTerm.normal + '\"');\n        return;\n      }\n      //look at next word for clues\n      if (nextTerm && beforeThisWord[nextTerm.normal]) {\n        t.tagAs(beforeThisWord[nextTerm.normal], 'neighbour-before-\"' + nextTerm.normal + '\"');\n        return;\n      }\n      //look at the last POS for clues\n      var tags = [];\n      if (lastTerm) {\n        tags = Object.keys(lastTerm.tag);\n        for (var i = 0; i < tags.length; i++) {\n          if (afterThisPos[tags[i]]) {\n            t.tagAs(afterThisPos[tags[i]], 'neighbour-after-[' + tags[i] + ']');\n            return;\n          }\n        }\n      }\n      //look at the next POS for clues\n      if (nextTerm) {\n        tags = Object.keys(nextTerm.tag);\n        for (var _i = 0; _i < tags.length; _i++) {\n          if (beforeThisPos[tags[_i]]) {\n            t.tagAs(beforeThisPos[tags[_i]], 'neighbour-before-[' + tags[_i] + ']');\n            return;\n          }\n        }\n      }\n    }\n  });\n\n  return ts;\n};\n\nmodule.exports = neighbour_step;\n\n},{\"../paths\":209,\"./data/neighbours\":234}],218:[function(_dereq_,module,exports){\n'use strict';\n\nvar log = _dereq_('../paths').log;\nvar path = 'tagger/noun_fallback';\n//tag word as noun if we know nothing about it, still.\n\n//tags that dont really count\nvar nothing = {\n  TitleCase: true,\n  UpperCase: true,\n  CamelCase: true\n};\n//are the tags basically empty\nvar gotNothing = function gotNothing(t) {\n  //fail-fast\n  if (t.tag.Noun || t.tag.Verb || t.tag.Adjective) {\n    return false;\n  }\n  var tags = Object.keys(t.tag);\n  if (tags.length === 0) {\n    return true;\n  }\n  if (tags.filter(function (tag) {\n    return !nothing[tag];\n  }).length === 0) {\n    return true;\n  }\n  return false;\n};\n\nvar noun_fallback = function noun_fallback(s) {\n  log.here(path);\n  for (var i = 0; i < s.terms.length; i++) {\n    var t = s.terms[i];\n    //fail-fast\n    if (t.tag.Noun || t.tag.Verb) {\n      continue;\n    }\n    //ensure it only has the tag 'Term'\n    if (gotNothing(t)) {\n      //ensure it's atleast word-looking\n      if (t.isWord() === false) {\n        continue;\n      }\n      t.tagAs('Noun', 'noun-fallback');\n    }\n  }\n  return s;\n};\n\nmodule.exports = noun_fallback;\n\n},{\"../paths\":209}],219:[function(_dereq_,module,exports){\n'use strict';\n\nvar log = _dereq_('../paths').log;\nvar path = 'tagger/datePass';\n\n//ambiguous 'may' and 'march'\nvar months = '(may|march|jan|april|sep)';\nvar preps = '(in|by|before|for|during|on|until|after|of|within)';\nvar thisNext = '(last|next|this|previous|current|upcoming|coming)';\nvar sections = '(start|end|middle|starting|ending|midpoint|beginning)';\n// const dayTime = '(night|evening|morning|afternoon|day|daytime)';\n\n// const isDate = (num) => {\n//   if (num && num < 31 && num > 0) {\n//     return true;\n//   }\n//   return false;\n// };\n\n//ensure a year is approximately typical for common years\n//please change in one thousand years\nvar isYear = function isYear(num) {\n  if (num && num > 1000 && num < 3000) {\n    return true;\n  }\n  return false;\n};\n\n//non-destructively tag values & prepositions as dates\nvar datePass = function datePass(ts) {\n  log.here(path);\n\n  ts.match('#Month #DateRange+').tag('Date', 'correction-numberRange');\n  // ts.match(`#Month #Value to #Value`).tag('Date', 'correction-contraction');\n\n  //months\n  ts.match(months + ' (#Determiner|#Value|#Date)').term(0).tag('Month', 'correction-may');\n  ts.match('#Date ' + months).term(1).tag('Month', 'correction-may');\n  ts.match(preps + ' ' + months).term(1).tag('Month', 'correction-may');\n  ts.match('(next|this|last) ' + months).term(1).tag('Month', 'correction-may'); //maybe not 'this'\n\n  //values\n  ts.match('#Value #Abbreviation').tag('Value', 'value-abbr');\n  ts.match('a #Value').tag('Value', 'a-value');\n  ts.match('(minus|negative) #Value').tag('Value', 'minus-value');\n  ts.match('#Value grand').tag('Value', 'value-grand');\n  // ts.match('#Ordinal (half|quarter)').tag('Value', 'ordinal-half');//not ready\n  ts.match('(half|quarter) #Ordinal').tag('Value', 'half-ordinal');\n  ts.match('(hundred|thousand|million|billion|trillion) and #Value').tag('Value', 'magnitude-and-value');\n  ts.match('#Value point #Value').tag('Value', 'value-point-value');\n\n  //time\n  ts.match('#Cardinal #Time').tag('Time', 'value-time');\n  ts.match('(by|before|after|at|@|about) #Time').tag('Time', 'preposition-time');\n  ts.match('(#Value|#Time) (am|pm)').tag('Time', 'value-ampm');\n  ts.match('all day').tag('Time', 'all-day');\n\n  //seasons\n  ts.match(preps + '? ' + thisNext + ' (spring|summer|winter|fall|autumn)').tag('Date', 'thisNext-season');\n  ts.match('the? ' + sections + ' of (spring|summer|winter|fall|autumn)').tag('Date', 'section-season');\n\n  //june the 5th\n  ts.match('#Date the? #Ordinal').tag('Date', 'correction-date');\n  //5th of March\n  ts.match('#Value of? #Month').tag('Date', 'value-of-month');\n  //5 March\n  ts.match('#Cardinal #Month').tag('Date', 'cardinal-month');\n  //march 5 to 7\n  ts.match('#Month #Value to #Value').tag('Date', 'value-to-value');\n\n  //last month\n  ts.match(thisNext + ' #Date').tag('Date', 'thisNext-date');\n  //for four days\n  ts.match(preps + '? #Value #Duration').tag('Date', 'value-duration');\n\n  //by 5 March\n  ts.match('due? (by|before|after|until) #Date').tag('Date', 'by-date');\n  //tomorrow before 3\n  ts.match('#Date (by|before|after|at|@|about) #Cardinal').not('^#Date').tag('Time', 'date-before-Cardinal');\n  //2pm est\n  ts.match('#Time (eastern|pacific|central|mountain)').term(1).tag('Time', 'timezone');\n  ts.match('#Time (est|pst|gmt)').term(1).tag('Time', 'timezone abbr');\n  //saturday am\n  ts.match('#Date (am|pm)').term(1).unTag('Verb').unTag('Copula').tag('Time', 'date-am');\n  //late at night\n  ts.match('at night').tag('Time', 'at-night');\n  ts.match('in the (night|evening|morning|afternoon|day|daytime)').tag('Time', 'in-the-night');\n  ts.match('(early|late) (at|in)? the? (night|evening|morning|afternoon|day|daytime)').tag('Time', 'early-evening');\n  //march 12th 2018\n  ts.match('#Month #Value #Cardinal').tag('Date', 'month-value-cardinal');\n  ts.match('(last|next|this|previous|current|upcoming|coming|the) #Date').tag('Date', 'next-feb');\n  ts.match('#Date #Value').tag('Date', 'date-value');\n  ts.match('#Value #Date').tag('Date', 'value-date');\n  ts.match('#Date #Preposition #Date').tag('Date', 'date-prep-date');\n\n  //two days before\n  ts.match('#Value #Duration #Conjunction').tag('Date', 'val-duration-conjunction');\n\n  //start of june\n  ts.match('the? ' + sections + ' of #Date').tag('Date', 'section-of-date');\n\n  //year tagging\n  var value = ts.match('#Date #Value #Cardinal').lastTerm().values();\n  var num = value.numbers()[0];\n  if (isYear(num)) {\n    value.tag('Year', 'date-value-year');\n  }\n  //scoops up a bunch\n  value = ts.match('#Date+ #Cardinal').lastTerm().values();\n  num = value.numbers()[0];\n  if (isYear(num)) {\n    value.tag('Year', 'date-year');\n  }\n  //feb 8 2018\n  value = ts.match('#Month #Value #Cardinal').lastTerm().values();\n  num = value.numbers()[0];\n  if (isYear(num)) {\n    value.tag('Year', 'date-year2');\n  }\n  //feb 8 to 10th 2018\n  value = ts.match('#Month #Value to #Value #Cardinal').lastTerm().values();\n  num = value.numbers()[0];\n  if (isYear(num)) {\n    value.tag('Year', 'date-year3');\n  }\n  //in 1998\n  value = ts.match('(in|of|by|during|before|starting|ending|for|year) #Cardinal').lastTerm().values();\n  num = value.numbers()[0];\n  if (isYear(num)) {\n    value.tag('Year', 'preposition-year');\n  }\n  //fifth week in 1998\n  ts.match('#Duration in #Date').tag('Date', 'duration-in-date');\n\n  return ts;\n};\n\nmodule.exports = datePass;\n\n},{\"../paths\":209}],220:[function(_dereq_,module,exports){\n'use strict';\n\nvar log = _dereq_('../paths').log;\nvar path = 'tagger/auxillary';\n//\n\nvar auxillary = {\n  'do': true,\n  'don\\'t': true,\n  'does': true,\n  'doesn\\'t': true,\n  'will': true,\n  'wont': true,\n  'won\\'t': true,\n  'have': true,\n  'haven\\'t': true,\n  'had': true,\n  'hadn\\'t': true,\n  'not': true\n};\n\nvar corrections = function corrections(ts) {\n  log.here(path);\n  //set verbs as auxillaries\n  for (var i = 0; i < ts.terms.length; i++) {\n    var t = ts.terms[i];\n    if (auxillary[t.normal] || auxillary[t.silent_term]) {\n      var next = ts.terms[i + 1];\n      //if next word is a verb\n      if (next && (next.tag.Verb || next.tag.Adverb || next.tag.Negative)) {\n        t.tagAs('Auxillary', 'corrections-auxillary');\n        continue;\n      }\n    }\n  }\n  return ts;\n};\n\nmodule.exports = corrections;\n\n},{\"../paths\":209}],221:[function(_dereq_,module,exports){\n'use strict';\n\nvar log = _dereq_('../paths').log;\nvar path = 'tagger/negation';\n\n// 'not' is sometimes a verb, sometimes an adjective\nvar negation_step = function negation_step(ts) {\n  log.here(path);\n  for (var i = 0; i < ts.length; i++) {\n    var t = ts.get(i);\n    if (t.normal === 'not' || t.silent_term === 'not') {\n      //find the next verb/adjective\n      for (var o = i + 1; o < ts.length; o++) {\n        if (ts.get(o).tag.Verb) {\n          t.tagAs('VerbPhrase', 'negate-verb');\n          break;\n        }\n        if (ts.get(o).tag.Adjective) {\n          t.tagAs('AdjectivePhrase', 'negate-adj');\n          break;\n        }\n      }\n    }\n  }\n  return ts;\n};\n\nmodule.exports = negation_step;\n\n},{\"../paths\":209}],222:[function(_dereq_,module,exports){\n'use strict';\n\nvar log = _dereq_('../paths').log;\nvar phrasals = _dereq_('./data/phrasal_verbs');\nvar toInfinitive = _dereq_('../../../result/subset/verbs/methods/toInfinitive/index.js');\n\nvar path = 'tagger/phrasal';\n\n//words that could be particles\nvar particles = {\n  'aback': true,\n  'along': true,\n  'apart': true,\n  'at': true,\n  'away': true,\n  'back': true,\n  'by': true,\n  'do': true,\n  'down': true,\n  'forth': true,\n  'forward': true,\n  // 'in': true,\n  'into': true,\n  'it': true,\n  'off': true,\n  'on': true,\n  'out': true,\n  'over': true,\n  'round': true,\n  'through': true,\n  'together': true,\n  'under': true,\n  'up': true,\n  'upon': true,\n  'way': true\n};\n\n//phrasal verbs are compound verbs like 'beef up'\nvar phrasals_step = function phrasals_step(ts) {\n  log.here(path);\n  for (var i = 1; i < ts.length; i++) {\n    var t = ts.get(i);\n    //is it a particle, like 'up'\n    if (particles[t.normal] || t.normal === 'in') {\n      //look backwards\n      var last = ts.get(i - 1);\n      if (last.tag.Verb) {\n        var inf = toInfinitive(last);\n        if (phrasals[inf + ' ' + t.normal]) {\n          t.tagAs('Particle', 'phrasalVerb-particle');\n        }\n      }\n    }\n  }\n  return ts;\n};\n\nmodule.exports = phrasals_step;\n\n},{\"../../../result/subset/verbs/methods/toInfinitive/index.js\":149,\"../paths\":209,\"./data/phrasal_verbs\":235}],223:[function(_dereq_,module,exports){\n'use strict';\n//-types of comma-use-\n// PlaceComma - Hollywood, California\n// List       - cool, fun, and great.\n// ClauseEnd  - if so, we do.\n\n//like Toronto, Canada\n\nvar isPlaceComma = function isPlaceComma(ts, i) {\n  var t = ts.terms[i];\n  var nextTerm = ts.terms[i + 1];\n  //'australia, canada' is a list\n  if (nextTerm && t.tag.Place && !t.tag.Country && nextTerm.tag.Country) {\n    return true;\n  }\n  return false;\n};\n\n//adj, noun, or verb\nvar mainTag = function mainTag(t) {\n  if (t.tag.Adjective) {\n    return 'Adjective';\n  }\n  if (t.tag.Noun) {\n    return 'Noun';\n  }\n  if (t.tag.Verb) {\n    return 'Verb';\n  }\n  return null;\n};\n\nvar tagAsList = function tagAsList(ts, start, end) {\n  for (var i = start; i <= end; i++) {\n    ts.terms[i].tag.List = true;\n  }\n};\n\n//take the first term with a comma, and test to the right.\n//the words with a comma must be the same pos.\nvar isList = function isList(ts, i) {\n  var start = i;\n  var tag = mainTag(ts.terms[i]);\n  //ensure there's a following comma, and its the same pos\n  //then a Conjunction\n  var sinceComma = 0;\n  var count = 0;\n  var hasConjunction = false;\n  for (i = i + 1; i < ts.terms.length; i++) {\n    var t = ts.terms[i];\n    //are we approaching the end\n    if (count > 0 && t.tag.Conjunction) {\n      hasConjunction = true;\n      continue;\n    }\n    //found one,\n    if (t.tag[tag]) {\n      //looks good. keep it going\n      if (t.tag.Comma) {\n        count += 1;\n        sinceComma = 0;\n        continue;\n      }\n      if (count > 0 && hasConjunction) {\n        //is this the end of the list?\n        tagAsList(ts, start, i);\n        return true;\n      }\n    }\n    sinceComma += 1;\n    //have we gone too far without a comma?\n    if (sinceComma > 5) {\n      return false;\n    }\n  }\n  return false;\n};\n\nvar commaStep = function commaStep(ts) {\n  //tag the correct punctuation forms\n  for (var i = 0; i < ts.terms.length; i++) {\n    var t = ts.terms[i];\n    var punct = t.endPunctuation();\n    if (punct === ',') {\n      t.tagAs('Comma', 'comma-step');\n      continue;\n    }\n    if (punct === ';' || punct === ':') {\n      t.tagAs('ClauseEnd', 'clause-punt');\n      continue;\n    }\n    //support elipses\n    if (t.whitespace.after.match(/^\\.\\./)) {\n      t.tagAs('ClauseEnd', 'clause-elipses');\n      continue;\n    }\n    //support ' - ' clause\n    if (ts.terms[i + 1] && ts.terms[i + 1].whitespace.before.match(/ - /)) {\n      t.tagAs('ClauseEnd', 'hypen-clause');\n      continue;\n    }\n  }\n\n  //disambiguate the commas now\n  for (var _i = 0; _i < ts.terms.length; _i++) {\n    var _t = ts.terms[_i];\n    if (_t.tag.Comma) {\n      //if we already got it\n      if (_t.tag.List) {\n        continue;\n      }\n      //like 'Hollywood, California'\n      if (isPlaceComma(ts, _i)) {\n        continue;\n      }\n      //like 'cold, wet hands'\n      if (isList(ts, _i)) {\n        continue;\n      }\n      //otherwise, it's a phrasal comma, like 'you must, if you think so'\n      _t.tag.ClauseEnd = true;\n    }\n  }\n  return ts;\n};\n\nmodule.exports = commaStep;\n\n},{}],224:[function(_dereq_,module,exports){\n'use strict';\n//decide if an apostrophe s is a contraction or not\n// 'spencer's nice' -> 'spencer is nice'\n// 'spencer's house' -> 'spencer's house'\n\n//these are always contractions\n\nvar blacklist = {\n  'it\\'s': true,\n  'that\\'s': true\n};\n\n//a possessive means \"'s\" describes ownership, not a contraction, like 'is'\nvar is_possessive = function is_possessive(terms, x) {\n  var t = terms.get(x);\n  //these are always contractions, not possessive\n  if (blacklist[t.normal]) {\n    return false;\n  }\n  //\"spencers'\" - this is always possessive - eg \"flanders'\"\n  if (t.normal.match(/[a-z]s'$/)) {\n    return true;\n  }\n  //if no apostrophe s, return\n  if (!t.normal.match(/[a-z]'s$/)) {\n    return false;\n  }\n  //some parts-of-speech can't be possessive\n  if (t.tag['Pronoun']) {\n    return false;\n  }\n  var nextWord = terms.get(x + 1);\n  //last word is possessive  - \"better than spencer's\"\n  if (!nextWord) {\n    return true;\n  }\n  //next word is 'house'\n  if (nextWord.tag['Noun']) {\n    return true;\n  }\n  //rocket's red glare\n  if (nextWord.tag['Adjective'] && terms.get(x + 2) && terms.get(x + 2).tag['Noun']) {\n    return true;\n  }\n  //next word is an adjective\n  if (nextWord.tag['Adjective'] || nextWord.tag['Verb'] || nextWord.tag['Adverb']) {\n    return false;\n  }\n  return false;\n};\n\n//tag each term as possessive, if it should\nvar possessiveStep = function possessiveStep(terms) {\n  for (var i = 0; i < terms.length; i++) {\n    if (is_possessive(terms, i)) {\n      var t = terms.get(i);\n      //if it's not already a noun, co-erce it to one\n      if (!t.tag['Noun']) {\n        t.tagAs('Noun', 'possessive_pass');\n      }\n      t.tagAs('Possessive', 'possessive_pass');\n    }\n  }\n  return terms;\n};\nmodule.exports = possessiveStep;\n\n},{}],225:[function(_dereq_,module,exports){\n'use strict';\n'use strict';\n\nvar log = _dereq_('../paths').log;\nvar path = 'tagger/value';\n\nvar value_step = function value_step(ts) {\n  log.here(path);\n  ts.terms.forEach(function (t) {\n    if (t.tag.Value) {\n      //ordinal/cardinal\n      if (!t.tag.Ordinal && !t.tag.Cardinal) {\n        if (t.normal.match(/^[0-9]([0-9]+,)*?(\\.[0-9])$/)) {\n          t.tagAs('Cardinal', 'ordinal-regex');\n        } else {\n          t.tagAs('Cardinal', 'cardinal-regex');\n        }\n      }\n      //text/number\n      if (!t.tag.TextValue && !t.tag.NumericValue) {\n        if (t.normal.match(/^[a-z]/)) {\n          t.tagAs('TextValue', 'TextValue-regex');\n        } else {\n          t.tagAs('NumericValue', 'NumericValue-regex');\n        }\n      }\n    }\n  });\n  return ts;\n};\n\nmodule.exports = value_step;\n\n},{\"../paths\":209}],226:[function(_dereq_,module,exports){\n'use strict';\n'use strict';\n\nvar log = _dereq_('../paths').log;\nvar path = 'tagger/acronym_step';\n\nvar acronym_step = function acronym_step(ts) {\n  log.here(path);\n  ts.terms.forEach(function (t) {\n    if (t.isAcronym()) {\n      t.tagAs('Acronym', 'acronym-step');\n    }\n  });\n  return ts;\n};\n\nmodule.exports = acronym_step;\n\n},{\"../paths\":209}],227:[function(_dereq_,module,exports){\n'use strict';\n\nvar fns = _dereq_('../paths').fns;\nvar emojiReg = _dereq_('./data/emoji_regex');\nvar emoticon = _dereq_('./data/emoticon_list');\n//test for forms like ':woman_tone2:‍:ear_of_rice:'\n//https://github.com/Kikobeats/emojis-keywords/blob/master/index.js\nvar isCommaEmoji = function isCommaEmoji(t) {\n  if (fns.startsWith(t.text, ':')) {\n    //end comma can be last or second-last ':haircut_tone3:‍♀️'\n    if (!t.text.match(/:.?$/)) {\n      return false;\n    }\n    //ensure no spaces\n    if (t.text.match(' ')) {\n      return false;\n    }\n    //reasonably sized\n    if (t.text.length > 35) {\n      return false;\n    }\n    return true;\n  }\n  return false;\n};\n\n//check against emoticon whitelist\nvar isEmoticon = function isEmoticon(t) {\n  //normalize the 'eyes'\n  var str = t.text.replace(/^[:;]/, ':');\n  str = str.replace(/[:;]$/, ':');\n  return emoticon[str];\n};\n\n//\nvar emojiStep = function emojiStep(ts) {\n  for (var i = 0; i < ts.terms.length; i++) {\n    var t = ts.terms[i];\n    //test for :keyword: emojis\n    if (isCommaEmoji(t)) {\n      t.tagAs('Emoji', 'comma-emoji');\n    }\n    //test for unicode emojis\n    if (t.text.match(emojiReg)) {\n      t.tagAs('Emoji', 'unicode-emoji');\n    }\n    //test for emoticon ':)' emojis\n    if (isEmoticon(t)) {\n      t.tagAs('Emoji', 'emoticon-emoji');\n    }\n  }\n  return ts;\n};\nmodule.exports = emojiStep;\n\n},{\"../paths\":209,\"./data/emoji_regex\":232,\"./data/emoticon_list\":233}],228:[function(_dereq_,module,exports){\n'use strict';\n\nvar log = _dereq_('../paths').log;\nvar path = 'tagger/person_step';\n\nvar titles = _dereq_('../paths').data.titles;\ntitles = titles.reduce(function (h, str) {\n  h[str] = true;\n  return h;\n}, {});\n\nvar person_step = function person_step(ts) {\n  log.here(path);\n  var reason = 'person-step';\n  // x Lastname\n  ts.match('#Noun #LastName').firstTerm().canBe('#FirstName').tag('#FirstName', 'noun-lastname');\n\n  // Firstname x (dangerous)\n  var tmp = ts.match('#FirstName #Noun').ifNo('^#Possessive').ifNo('#ClauseEnd .');\n  tmp.lastTerm().canBe('#LastName').tag('#LastName', 'firstname-noun');\n\n  //j.k Rowling\n  ts.match('#Acronym #TitleCase').canBe('#Person').tag('#Person', 'acronym-titlecase');\n  ts.match('#Noun van der? #Noun').canBe('#Person').tag('#Person', 'von der noun');\n  ts.match('#FirstName de #Noun').canBe('#Person').tag('#Person', 'firstname-de-noun');\n  ts.match('(king|queen|prince|saint|lady) of? #Noun').canBe('#Person').tag('#Person', 'king-of-noun');\n  ts.match('#FirstName (bin|al) #Noun').canBe('#Person').tag('#Person', 'firstname-al-noun');\n\n  //ambiguous firstnames\n  var maybe = ['will', 'may', 'april', 'june', 'said', 'rob', 'wade', 'ray', 'rusty', 'drew', 'miles', 'jack', 'chuck', 'randy', 'jan', 'pat', 'cliff', 'bill'];\n  maybe = '(' + maybe.join('|') + ')';\n  ts.match(maybe + ' #LastName').firstTerm().tag('#FirstName', reason);\n\n  //ambiguous lastnames\n  maybe = ['green', 'white', 'brown', 'hall', 'young', 'king', 'hill', 'cook', 'gray', 'price'];\n  maybe = '(' + maybe.join('|') + ')';\n  ts.match('#FirstName ' + maybe).tag('#Person', reason);\n\n  //people chunks\n  //John L. Foo\n  ts.match('#FirstName #Acronym #TitleCase').tag('Person', 'firstname-acronym-titlecase');\n  //Andrew Lloyd Webber\n  ts.match('#FirstName #FirstName #TitleCase').tag('Person', 'firstname-firstname-titlecase');\n  //Mr Foo\n  ts.match('#Honorific #FirstName? #TitleCase').tag('Person', 'Honorific-TitleCase');\n  //mr X\n  ts.match('#Honorific #Acronym').tag('Person', 'Honorific-TitleCase');\n  //John Foo\n  ts.match('#FirstName #TitleCase').match('#FirstName #Noun').tag('Person', 'firstname-titlecase');\n  //ludwig van beethovan\n  ts.match('#TitleCase (van|al|bin) #TitleCase').tag('Person', 'correction-titlecase-van-titlecase');\n  ts.match('#TitleCase (de|du) la? #TitleCase').tag('Person', 'correction-titlecase-van-titlecase');\n  //peter the great\n  ts.match('#FirstName the #Adjective').tag('Person', 'correction-determiner5');\n  //Morgan Shlkjsfne\n  ts.match('#Person #TitleCase').match('#TitleCase #Noun').tag('Person', 'correction-person-titlecase');\n\n  //last names\n  // let reason = 'person-correction';\n  //Joe K. Sombrero\n  ts.match('#FirstName #Acronym #Noun').ifNo('#Date').tag('#Person', reason).lastTerm().tag('#LastName', reason);\n  //Jani K. Smith\n  ts.match('#TitleCase #Acronym? #LastName').ifNo('#Date').tag('#Person', reason).lastTerm().tag('#LastName', reason);\n  //john bodego's\n  ts.match('#FirstName (#Singular|#Possessive)').ifNo('#Date').tag('#Person', reason).lastTerm().tag('#LastName', reason);\n  //pope francis\n  ts.match('(lady|queen|sister) #TitleCase').ifNo('#Date').tag('#FemaleName', reason);\n  ts.match('(king|pope|father) #TitleCase').ifNo('#Date').tag('#MaleName', 'correction-poe');\n\n  //peter II\n  ts.match('#Person #Person the? #RomanNumeral').tag('Person', 'correction-roman-numeral');\n\n  //'Professor Fink', 'General McCarthy'\n  for (var i = 0; i < ts.terms.length - 1; i++) {\n    var t = ts.terms[i];\n    if (titles[t.normal]) {\n      if (ts.terms[i + 1] && ts.terms[i + 1].tag.Person) {\n        t.tagAs('Person', 'title-person');\n      }\n    }\n  }\n\n  //remove single 'mr'\n  ts.match('#Person+').match('^#Honorific$').unTag('Person', 'single-honorific');\n  return ts;\n};\n\nmodule.exports = person_step;\n\n},{\"../paths\":209}],229:[function(_dereq_,module,exports){\n'use strict';\n\nvar log = _dereq_('../paths').log;\nvar path = 'tagger/person_step';\n\nvar tagSlice = function tagSlice(ts, start, end) {\n  ts.terms.slice(start, end + 1).forEach(function (t) {\n    t.tagAs('Quotation', 'quotation_step');\n  });\n};\n\n//tag a inline quotation as such\nvar quotation_step = function quotation_step(ts) {\n  log.here(path);\n  for (var i = 0; i < ts.terms.length; i++) {\n    var t = ts.terms[i];\n    if (t.text.match(/^[\"'\\u201B\\u201C\\u2033\\u201F\\u2018]/)) {\n      //look for the ending\n      for (var o = 0; o < ts.terms.length; o++) {\n        //max-length- don't go-on forever\n        if (!ts.terms[i + o] || o > 8) {\n          break;\n        }\n        if (ts.terms[i + o].text.match(/.[\"'\\u201D\\u2036\\u2019]([;:,.])?$/)) {\n          tagSlice(ts, i, o + i);\n          i += o;\n          break;\n        }\n      }\n    }\n  }\n  return ts;\n};\nmodule.exports = quotation_step;\n\n},{\"../paths\":209}],230:[function(_dereq_,module,exports){\n'use strict';\n\nvar log = _dereq_('../paths').log;\nvar path = 'tagger/organization_step';\n\n//orgwords like 'bank' in 'Foo Bank'\nvar orgWords = _dereq_('../paths').data.orgWords;\norgWords = orgWords.reduce(function (h, str) {\n  h[str] = true;\n  return h;\n}, {});\n\n//could this word be an organization\nvar maybeOrg = function maybeOrg(t) {\n  //must be a noun\n  if (!t.tag.Noun) {\n    return false;\n  }\n  //can't be these things\n  if (t.tag.Pronoun || t.tag.Comma || t.tag.Possessive) {\n    return false;\n  }\n  //must be one of these\n  if (t.tag.TitleCase || t.tag.Organization) {\n    return true;\n  }\n  return false;\n};\n\nvar organization_step = function organization_step(ts) {\n  log.here(path);\n  for (var i = 0; i < ts.terms.length; i++) {\n    var t = ts.terms[i];\n    if (orgWords[t.normal]) {\n      //eg. Toronto University\n      var lastTerm = ts.terms[i - 1];\n      if (lastTerm && maybeOrg(lastTerm)) {\n        lastTerm.tagAs('Organization', 'org-word-1');\n        t.tagAs('Organization', 'org-word-2');\n        continue;\n      }\n      //eg. University of Toronto\n      var nextTerm = ts.terms[i + 1];\n      if (nextTerm && nextTerm.normal === 'of') {\n        if (ts.terms[i + 2] && maybeOrg(ts.terms[i + 2])) {\n          t.tagAs('Organization', 'org-word-1');\n          nextTerm.tagAs('Organization', 'org-word-2');\n          ts.terms[i + 2].tagAs('Organization', 'org-word-3');\n          continue;\n        }\n      }\n    }\n  }\n  return ts;\n};\nmodule.exports = organization_step;\n\n},{\"../paths\":209}],231:[function(_dereq_,module,exports){\n'use strict';\n\nvar log = _dereq_('../paths').log;\nvar isPlural = _dereq_('../../../result/subset/nouns/isPlural');\nvar path = 'tagger/plural';\n\nvar pluralStep = function pluralStep(ts) {\n  log.here(path);\n  for (var i = 0; i < ts.terms.length; i++) {\n    var t = ts.terms[i];\n    if (t.tag.Noun) {\n      //skip existing fast\n      if (t.tag.Singular || t.tag.Plural) {\n        continue;\n      }\n      //check if it's plural\n      var plural = isPlural(t); //can be null if unknown\n      if (plural) {\n        t.tagAs('Plural', 'pluralStep');\n      } else if (plural === false) {\n        // console.log(t.normal, plural);\n        t.tagAs('Singular', 'pluralStep');\n      }\n    }\n  }\n  return ts;\n};\n\nmodule.exports = pluralStep;\n\n},{\"../../../result/subset/nouns/isPlural\":93,\"../paths\":209}],232:[function(_dereq_,module,exports){\n\"use strict\";\n\n//yep,\n//https://github.com/mathiasbynens/emoji-regex/blob/master/index.js\nmodule.exports = /(?:0\\u20E3\\n1\\u20E3|2\\u20E3|3\\u20E3|4\\u20E3|5\\u20E3|6\\u20E3|7\\u20E3|8\\u20E3|9\\u20E3|#\\u20E3|\\*\\u20E3|\\uD83C(?:\\uDDE6\\uD83C(?:\\uDDE8|\\uDDE9|\\uDDEA|\\uDDEB|\\uDDEC|\\uDDEE|\\uDDF1|\\uDDF2|\\uDDF4|\\uDDF6|\\uDDF7|\\uDDF8|\\uDDF9|\\uDDFA|\\uDDFC|\\uDDFD|\\uDDFF)|\\uDDE7\\uD83C(?:\\uDDE6|\\uDDE7|\\uDDE9|\\uDDEA|\\uDDEB|\\uDDEC|\\uDDED|\\uDDEE|\\uDDEF|\\uDDF1|\\uDDF2|\\uDDF3|\\uDDF4|\\uDDF6|\\uDDF7|\\uDDF8|\\uDDF9|\\uDDFB|\\uDDFC|\\uDDFE|\\uDDFF)|\\uDDE8\\uD83C(?:\\uDDE6|\\uDDE8|\\uDDE9|\\uDDEB|\\uDDEC|\\uDDED|\\uDDEE|\\uDDF0|\\uDDF1|\\uDDF2|\\uDDF3|\\uDDF4|\\uDDF5|\\uDDF7|\\uDDFA|\\uDDFB|\\uDDFC|\\uDDFD|\\uDDFE|\\uDDFF)|\\uDDE9\\uD83C(?:\\uDDEA|\\uDDEC|\\uDDEF|\\uDDF0|\\uDDF2|\\uDDF4|\\uDDFF)|\\uDDEA\\uD83C(?:\\uDDE6|\\uDDE8|\\uDDEA|\\uDDEC|\\uDDED|\\uDDF7|\\uDDF8|\\uDDF9|\\uDDFA)|\\uDDEB\\uD83C(?:\\uDDEE|\\uDDEF|\\uDDF0|\\uDDF2|\\uDDF4|\\uDDF7)|\\uDDEC\\uD83C(?:\\uDDE6|\\uDDE7|\\uDDE9|\\uDDEA|\\uDDEB|\\uDDEC|\\uDDED|\\uDDEE|\\uDDF1|\\uDDF2|\\uDDF3|\\uDDF5|\\uDDF6|\\uDDF7|\\uDDF8|\\uDDF9|\\uDDFA|\\uDDFC|\\uDDFE)|\\uDDED\\uD83C(?:\\uDDF0|\\uDDF2|\\uDDF3|\\uDDF7|\\uDDF9|\\uDDFA)|\\uDDEE\\uD83C(?:\\uDDE8|\\uDDE9|\\uDDEA|\\uDDF1|\\uDDF2|\\uDDF3|\\uDDF4|\\uDDF6|\\uDDF7|\\uDDF8|\\uDDF9)|\\uDDEF\\uD83C(?:\\uDDEA|\\uDDF2|\\uDDF4|\\uDDF5)|\\uDDF0\\uD83C(?:\\uDDEA|\\uDDEC|\\uDDED|\\uDDEE|\\uDDF2|\\uDDF3|\\uDDF5|\\uDDF7|\\uDDFC|\\uDDFE|\\uDDFF)|\\uDDF1\\uD83C(?:\\uDDE6|\\uDDE7|\\uDDE8|\\uDDEE|\\uDDF0|\\uDDF7|\\uDDF8|\\uDDF9|\\uDDFA|\\uDDFB|\\uDDFE)|\\uDDF2\\uD83C(?:\\uDDE6|\\uDDE8|\\uDDE9|\\uDDEA|\\uDDEB|\\uDDEC|\\uDDED|\\uDDF0|\\uDDF1|\\uDDF2|\\uDDF3|\\uDDF4|\\uDDF5|\\uDDF6|\\uDDF7|\\uDDF8|\\uDDF9|\\uDDFA|\\uDDFB|\\uDDFC|\\uDDFD|\\uDDFE|\\uDDFF)|\\uDDF3\\uD83C(?:\\uDDE6|\\uDDE8|\\uDDEA|\\uDDEB|\\uDDEC|\\uDDEE|\\uDDF1|\\uDDF4|\\uDDF5|\\uDDF7|\\uDDFA|\\uDDFF)|\\uDDF4\\uD83C\\uDDF2|\\uDDF5\\uD83C(?:\\uDDE6|\\uDDEA|\\uDDEB|\\uDDEC|\\uDDED|\\uDDF0|\\uDDF1|\\uDDF2|\\uDDF3|\\uDDF7|\\uDDF8|\\uDDF9|\\uDDFC|\\uDDFE)|\\uDDF6\\uD83C\\uDDE6|\\uDDF7\\uD83C(?:\\uDDEA|\\uDDF4|\\uDDF8|\\uDDFA|\\uDDFC)|\\uDDF8\\uD83C(?:\\uDDE6|\\uDDE7|\\uDDE8|\\uDDE9|\\uDDEA|\\uDDEC|\\uDDED|\\uDDEE|\\uDDEF|\\uDDF0|\\uDDF1|\\uDDF2|\\uDDF3|\\uDDF4|\\uDDF7|\\uDDF8|\\uDDF9|\\uDDFB|\\uDDFD|\\uDDFE|\\uDDFF)|\\uDDF9\\uD83C(?:\\uDDE6|\\uDDE8|\\uDDE9|\\uDDEB|\\uDDEC|\\uDDED|\\uDDEF|\\uDDF0|\\uDDF1|\\uDDF2|\\uDDF3|\\uDDF4|\\uDDF7|\\uDDF9|\\uDDFB|\\uDDFC|\\uDDFF)|\\uDDFA\\uD83C(?:\\uDDE6|\\uDDEC|\\uDDF2|\\uDDF8|\\uDDFE|\\uDDFF)|\\uDDFB\\uD83C(?:\\uDDE6|\\uDDE8|\\uDDEA|\\uDDEC|\\uDDEE|\\uDDF3|\\uDDFA)|\\uDDFC\\uD83C(?:\\uDDEB|\\uDDF8)|\\uDDFD\\uD83C\\uDDF0|\\uDDFE\\uD83C(?:\\uDDEA|\\uDDF9)|\\uDDFF\\uD83C(?:\\uDDE6|\\uDDF2|\\uDDFC)))|[\\xA9\\xAE\\u203C\\u2049\\u2122\\u2139\\u2194-\\u2199\\u21A9\\u21AA\\u231A\\u231B\\u2328\\u23CF\\u23E9-\\u23F3\\u23F8-\\u23FA\\u24C2\\u25AA\\u25AB\\u25B6\\u25C0\\u25FB-\\u25FE\\u2600-\\u2604\\u260E\\u2611\\u2614\\u2615\\u2618\\u261D\\u2620\\u2622\\u2623\\u2626\\u262A\\u262E\\u262F\\u2638-\\u263A\\u2648-\\u2653\\u2660\\u2663\\u2665\\u2666\\u2668\\u267B\\u267F\\u2692-\\u2694\\u2696\\u2697\\u2699\\u269B\\u269C\\u26A0\\u26A1\\u26AA\\u26AB\\u26B0\\u26B1\\u26BD\\u26BE\\u26C4\\u26C5\\u26C8\\u26CE\\u26CF\\u26D1\\u26D3\\u26D4\\u26E9\\u26EA\\u26F0-\\u26F5\\u26F7-\\u26FA\\u26FD\\u2702\\u2705\\u2708-\\u270D\\u270F\\u2712\\u2714\\u2716\\u271D\\u2721\\u2728\\u2733\\u2734\\u2744\\u2747\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2763\\u2764\\u2795-\\u2797\\u27A1\\u27B0\\u27BF\\u2934\\u2935\\u2B05-\\u2B07\\u2B1B\\u2B1C\\u2B50\\u2B55\\u3030\\u303D\\u3297\\u3299]|\\uD83C[\\uDC04\\uDCCF\\uDD70\\uDD71\\uDD7E\\uDD7F\\uDD8E\\uDD91-\\uDD9A\\uDE01\\uDE02\\uDE1A\\uDE2F\\uDE32-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF21\\uDF24-\\uDF93\\uDF96\\uDF97\\uDF99-\\uDF9B\\uDF9E-\\uDFF0\\uDFF3-\\uDFF5\\uDFF7-\\uDFFF]|\\uD83D[\\uDC00-\\uDCFD\\uDCFF-\\uDD3D\\uDD49-\\uDD4E\\uDD50-\\uDD67\\uDD6F\\uDD70\\uDD73-\\uDD79\\uDD87\\uDD8A-\\uDD8D\\uDD90\\uDD95\\uDD96\\uDDA5\\uDDA8\\uDDB1\\uDDB2\\uDDBC\\uDDC2-\\uDDC4\\uDDD1-\\uDDD3\\uDDDC-\\uDDDE\\uDDE1\\uDDE3\\uDDEF\\uDDF3\\uDDFA-\\uDE4F\\uDE80-\\uDEC5\\uDECB-\\uDED0\\uDEE0-\\uDEE5\\uDEE9\\uDEEB\\uDEEC\\uDEF0\\uDEF3]|\\uD83E[\\uDD10-\\uDD18\\uDD80-\\uDD84\\uDDC0]/g;\n\n},{}],233:[function(_dereq_,module,exports){\n'use strict';\n\n//just some of the most common emoticons\n//faster than\n//http://stackoverflow.com/questions/28077049/regex-matching-emoticons\nmodule.exports = {\n  ':(': true,\n  ':)': true,\n  ':P': true,\n  ':p': true,\n  ':O': true,\n  ':3': true,\n  ':|': true,\n  ':/': true,\n  ':\\\\': true,\n  ':$': true,\n  ':*': true,\n  ':@': true,\n  ':-(': true,\n  ':-)': true,\n  ':-P': true,\n  ':-p': true,\n  ':-O': true,\n  ':-3': true,\n  ':-|': true,\n  ':-/': true,\n  ':-\\\\': true,\n  ':-$': true,\n  ':-*': true,\n  ':-@': true,\n  ':^(': true,\n  ':^)': true,\n  ':^P': true,\n  ':^p': true,\n  ':^O': true,\n  ':^3': true,\n  ':^|': true,\n  ':^/': true,\n  ':^\\\\': true,\n  ':^$': true,\n  ':^*': true,\n  ':^@': true,\n  '):': true,\n  '(:': true,\n  '$:': true,\n  '*:': true,\n  ')-:': true,\n  '(-:': true,\n  '$-:': true,\n  '*-:': true,\n  ')^:': true,\n  '(^:': true,\n  '$^:': true,\n  '*^:': true,\n  '<3': true,\n  '</3': true,\n  '<\\\\3': true\n};\n\n},{}],234:[function(_dereq_,module,exports){\n'use strict';\n//markov-like stats about co-occurance, for hints about unknown terms\n//basically, a little-bit better than the noun-fallback\n//just top n-grams from nlp tags, generated from nlp-corpus\n\n//after this word, here's what happens usually\n\nvar afterThisWord = {\n  i: 'Verb', //44% //i walk..\n  first: 'Noun', //50% //first principles..\n  it: 'Verb', //33%\n  there: 'Verb', //35%\n  // to: 'Verb', //32%\n  not: 'Verb', //33%\n  because: 'Noun', //31%\n  'if': 'Noun', //32%\n  but: 'Noun', //26%\n  who: 'Verb', //40%\n  'this': 'Noun', //37%\n  his: 'Noun', //48%\n  when: 'Noun', //33%\n  you: 'Verb', //35%\n  very: 'Adjective', // 39%\n  old: 'Noun', //51%\n  never: 'Verb', //42%\n  before: 'Noun' };\n\n//in advance of this word, this is what happens usually\nvar beforeThisWord = {\n  there: 'Verb', //23% // be there\n  me: 'Verb', //31% //see me\n  man: 'Adjective', // 80% //quiet man\n  only: 'Verb', //27% //sees only\n  him: 'Verb', //32% //show him\n  were: 'Noun', //48% //we were\n  what: 'Verb', //25% //know what\n  took: 'Noun', //38% //he took\n  himself: 'Verb', //31% //see himself\n  went: 'Noun', //43% //he went\n  who: 'Noun', //47% //person who\n  jr: 'Person'\n};\n\n//following this POS, this is likely\nvar afterThisPos = {\n  Adjective: 'Noun', //36% //blue dress\n  Possessive: 'Noun', //41% //his song\n  Determiner: 'Noun', //47%\n  Adverb: 'Verb', //20%\n  // Person: 'Verb', //40%\n  Pronoun: 'Verb', //40%\n  Value: 'Noun', //47%\n  Ordinal: 'Noun', //53%\n  Modal: 'Verb', //35%\n  Superlative: 'Noun', //43%\n  Demonym: 'Noun', //38%\n  Organization: 'Verb', //33%\n  Honorific: 'Person' };\n\n//in advance of this POS, this is likely\nvar beforeThisPos = {\n  Copula: 'Noun', //44% //spencer is\n  PastTense: 'Noun', //33% //spencer walked\n  Conjunction: 'Noun', //36%\n  Modal: 'Noun', //38%\n  PluperfectTense: 'Noun', //40%\n  PerfectTense: 'Verb' };\nmodule.exports = {\n  beforeThisWord: beforeThisWord,\n  afterThisWord: afterThisWord,\n\n  beforeThisPos: beforeThisPos,\n  afterThisPos: afterThisPos\n};\n\n},{}],235:[function(_dereq_,module,exports){\n//phrasal verbs are two words that really mean one verb.\n//'beef up' is one verb, and not some direction of beefing.\n//by @spencermountain, 2015 mit\n//many credits to http://www.allmyphrasalverbs.com/\n'use strict';\n\n//start the list with some randoms\n\nvar main = {\n  'be onto': true,\n  'fall behind': true,\n  'fall through': true,\n  'fool with': true,\n  'get across': true,\n  'get along': true,\n  'get at': true,\n  'give way': true,\n  'hear from': true,\n  'hear of': true,\n  'keep from': true,\n  'lash into': true,\n  'make do': true,\n  'run across': true,\n  'set upon': true,\n  'take aback': true\n};\n\n//if there's a phrasal verb \"keep on\", there's often a \"keep off\"\nvar opposites = {\n  'away': 'back',\n  'in': 'out',\n  'on': 'off',\n  'over': 'under',\n  'together': 'apart',\n  'up': 'down'\n};\n\n//forms that have in/out symmetry\nvar symmetric = {\n  'away': 'blow,bounce,bring,call,come,cut,drop,fire,get,give,go,keep,pass,put,run,send,shoot,switch,take,tie,throw',\n  'in': 'bang,barge,bash,beat,block,book,box,break,bring,burn,butt,carve,cash,check,come,cross,drop,fall,fence,fill,give,grow,hand,hang,head,jack,keep,leave,let,lock,log,move,opt,pack,peel,pull,put,reach,ring,rub,send,set,settle,shut,sign,smash,snow,strike,take,try,turn,type,warm,wave,wean,wear,wheel',\n  'on': 'add,call,carry,catch,count,feed,get,give,go,grind,head,hold,keep,lay,log,pass,pop,power,put,send,show,snap,switch,take,tell,try,turn,wait',\n  'over': 'come,go,look,read,run,talk',\n  'together': 'come,pull,put',\n  'up': 'add,back,beat,bend,blow,boil,bottle,break,bring,buckle,bulk,bundle,call,carve,clean,cut,dress,fill,flag,fold,get,give,grind,grow,hang,hold,keep,let,load,lock,look,man,mark,melt,move,pack,pin,pipe,plump,pop,power,pull,put,rub,scale,scrape,send,set,settle,shake,show,sit,slow,smash,square,stand,strike,take,tear,tie,top,turn,use,wash,wind'\n};\nObject.keys(symmetric).forEach(function (k) {\n  symmetric[k].split(',').forEach(function (s) {\n    //add the given form\n    main[s + ' ' + k] = true;\n    //add its opposite form\n    main[s + ' ' + opposites[k]] = true;\n  });\n});\n\n//forms that don't have in/out symmetry\nvar asymmetric = {\n  'about': 'bring,fool,gad,go,root,mess',\n  'after': 'go,look,take',\n  'ahead': 'get,go,press',\n  'along': 'bring,move',\n  'apart': 'fall,take',\n  'around': 'ask,boss,bring,call,come,fool,get,horse,joke,lie,mess,play',\n  'away': 'back,carry,file,frighten,hide,wash',\n  'back': 'fall,fight,hit,hold,look,pay,stand,think',\n  'by': 'come,drop,get,go,stop,swear,swing,tick,zip',\n  'down': 'bog,calm,fall,hand,hunker,jot,knock,lie,narrow,note,pat,pour,run,tone,trickle,wear',\n  'for': 'fend,file,gun,hanker,root,shoot',\n  'forth': 'bring,come',\n  'forward': 'come,look',\n  'in': 'cave,chip,hone,jump,key,pencil,plug,rein,shade,sleep,stop,suck,tie,trade,tuck,usher,weigh,zero',\n  'into': 'look,run',\n  'it': 'go,have',\n  'off': 'auction,be,beat,blast,block,brush,burn,buzz,cast,cool,drop,end,face,fall,fend,frighten,goof,jack,kick,knock,laugh,level,live,make,mouth,nod,pair,pay,peel,read,reel,ring,rip,round,sail,shave,shoot,sleep,slice,split,square,stave,stop,storm,strike,tear,tee,tick,tip,top,walk,work,write',\n  'on': 'bank,bargain,frown,hit,latch,pile,prattle,press,spring,spur,tack,urge,yammer',\n  'out': 'act,ask,back,bail,bear,black,blank,bleed,blow,blurt,branch,buy,cancel,cut,eat,edge,farm,figure,find,fill,find,fish,fizzle,flake,flame,flare,flesh,flip,geek,get,help,hide,hold,iron,knock,lash,level,listen,lose,luck,make,max,miss,nerd,pan,pass,pick,pig,point,print,psych,rat,read,rent,root,rule,run,scout,see,sell,shout,single,sit,smoke,sort,spell,splash,stamp,start,storm,straighten,suss,time,tire,top,trip,trot,wash,watch,weird,whip,wimp,wipe,work,zone,zonk',\n  'over': 'bend,bubble,do,fall,get,gloss,hold,keel,mull,pore,sleep,spill,think,tide,tip',\n  'round': 'get,go',\n  'through': 'go,run',\n  'to': 'keep,see',\n  'up': 'act,beef,board,bone,boot,brighten,build,buy,catch,cheer,cook,end,eye,face,fatten,feel,fess,fill,fuck,fish,finish,fire,firm,flame,flare,free,freeze,freshen,fry,fuel,gang,gear,goof,hack,ham,heat,hit,hole,hush,jazz,juice,lap,light,lighten,line,link,listen,live,loosen,make,mash,measure,mess,mix,mock,mop,muddle,open,own,pair,patch,pick,prop,psych,read,rough,rustle,save,shack,sign,size,slice,slip,snap,sober,spark,split,spruce,stack,start,stay,stir,stitch,straighten,string,suck,suit,sum,step,team,tee,think,tidy,tighten,toss,trade,trip,type,vacuum,wait,wake,warm,weigh,whip,wire,wise,word,write,zip'\n};\nObject.keys(asymmetric).forEach(function (k) {\n  asymmetric[k].split(',').forEach(function (s) {\n    main[s + ' ' + k] = true;\n  });\n});\n\nmodule.exports = main;\n\n},{}],236:[function(_dereq_,module,exports){\n'use strict';\n\n//these are regexes applied to t.text, instead of t.normal\nmodule.exports = [\n//#funtime\n['^#[a-z]+', 'HashTag'],\n//chillin'\n['[a-z]+n\\'', 'Gerund'],\n//spencers'\n['[a-z]+s\\'', 'Possessive'],\n//589-3809\n['[0-9]{3}-[0-9]{4}', 'PhoneNumber'],\n//632-589-3809\n['\\\\(?[0-9]{3}\\\\)?[ -]?[0-9]{3}-[0-9]{4}', 'PhoneNumber'],\n\n//dates/times\n['[012]?[0-9](:[0-5][0-9])(:[0-5][0-9])', 'Time'], //4:32:32\n['[012]?[0-9](:[0-5][0-9])?(:[0-5][0-9])? ?(am|pm)', 'Time'], //4pm\n['[012]?[0-9](:[0-5][0-9])(:[0-5][0-9])? ?(am|pm)?', 'Time'], //4:00pm\n['[PMCE]ST', 'Time'], //PST, time zone abbrevs\n['utc ?[\\+\\-]?[0-9]\\+?', 'Time'], //UTC 8+\n['[a-z0-9]*? o\\'?clock', 'Time'], //3 oclock\n['[0-9]{1,4}[/\\\\-\\\\.][0-9]{1,2}[/\\\\-\\\\.][0-9]{1,4}', 'Date'], //03/02/89, 03-02-89\n\n//money\n['^[\\-\\+]?[$€¥£][0-9]+(\\.[0-9]{1,2})?$', 'Money'], //like $5.30\n['^[\\-\\+]?[$€¥£][0-9]{1,3}(,[0-9]{3})+(\\.[0-9]{1,2})?$', 'Money'], //like $5,231.30\n\n//values\n['[0-9]{1,4}(st|nd|rd|th)?-[0-9]{1,4}(st|nd|rd|th)?', 'NumberRange'], //5-7\n['^[\\-\\+]?[0-9]{1,3}(,[0-9]{3})+(\\.[0-9]+)?$', 'NiceNumber'], //like 5,999.0\n['^[\\-\\+]?[0-9]+(\\.[0-9]+)?$', 'NumericValue'], //like +5.0\n\n['[0-9]{1,4}/[0-9]{1,4}', 'Fraction'], //3/2ths\n['[0-9]{1,2}-[0-9]{1,2}', 'Value'], //7-8\n\n//mc'adams\n['ma?c\\'.*', 'LastName'],\n//o'douggan\n['o\\'[drlkn].*', 'LastName']].map(function (a) {\n  return {\n    reg: new RegExp('^' + a[0] + '$', 'i'),\n    tag: a[1],\n    str: a[0]\n  };\n});\n\n},{}],237:[function(_dereq_,module,exports){\n'use strict';\n//regex suffix patterns and their most common parts of speech,\n//built using wordnet, by spencer kelly.\n\n//the order here matters.\n\nmodule.exports = [['^[0-9]+ ?(am|pm)$', 'Date'], ['[0-9](st|nd|rd|r?th)$', 'Ordinal'], //like 5th\n['([0-9])([a-z]{1,2})$', 'Cardinal'], //like 5kg\n['^[0-9,\\.]+$', 'Cardinal'], //like 5\n['^[a-z]et$', 'Verb'], ['cede$', 'Infinitive'], ['.[cts]hy$', 'Adjective'], ['.[st]ty$', 'Adjective'], ['.[lnr]ize$', 'Infinitive'], ['.[gk]y$', 'Adjective'], ['.fies$', 'PresentTense'], ['ities$', 'Plural'], ['.some$', 'Adjective'], ['.[nrtumcd]al$', 'Adjective'], ['.que$', 'Adjective'], ['.[tnl]ary$', 'Adjective'], ['.[di]est$', 'Superlative'], ['^(un|de|re)\\\\-[a-z]..', 'Verb'], ['.lar$', 'Adjective'], ['[bszmp]{2}y', 'Adjective'], ['.zes$', 'PresentTense'], ['.[icldtgrv]ent$', 'Adjective'], ['.[rln]ates$', 'PresentTense'], ['.[oe]ry$', 'Singular'], ['[rdntkbhs]ly$', 'Adverb'], ['.[lsrnpb]ian$', 'Adjective'], ['.[^aeiou]ial$', 'Adjective'], ['.[^aeiou]eal$', 'Adjective'], ['.[vrl]id$', 'Adjective'], ['.[ilk]er$', 'Comparative'], ['.ike$', 'Adjective'], ['.ends?$', 'Verb'], ['.wards$', 'Adverb'], ['.rmy$', 'Adjective'], ['.rol$', 'Singular'], ['.tors$', 'Noun'], ['.azy$', 'Adjective'], ['.where$', 'Adverb'], ['.ify$', 'Infinitive'], ['.bound$', 'Adjective'], ['.[^z]ens$', 'Verb'], ['.oid$', 'Adjective'], ['.vice$', 'Singular'], ['.rough$', 'Adjective'], ['.mum$', 'Adjective'], ['.teen(th)?$', 'Value'], ['.oses$', 'PresentTense'], ['.ishes$', 'PresentTense'], ['.ects$', 'PresentTense'], ['.tieth$', 'Ordinal'], ['.ices$', 'Plural'], ['.tage$', 'Infinitive'], ['.ions$', 'Plural'], ['.tion$', 'Singular'], ['.ean$', 'Adjective'], ['.[ia]sed$', 'Adjective'], ['.urned', 'PastTense'], ['.tized$', 'PastTense'], ['.[aeiou][td]ed', 'PastTense'], ['.llen$', 'Adjective'], ['.fore$', 'Adverb'], ['.ances$', 'Plural'], ['.gate$', 'Infinitive'], ['.nes$', 'PresentTense'], ['.less$', 'Adverb'], ['.ried$', 'Adjective'], ['.gone$', 'Adjective'], ['.made$', 'Adjective'], ['.ing$', 'Gerund'], //likely to be converted to adjective after lexicon pass\n['.tures$', 'Plural'], ['.ous$', 'Adjective'], ['.ports$', 'Plural'], ['. so$', 'Adverb'], ['.ints$', 'Plural'], ['.[gt]led$', 'Adjective'], ['.lked$', 'PastTense'], ['.fully$', 'Adverb'], ['.*ould$', 'Modal'], ['^[\\-\\+]?[0-9]+(\\.[0-9]+)?$', 'NumericValue'], ['[a-z]*\\\\-[a-z]*\\\\-', 'Adjective'], ['[a-z]\\'s$', 'Noun'], ['.\\'n$', 'Verb'], ['.\\'re$', 'Copula'], ['.\\'ll$', 'Modal'], ['.\\'t$', 'Verb'], ['.tches$', 'PresentTense'], ['^https?\\:?\\/\\/[a-z0-9]', 'Url'], //the colon is removed in normalisation\n['^www\\.[a-z0-9]', 'Url'], ['.ize$', 'Infinitive'], ['.[^aeiou]ise$', 'Infinitive'], ['.[aeiou]te$', 'Infinitive'], ['.ea$', 'Singular'], ['[aeiou][pns]er$', 'Singular'], ['.ia$', 'Noun'], ['.sis$', 'Singular'], ['.[aeiou]na$', 'Noun'], ['.[^aeiou]ity$', 'Singular'], ['.[^aeiou]ium$', 'Singular'], ['.[^aeiou][ei]al$', 'Adjective'], ['.ffy$', 'Adjective'], ['.[^aeiou]ic$', 'Adjective'], ['.(gg|bb|zz)ly$', 'Adjective'], ['.[aeiou]my$', 'Adjective'], ['.[^aeiou][ai]ble$', 'Adjective'], ['.[^aeiou]eable$', 'Adjective'], ['.[^aeiou]ful$', 'Adjective'], ['.[^aeiouf]ish$', 'Adjective'], ['.[^aeiou]ica$', 'Singular'], ['[aeiou][^aeiou]is$', 'Singular'], ['[^aeiou]ard$', 'Singular'], ['[^aeiou]ism$', 'Singular'], ['.[^aeiou]ity$', 'Singular'], ['.[^aeiou]ium$', 'Singular'], ['.[lstrn]us$', 'Singular'], ['..ic$', 'Adjective'], ['[aeiou][^aeiou]id$', 'Adjective'], ['.[^aeiou]ive$', 'Adjective'], ['[ea]{2}zy$', 'Adjective'], ['[^aeiou]ician$', 'Actor'], ['.keeper$', 'Actor'], ['.logist$', 'Actor'], ['..ier$', 'Actor'], ['.ettes$', 'Plural'], ['.ette$', 'Singular'], ['.[^aeiou][ao]pher$', 'Actor'], ['.tive$', 'Actor'], ['[aeiou].*ist$', 'Adjective'], ['(over|under)[a-z]{2,}$', 'Adjective'], ['[^i]fer$', 'Infinitive'], ['[aeiou]c?ked$', 'PastTense'], //hooked\n['(eastern|central|mountain|pacific)( standard)? time', 'Time'], //PST, eastern time.  Todo:(only American right now)\n//slang things\n['^um+$', 'Expression'], //ummmm\n['^([hyj]a)+$', 'Expression'], //hahah\n['^(k)+$', 'Expression'], //kkkk\n['^(yo)+$', 'Expression'], //yoyo\n['^yes+$', 'Expression'], //yessss\n['^no+$', 'Expression'], //noooo\n['^lol[sz]$', 'Expression'], //lol\n['^woo+[pt]?$', 'Expression'], //woo\n['^ug?h+$', 'Expression'], //uhh\n['^uh[ -]?oh$', 'Expression'], //uhoh\n\n//lastname patterns\n//https://en.wikipedia.org/wiki/List_of_family_name_affixes\n//macdonell\n['^ma?cd[aeiou]', 'LastName'],\n//icelandic/swedish\n['.sdottir$', 'LastName'], //female\n['.sson$', 'LastName'], //male\n//polish\n['.[oau][wvl]ski$', 'LastName'], //male\n['.[oau][wvl]ska$', 'LastName'], //female\n['.czyk$', 'LastName'], //male\n['.marek$', 'LastName'], //male\n//east-europe Hasanov, etc\n['.[^aeiou][ai][kln]ov$', 'LastName'], //\n['..chuk$', 'LastName'], //\n['..enko$', 'LastName'], //\n['.v[iy]ch$', 'LastName'], //\n//greek\n['.opoulos$', 'LastName'], //\n['.akis$', 'LastName'], //\n//lithuania\n['.auskas$', 'LastName'],\n//norway\n['.nss?en$', 'LastName']].map(function (a) {\n  return {\n    reg: new RegExp(a[0]),\n    tag: a[1],\n    str: a[0]\n  };\n});\n\n},{}]},{},[41])(41)\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/compromise/builds/compromise.js\n// module id = 235\n// module chunks = 3"],"sourceRoot":""}